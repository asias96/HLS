// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "filtr_Gauss.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const int filtr_Gauss::C_S_AXI_DATA_WIDTH = "100000";
const int filtr_Gauss::C_S_AXI_WSTRB_WIDTH = "100";
const int filtr_Gauss::C_S_AXI_ADDR_WIDTH = "100000";
const sc_logic filtr_Gauss::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<8> filtr_Gauss::ap_const_lv8_0 = "00000000";
const sc_lv<1> filtr_Gauss::ap_const_lv1_0 = "0";
const sc_logic filtr_Gauss::ap_const_logic_0 = sc_dt::Log_0;

filtr_Gauss::filtr_Gauss(sc_module_name name) : sc_module(name), mVcdFile(0) {
    filtr_Gauss_bun_1_s_axi_U = new filtr_Gauss_bun_1_s_axi<C_S_AXI_BUN_1_ADDR_WIDTH,C_S_AXI_BUN_1_DATA_WIDTH>("filtr_Gauss_bun_1_s_axi_U");
    filtr_Gauss_bun_1_s_axi_U->AWVALID(s_axi_bun_1_AWVALID);
    filtr_Gauss_bun_1_s_axi_U->AWREADY(s_axi_bun_1_AWREADY);
    filtr_Gauss_bun_1_s_axi_U->AWADDR(s_axi_bun_1_AWADDR);
    filtr_Gauss_bun_1_s_axi_U->WVALID(s_axi_bun_1_WVALID);
    filtr_Gauss_bun_1_s_axi_U->WREADY(s_axi_bun_1_WREADY);
    filtr_Gauss_bun_1_s_axi_U->WDATA(s_axi_bun_1_WDATA);
    filtr_Gauss_bun_1_s_axi_U->WSTRB(s_axi_bun_1_WSTRB);
    filtr_Gauss_bun_1_s_axi_U->ARVALID(s_axi_bun_1_ARVALID);
    filtr_Gauss_bun_1_s_axi_U->ARREADY(s_axi_bun_1_ARREADY);
    filtr_Gauss_bun_1_s_axi_U->ARADDR(s_axi_bun_1_ARADDR);
    filtr_Gauss_bun_1_s_axi_U->RVALID(s_axi_bun_1_RVALID);
    filtr_Gauss_bun_1_s_axi_U->RREADY(s_axi_bun_1_RREADY);
    filtr_Gauss_bun_1_s_axi_U->RDATA(s_axi_bun_1_RDATA);
    filtr_Gauss_bun_1_s_axi_U->RRESP(s_axi_bun_1_RRESP);
    filtr_Gauss_bun_1_s_axi_U->BVALID(s_axi_bun_1_BVALID);
    filtr_Gauss_bun_1_s_axi_U->BREADY(s_axi_bun_1_BREADY);
    filtr_Gauss_bun_1_s_axi_U->BRESP(s_axi_bun_1_BRESP);
    filtr_Gauss_bun_1_s_axi_U->ACLK(ap_clk);
    filtr_Gauss_bun_1_s_axi_U->ARESET(ap_rst_n_inv);
    filtr_Gauss_bun_1_s_axi_U->ACLK_EN(ap_var_for_const0);
    filtr_Gauss_bun_1_s_axi_U->ap_start(ap_start);
    filtr_Gauss_bun_1_s_axi_U->interrupt(interrupt);
    filtr_Gauss_bun_1_s_axi_U->ap_ready(ap_ready);
    filtr_Gauss_bun_1_s_axi_U->ap_done(ap_done);
    filtr_Gauss_bun_1_s_axi_U->ap_idle(ap_idle);
    AXIvideo2Mat_U0 = new AXIvideo2Mat("AXIvideo2Mat_U0");
    AXIvideo2Mat_U0->ap_clk(ap_clk);
    AXIvideo2Mat_U0->ap_rst(ap_rst_n_inv);
    AXIvideo2Mat_U0->ap_start(AXIvideo2Mat_U0_ap_start);
    AXIvideo2Mat_U0->start_full_n(start_for_rozmycie_U0_full_n);
    AXIvideo2Mat_U0->ap_done(AXIvideo2Mat_U0_ap_done);
    AXIvideo2Mat_U0->ap_continue(AXIvideo2Mat_U0_ap_continue);
    AXIvideo2Mat_U0->ap_idle(AXIvideo2Mat_U0_ap_idle);
    AXIvideo2Mat_U0->ap_ready(AXIvideo2Mat_U0_ap_ready);
    AXIvideo2Mat_U0->start_out(AXIvideo2Mat_U0_start_out);
    AXIvideo2Mat_U0->start_write(AXIvideo2Mat_U0_start_write);
    AXIvideo2Mat_U0->in_r_TDATA(in_r_TDATA);
    AXIvideo2Mat_U0->in_r_TVALID(in_r_TVALID);
    AXIvideo2Mat_U0->in_r_TREADY(AXIvideo2Mat_U0_in_r_TREADY);
    AXIvideo2Mat_U0->in_r_TKEEP(in_r_TKEEP);
    AXIvideo2Mat_U0->in_r_TSTRB(in_r_TSTRB);
    AXIvideo2Mat_U0->in_r_TUSER(in_r_TUSER);
    AXIvideo2Mat_U0->in_r_TLAST(in_r_TLAST);
    AXIvideo2Mat_U0->in_r_TID(in_r_TID);
    AXIvideo2Mat_U0->in_r_TDEST(in_r_TDEST);
    AXIvideo2Mat_U0->img_data_stream_V_din(AXIvideo2Mat_U0_img_data_stream_V_din);
    AXIvideo2Mat_U0->img_data_stream_V_full_n(instance_in_data_str_full_n);
    AXIvideo2Mat_U0->img_data_stream_V_write(AXIvideo2Mat_U0_img_data_stream_V_write);
    rozmycie_U0 = new rozmycie("rozmycie_U0");
    rozmycie_U0->ap_clk(ap_clk);
    rozmycie_U0->ap_rst(ap_rst_n_inv);
    rozmycie_U0->ap_start(rozmycie_U0_ap_start);
    rozmycie_U0->start_full_n(start_for_Mat2AXIvideo_U0_full_n);
    rozmycie_U0->ap_done(rozmycie_U0_ap_done);
    rozmycie_U0->ap_continue(rozmycie_U0_ap_continue);
    rozmycie_U0->ap_idle(rozmycie_U0_ap_idle);
    rozmycie_U0->ap_ready(rozmycie_U0_ap_ready);
    rozmycie_U0->start_out(rozmycie_U0_start_out);
    rozmycie_U0->start_write(rozmycie_U0_start_write);
    rozmycie_U0->img_in_data_stream_V_dout(instance_in_data_str_dout);
    rozmycie_U0->img_in_data_stream_V_empty_n(instance_in_data_str_empty_n);
    rozmycie_U0->img_in_data_stream_V_read(rozmycie_U0_img_in_data_stream_V_read);
    rozmycie_U0->img_out_data_stream_V_din(rozmycie_U0_img_out_data_stream_V_din);
    rozmycie_U0->img_out_data_stream_V_full_n(instance_out_data_st_full_n);
    rozmycie_U0->img_out_data_stream_V_write(rozmycie_U0_img_out_data_stream_V_write);
    Mat2AXIvideo_U0 = new Mat2AXIvideo("Mat2AXIvideo_U0");
    Mat2AXIvideo_U0->ap_clk(ap_clk);
    Mat2AXIvideo_U0->ap_rst(ap_rst_n_inv);
    Mat2AXIvideo_U0->ap_start(Mat2AXIvideo_U0_ap_start);
    Mat2AXIvideo_U0->ap_done(Mat2AXIvideo_U0_ap_done);
    Mat2AXIvideo_U0->ap_continue(Mat2AXIvideo_U0_ap_continue);
    Mat2AXIvideo_U0->ap_idle(Mat2AXIvideo_U0_ap_idle);
    Mat2AXIvideo_U0->ap_ready(Mat2AXIvideo_U0_ap_ready);
    Mat2AXIvideo_U0->img_data_stream_V_dout(instance_out_data_st_dout);
    Mat2AXIvideo_U0->img_data_stream_V_empty_n(instance_out_data_st_empty_n);
    Mat2AXIvideo_U0->img_data_stream_V_read(Mat2AXIvideo_U0_img_data_stream_V_read);
    Mat2AXIvideo_U0->out_r_TDATA(Mat2AXIvideo_U0_out_r_TDATA);
    Mat2AXIvideo_U0->out_r_TVALID(Mat2AXIvideo_U0_out_r_TVALID);
    Mat2AXIvideo_U0->out_r_TREADY(out_r_TREADY);
    Mat2AXIvideo_U0->out_r_TKEEP(Mat2AXIvideo_U0_out_r_TKEEP);
    Mat2AXIvideo_U0->out_r_TSTRB(Mat2AXIvideo_U0_out_r_TSTRB);
    Mat2AXIvideo_U0->out_r_TUSER(Mat2AXIvideo_U0_out_r_TUSER);
    Mat2AXIvideo_U0->out_r_TLAST(Mat2AXIvideo_U0_out_r_TLAST);
    Mat2AXIvideo_U0->out_r_TID(Mat2AXIvideo_U0_out_r_TID);
    Mat2AXIvideo_U0->out_r_TDEST(Mat2AXIvideo_U0_out_r_TDEST);
    instance_in_data_str_U = new fifo_w8_d2_A("instance_in_data_str_U");
    instance_in_data_str_U->clk(ap_clk);
    instance_in_data_str_U->reset(ap_rst_n_inv);
    instance_in_data_str_U->if_read_ce(ap_var_for_const0);
    instance_in_data_str_U->if_write_ce(ap_var_for_const0);
    instance_in_data_str_U->if_din(AXIvideo2Mat_U0_img_data_stream_V_din);
    instance_in_data_str_U->if_full_n(instance_in_data_str_full_n);
    instance_in_data_str_U->if_write(AXIvideo2Mat_U0_img_data_stream_V_write);
    instance_in_data_str_U->if_dout(instance_in_data_str_dout);
    instance_in_data_str_U->if_empty_n(instance_in_data_str_empty_n);
    instance_in_data_str_U->if_read(rozmycie_U0_img_in_data_stream_V_read);
    instance_out_data_st_U = new fifo_w8_d2_A("instance_out_data_st_U");
    instance_out_data_st_U->clk(ap_clk);
    instance_out_data_st_U->reset(ap_rst_n_inv);
    instance_out_data_st_U->if_read_ce(ap_var_for_const0);
    instance_out_data_st_U->if_write_ce(ap_var_for_const0);
    instance_out_data_st_U->if_din(rozmycie_U0_img_out_data_stream_V_din);
    instance_out_data_st_U->if_full_n(instance_out_data_st_full_n);
    instance_out_data_st_U->if_write(rozmycie_U0_img_out_data_stream_V_write);
    instance_out_data_st_U->if_dout(instance_out_data_st_dout);
    instance_out_data_st_U->if_empty_n(instance_out_data_st_empty_n);
    instance_out_data_st_U->if_read(Mat2AXIvideo_U0_img_data_stream_V_read);
    start_for_rozmycie_U0_U = new start_for_rozmycie_U0("start_for_rozmycie_U0_U");
    start_for_rozmycie_U0_U->clk(ap_clk);
    start_for_rozmycie_U0_U->reset(ap_rst_n_inv);
    start_for_rozmycie_U0_U->if_read_ce(ap_var_for_const0);
    start_for_rozmycie_U0_U->if_write_ce(ap_var_for_const0);
    start_for_rozmycie_U0_U->if_din(start_for_rozmycie_U0_din);
    start_for_rozmycie_U0_U->if_full_n(start_for_rozmycie_U0_full_n);
    start_for_rozmycie_U0_U->if_write(AXIvideo2Mat_U0_start_write);
    start_for_rozmycie_U0_U->if_dout(start_for_rozmycie_U0_dout);
    start_for_rozmycie_U0_U->if_empty_n(start_for_rozmycie_U0_empty_n);
    start_for_rozmycie_U0_U->if_read(rozmycie_U0_ap_ready);
    start_for_Mat2AXIvideo_U0_U = new start_for_Mat2AXIvideo_U0("start_for_Mat2AXIvideo_U0_U");
    start_for_Mat2AXIvideo_U0_U->clk(ap_clk);
    start_for_Mat2AXIvideo_U0_U->reset(ap_rst_n_inv);
    start_for_Mat2AXIvideo_U0_U->if_read_ce(ap_var_for_const0);
    start_for_Mat2AXIvideo_U0_U->if_write_ce(ap_var_for_const0);
    start_for_Mat2AXIvideo_U0_U->if_din(start_for_Mat2AXIvideo_U0_din);
    start_for_Mat2AXIvideo_U0_U->if_full_n(start_for_Mat2AXIvideo_U0_full_n);
    start_for_Mat2AXIvideo_U0_U->if_write(rozmycie_U0_start_write);
    start_for_Mat2AXIvideo_U0_U->if_dout(start_for_Mat2AXIvideo_U0_dout);
    start_for_Mat2AXIvideo_U0_U->if_empty_n(start_for_Mat2AXIvideo_U0_empty_n);
    start_for_Mat2AXIvideo_U0_U->if_read(Mat2AXIvideo_U0_ap_ready);

    SC_METHOD(thread_AXIvideo2Mat_U0_ap_continue);

    SC_METHOD(thread_AXIvideo2Mat_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_Mat2AXIvideo_U0_ap_continue);

    SC_METHOD(thread_Mat2AXIvideo_U0_ap_start);
    sensitive << ( start_for_Mat2AXIvideo_U0_empty_n );

    SC_METHOD(thread_Mat2AXIvideo_U0_start_full_n);

    SC_METHOD(thread_Mat2AXIvideo_U0_start_write);

    SC_METHOD(thread_ap_done);
    sensitive << ( Mat2AXIvideo_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( AXIvideo2Mat_U0_ap_idle );
    sensitive << ( rozmycie_U0_ap_idle );
    sensitive << ( Mat2AXIvideo_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( Mat2AXIvideo_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_in_r_TREADY);
    sensitive << ( AXIvideo2Mat_U0_in_r_TREADY );

    SC_METHOD(thread_out_r_TDATA);
    sensitive << ( Mat2AXIvideo_U0_out_r_TDATA );

    SC_METHOD(thread_out_r_TDEST);
    sensitive << ( Mat2AXIvideo_U0_out_r_TDEST );

    SC_METHOD(thread_out_r_TID);
    sensitive << ( Mat2AXIvideo_U0_out_r_TID );

    SC_METHOD(thread_out_r_TKEEP);
    sensitive << ( Mat2AXIvideo_U0_out_r_TKEEP );

    SC_METHOD(thread_out_r_TLAST);
    sensitive << ( Mat2AXIvideo_U0_out_r_TLAST );

    SC_METHOD(thread_out_r_TSTRB);
    sensitive << ( Mat2AXIvideo_U0_out_r_TSTRB );

    SC_METHOD(thread_out_r_TUSER);
    sensitive << ( Mat2AXIvideo_U0_out_r_TUSER );

    SC_METHOD(thread_out_r_TVALID);
    sensitive << ( Mat2AXIvideo_U0_out_r_TVALID );

    SC_METHOD(thread_rozmycie_U0_ap_continue);

    SC_METHOD(thread_rozmycie_U0_ap_start);
    sensitive << ( start_for_rozmycie_U0_empty_n );

    SC_METHOD(thread_start_for_Mat2AXIvideo_U0_din);

    SC_METHOD(thread_start_for_rozmycie_U0_din);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "filtr_Gauss_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_bun_1_AWVALID, "(port)s_axi_bun_1_AWVALID");
    sc_trace(mVcdFile, s_axi_bun_1_AWREADY, "(port)s_axi_bun_1_AWREADY");
    sc_trace(mVcdFile, s_axi_bun_1_AWADDR, "(port)s_axi_bun_1_AWADDR");
    sc_trace(mVcdFile, s_axi_bun_1_WVALID, "(port)s_axi_bun_1_WVALID");
    sc_trace(mVcdFile, s_axi_bun_1_WREADY, "(port)s_axi_bun_1_WREADY");
    sc_trace(mVcdFile, s_axi_bun_1_WDATA, "(port)s_axi_bun_1_WDATA");
    sc_trace(mVcdFile, s_axi_bun_1_WSTRB, "(port)s_axi_bun_1_WSTRB");
    sc_trace(mVcdFile, s_axi_bun_1_ARVALID, "(port)s_axi_bun_1_ARVALID");
    sc_trace(mVcdFile, s_axi_bun_1_ARREADY, "(port)s_axi_bun_1_ARREADY");
    sc_trace(mVcdFile, s_axi_bun_1_ARADDR, "(port)s_axi_bun_1_ARADDR");
    sc_trace(mVcdFile, s_axi_bun_1_RVALID, "(port)s_axi_bun_1_RVALID");
    sc_trace(mVcdFile, s_axi_bun_1_RREADY, "(port)s_axi_bun_1_RREADY");
    sc_trace(mVcdFile, s_axi_bun_1_RDATA, "(port)s_axi_bun_1_RDATA");
    sc_trace(mVcdFile, s_axi_bun_1_RRESP, "(port)s_axi_bun_1_RRESP");
    sc_trace(mVcdFile, s_axi_bun_1_BVALID, "(port)s_axi_bun_1_BVALID");
    sc_trace(mVcdFile, s_axi_bun_1_BREADY, "(port)s_axi_bun_1_BREADY");
    sc_trace(mVcdFile, s_axi_bun_1_BRESP, "(port)s_axi_bun_1_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
    sc_trace(mVcdFile, in_r_TDATA, "(port)in_r_TDATA");
    sc_trace(mVcdFile, in_r_TKEEP, "(port)in_r_TKEEP");
    sc_trace(mVcdFile, in_r_TSTRB, "(port)in_r_TSTRB");
    sc_trace(mVcdFile, in_r_TUSER, "(port)in_r_TUSER");
    sc_trace(mVcdFile, in_r_TLAST, "(port)in_r_TLAST");
    sc_trace(mVcdFile, in_r_TID, "(port)in_r_TID");
    sc_trace(mVcdFile, in_r_TDEST, "(port)in_r_TDEST");
    sc_trace(mVcdFile, out_r_TDATA, "(port)out_r_TDATA");
    sc_trace(mVcdFile, out_r_TKEEP, "(port)out_r_TKEEP");
    sc_trace(mVcdFile, out_r_TSTRB, "(port)out_r_TSTRB");
    sc_trace(mVcdFile, out_r_TUSER, "(port)out_r_TUSER");
    sc_trace(mVcdFile, out_r_TLAST, "(port)out_r_TLAST");
    sc_trace(mVcdFile, out_r_TID, "(port)out_r_TID");
    sc_trace(mVcdFile, out_r_TDEST, "(port)out_r_TDEST");
    sc_trace(mVcdFile, in_r_TVALID, "(port)in_r_TVALID");
    sc_trace(mVcdFile, in_r_TREADY, "(port)in_r_TREADY");
    sc_trace(mVcdFile, out_r_TVALID, "(port)out_r_TVALID");
    sc_trace(mVcdFile, out_r_TREADY, "(port)out_r_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_start, "AXIvideo2Mat_U0_ap_start");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_done, "AXIvideo2Mat_U0_ap_done");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_continue, "AXIvideo2Mat_U0_ap_continue");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_idle, "AXIvideo2Mat_U0_ap_idle");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_ready, "AXIvideo2Mat_U0_ap_ready");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_start_out, "AXIvideo2Mat_U0_start_out");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_start_write, "AXIvideo2Mat_U0_start_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_in_r_TREADY, "AXIvideo2Mat_U0_in_r_TREADY");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_V_din, "AXIvideo2Mat_U0_img_data_stream_V_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_V_write, "AXIvideo2Mat_U0_img_data_stream_V_write");
    sc_trace(mVcdFile, rozmycie_U0_ap_start, "rozmycie_U0_ap_start");
    sc_trace(mVcdFile, rozmycie_U0_ap_done, "rozmycie_U0_ap_done");
    sc_trace(mVcdFile, rozmycie_U0_ap_continue, "rozmycie_U0_ap_continue");
    sc_trace(mVcdFile, rozmycie_U0_ap_idle, "rozmycie_U0_ap_idle");
    sc_trace(mVcdFile, rozmycie_U0_ap_ready, "rozmycie_U0_ap_ready");
    sc_trace(mVcdFile, rozmycie_U0_start_out, "rozmycie_U0_start_out");
    sc_trace(mVcdFile, rozmycie_U0_start_write, "rozmycie_U0_start_write");
    sc_trace(mVcdFile, rozmycie_U0_img_in_data_stream_V_read, "rozmycie_U0_img_in_data_stream_V_read");
    sc_trace(mVcdFile, rozmycie_U0_img_out_data_stream_V_din, "rozmycie_U0_img_out_data_stream_V_din");
    sc_trace(mVcdFile, rozmycie_U0_img_out_data_stream_V_write, "rozmycie_U0_img_out_data_stream_V_write");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_start, "Mat2AXIvideo_U0_ap_start");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_done, "Mat2AXIvideo_U0_ap_done");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_continue, "Mat2AXIvideo_U0_ap_continue");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_idle, "Mat2AXIvideo_U0_ap_idle");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_ready, "Mat2AXIvideo_U0_ap_ready");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_img_data_stream_V_read, "Mat2AXIvideo_U0_img_data_stream_V_read");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_out_r_TDATA, "Mat2AXIvideo_U0_out_r_TDATA");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_out_r_TVALID, "Mat2AXIvideo_U0_out_r_TVALID");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_out_r_TKEEP, "Mat2AXIvideo_U0_out_r_TKEEP");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_out_r_TSTRB, "Mat2AXIvideo_U0_out_r_TSTRB");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_out_r_TUSER, "Mat2AXIvideo_U0_out_r_TUSER");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_out_r_TLAST, "Mat2AXIvideo_U0_out_r_TLAST");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_out_r_TID, "Mat2AXIvideo_U0_out_r_TID");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_out_r_TDEST, "Mat2AXIvideo_U0_out_r_TDEST");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, instance_in_data_str_full_n, "instance_in_data_str_full_n");
    sc_trace(mVcdFile, instance_in_data_str_dout, "instance_in_data_str_dout");
    sc_trace(mVcdFile, instance_in_data_str_empty_n, "instance_in_data_str_empty_n");
    sc_trace(mVcdFile, instance_out_data_st_full_n, "instance_out_data_st_full_n");
    sc_trace(mVcdFile, instance_out_data_st_dout, "instance_out_data_st_dout");
    sc_trace(mVcdFile, instance_out_data_st_empty_n, "instance_out_data_st_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, start_for_rozmycie_U0_din, "start_for_rozmycie_U0_din");
    sc_trace(mVcdFile, start_for_rozmycie_U0_full_n, "start_for_rozmycie_U0_full_n");
    sc_trace(mVcdFile, start_for_rozmycie_U0_dout, "start_for_rozmycie_U0_dout");
    sc_trace(mVcdFile, start_for_rozmycie_U0_empty_n, "start_for_rozmycie_U0_empty_n");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_din, "start_for_Mat2AXIvideo_U0_din");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_full_n, "start_for_Mat2AXIvideo_U0_full_n");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_dout, "start_for_Mat2AXIvideo_U0_dout");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_empty_n, "start_for_Mat2AXIvideo_U0_empty_n");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_start_full_n, "Mat2AXIvideo_U0_start_full_n");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_start_write, "Mat2AXIvideo_U0_start_write");
#endif

    }
    mHdltvinHandle.open("filtr_Gauss.hdltvin.dat");
    mHdltvoutHandle.open("filtr_Gauss.hdltvout.dat");
}

filtr_Gauss::~filtr_Gauss() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete filtr_Gauss_bun_1_s_axi_U;
    delete AXIvideo2Mat_U0;
    delete rozmycie_U0;
    delete Mat2AXIvideo_U0;
    delete instance_in_data_str_U;
    delete instance_out_data_st_U;
    delete start_for_rozmycie_U0_U;
    delete start_for_Mat2AXIvideo_U0_U;
}

void filtr_Gauss::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void filtr_Gauss::thread_AXIvideo2Mat_U0_ap_continue() {
    AXIvideo2Mat_U0_ap_continue = ap_const_logic_1;
}

void filtr_Gauss::thread_AXIvideo2Mat_U0_ap_start() {
    AXIvideo2Mat_U0_ap_start = ap_start.read();
}

void filtr_Gauss::thread_Mat2AXIvideo_U0_ap_continue() {
    Mat2AXIvideo_U0_ap_continue = ap_const_logic_1;
}

void filtr_Gauss::thread_Mat2AXIvideo_U0_ap_start() {
    Mat2AXIvideo_U0_ap_start = start_for_Mat2AXIvideo_U0_empty_n.read();
}

void filtr_Gauss::thread_Mat2AXIvideo_U0_start_full_n() {
    Mat2AXIvideo_U0_start_full_n = ap_const_logic_1;
}

void filtr_Gauss::thread_Mat2AXIvideo_U0_start_write() {
    Mat2AXIvideo_U0_start_write = ap_const_logic_0;
}

void filtr_Gauss::thread_ap_done() {
    ap_done = Mat2AXIvideo_U0_ap_done.read();
}

void filtr_Gauss::thread_ap_idle() {
    ap_idle = (AXIvideo2Mat_U0_ap_idle.read() & rozmycie_U0_ap_idle.read() & Mat2AXIvideo_U0_ap_idle.read());
}

void filtr_Gauss::thread_ap_ready() {
    ap_ready = AXIvideo2Mat_U0_ap_ready.read();
}

void filtr_Gauss::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void filtr_Gauss::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void filtr_Gauss::thread_ap_sync_done() {
    ap_sync_done = Mat2AXIvideo_U0_ap_done.read();
}

void filtr_Gauss::thread_ap_sync_ready() {
    ap_sync_ready = AXIvideo2Mat_U0_ap_ready.read();
}

void filtr_Gauss::thread_in_r_TREADY() {
    in_r_TREADY = AXIvideo2Mat_U0_in_r_TREADY.read();
}

void filtr_Gauss::thread_out_r_TDATA() {
    out_r_TDATA = Mat2AXIvideo_U0_out_r_TDATA.read();
}

void filtr_Gauss::thread_out_r_TDEST() {
    out_r_TDEST = Mat2AXIvideo_U0_out_r_TDEST.read();
}

void filtr_Gauss::thread_out_r_TID() {
    out_r_TID = Mat2AXIvideo_U0_out_r_TID.read();
}

void filtr_Gauss::thread_out_r_TKEEP() {
    out_r_TKEEP = Mat2AXIvideo_U0_out_r_TKEEP.read();
}

void filtr_Gauss::thread_out_r_TLAST() {
    out_r_TLAST = Mat2AXIvideo_U0_out_r_TLAST.read();
}

void filtr_Gauss::thread_out_r_TSTRB() {
    out_r_TSTRB = Mat2AXIvideo_U0_out_r_TSTRB.read();
}

void filtr_Gauss::thread_out_r_TUSER() {
    out_r_TUSER = Mat2AXIvideo_U0_out_r_TUSER.read();
}

void filtr_Gauss::thread_out_r_TVALID() {
    out_r_TVALID = Mat2AXIvideo_U0_out_r_TVALID.read();
}

void filtr_Gauss::thread_rozmycie_U0_ap_continue() {
    rozmycie_U0_ap_continue = ap_const_logic_1;
}

void filtr_Gauss::thread_rozmycie_U0_ap_start() {
    rozmycie_U0_ap_start = start_for_rozmycie_U0_empty_n.read();
}

void filtr_Gauss::thread_start_for_Mat2AXIvideo_U0_din() {
    start_for_Mat2AXIvideo_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void filtr_Gauss::thread_start_for_rozmycie_U0_din() {
    start_for_rozmycie_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void filtr_Gauss::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_bun_1_AWVALID\" :  \"" << s_axi_bun_1_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_bun_1_AWREADY\" :  \"" << s_axi_bun_1_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_bun_1_AWADDR\" :  \"" << s_axi_bun_1_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_bun_1_WVALID\" :  \"" << s_axi_bun_1_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_bun_1_WREADY\" :  \"" << s_axi_bun_1_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_bun_1_WDATA\" :  \"" << s_axi_bun_1_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_bun_1_WSTRB\" :  \"" << s_axi_bun_1_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_bun_1_ARVALID\" :  \"" << s_axi_bun_1_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_bun_1_ARREADY\" :  \"" << s_axi_bun_1_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_bun_1_ARADDR\" :  \"" << s_axi_bun_1_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_bun_1_RVALID\" :  \"" << s_axi_bun_1_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_bun_1_RREADY\" :  \"" << s_axi_bun_1_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_bun_1_RDATA\" :  \"" << s_axi_bun_1_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_bun_1_RRESP\" :  \"" << s_axi_bun_1_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_bun_1_BVALID\" :  \"" << s_axi_bun_1_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_bun_1_BREADY\" :  \"" << s_axi_bun_1_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_bun_1_BRESP\" :  \"" << s_axi_bun_1_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TDATA\" :  \"" << in_r_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TKEEP\" :  \"" << in_r_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TSTRB\" :  \"" << in_r_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TUSER\" :  \"" << in_r_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TLAST\" :  \"" << in_r_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TID\" :  \"" << in_r_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TDEST\" :  \"" << in_r_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TDATA\" :  \"" << out_r_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TKEEP\" :  \"" << out_r_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TSTRB\" :  \"" << out_r_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TUSER\" :  \"" << out_r_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TLAST\" :  \"" << out_r_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TID\" :  \"" << out_r_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TDEST\" :  \"" << out_r_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TVALID\" :  \"" << in_r_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_r_TREADY\" :  \"" << in_r_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TVALID\" :  \"" << out_r_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_r_TREADY\" :  \"" << out_r_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

