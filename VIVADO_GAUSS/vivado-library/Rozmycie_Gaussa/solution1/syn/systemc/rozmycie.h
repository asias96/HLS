// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _rozmycie_HH_
#define _rozmycie_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "filtr_Gauss_mac_muladd_6ns_8ns_14ns_14_1_1.h"
#include "filtr_Gauss_mac_muladd_7ns_8ns_14ns_15_1_1.h"
#include "filtr_Gauss_mac_muladd_6ns_8ns_14ns_15_1_1.h"
#include "rozmycie_buffer_val_0.h"

namespace ap_rtl {

struct rozmycie : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > img_in_data_stream_V_dout;
    sc_in< sc_logic > img_in_data_stream_V_empty_n;
    sc_out< sc_logic > img_in_data_stream_V_read;
    sc_out< sc_lv<8> > img_out_data_stream_V_din;
    sc_in< sc_logic > img_out_data_stream_V_full_n;
    sc_out< sc_logic > img_out_data_stream_V_write;


    // Module declarations
    rozmycie(sc_module_name name);
    SC_HAS_PROCESS(rozmycie);

    ~rozmycie();

    sc_trace_file* mVcdFile;

    rozmycie_buffer_val_0* buffer_val_0_U;
    rozmycie_buffer_val_0* buffer_val_1_U;
    filtr_Gauss_mac_muladd_6ns_8ns_14ns_14_1_1<1,1,6,8,14,14>* filtr_Gauss_mac_muladd_6ns_8ns_14ns_14_1_1_U9;
    filtr_Gauss_mac_muladd_6ns_8ns_14ns_14_1_1<1,1,6,8,14,14>* filtr_Gauss_mac_muladd_6ns_8ns_14ns_14_1_1_U10;
    filtr_Gauss_mac_muladd_7ns_8ns_14ns_15_1_1<1,1,7,8,14,15>* filtr_Gauss_mac_muladd_7ns_8ns_14ns_15_1_1_U11;
    filtr_Gauss_mac_muladd_6ns_8ns_14ns_15_1_1<1,1,6,8,14,15>* filtr_Gauss_mac_muladd_6ns_8ns_14ns_15_1_1_U12;
    filtr_Gauss_mac_muladd_6ns_8ns_14ns_14_1_1<1,1,6,8,14,14>* filtr_Gauss_mac_muladd_6ns_8ns_14ns_14_1_1_U13;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > img_in_data_stream_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > tmp_4_reg_730;
    sc_signal< sc_lv<1> > tmp_reg_706;
    sc_signal< sc_logic > img_out_data_stream_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_lv<1> > or_cond6_reg_755;
    sc_signal< sc_lv<1> > or_cond6_reg_755_pp0_iter3_reg;
    sc_signal< sc_lv<11> > col_assign_reg_198;
    sc_signal< sc_lv<1> > exitcond3_fu_209_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > i_1_fu_215_p2;
    sc_signal< sc_lv<10> > i_1_reg_701;
    sc_signal< sc_lv<1> > tmp_fu_221_p2;
    sc_signal< sc_lv<1> > icmp_fu_237_p2;
    sc_signal< sc_lv<1> > icmp_reg_711;
    sc_signal< sc_lv<1> > tmp_2_fu_243_p2;
    sc_signal< sc_lv<1> > tmp_2_reg_716;
    sc_signal< sc_lv<1> > exitcond_fu_249_p2;
    sc_signal< sc_lv<1> > exitcond_reg_721;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_predicate_op64_read_state4;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter4;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_reg_721_pp0_iter1_reg;
    sc_signal< sc_lv<11> > j_fu_255_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > tmp_4_fu_261_p2;
    sc_signal< sc_lv<1> > tmp_4_reg_730_pp0_iter1_reg;
    sc_signal< sc_lv<1> > tmp_4_reg_730_pp0_iter2_reg;
    sc_signal< sc_lv<11> > buffer_val_1_addr_reg_738;
    sc_signal< sc_lv<11> > buffer_val_0_addr_reg_744;
    sc_signal< sc_lv<1> > icmp1_fu_283_p2;
    sc_signal< sc_lv<1> > icmp1_reg_750;
    sc_signal< sc_lv<1> > icmp1_reg_750_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp1_reg_750_pp0_iter2_reg;
    sc_signal< sc_lv<1> > or_cond6_fu_295_p2;
    sc_signal< sc_lv<1> > or_cond6_reg_755_pp0_iter1_reg;
    sc_signal< sc_lv<1> > or_cond6_reg_755_pp0_iter2_reg;
    sc_signal< sc_lv<14> > grp_fu_599_p3;
    sc_signal< sc_lv<14> > tmp6_reg_759;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<14> > grp_fu_607_p3;
    sc_signal< sc_lv<14> > tmp7_reg_764;
    sc_signal< sc_lv<15> > grp_fu_615_p3;
    sc_signal< sc_lv<15> > tmp9_reg_769;
    sc_signal< sc_lv<15> > grp_fu_623_p3;
    sc_signal< sc_lv<15> > tmp10_reg_774;
    sc_signal< sc_lv<8> > tmp_12_fu_591_p3;
    sc_signal< sc_lv<8> > tmp_12_reg_779;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<11> > buffer_val_0_address0;
    sc_signal< sc_logic > buffer_val_0_ce0;
    sc_signal< sc_lv<8> > buffer_val_0_q0;
    sc_signal< sc_logic > buffer_val_0_ce1;
    sc_signal< sc_logic > buffer_val_0_we1;
    sc_signal< sc_lv<11> > buffer_val_1_address0;
    sc_signal< sc_logic > buffer_val_1_ce0;
    sc_signal< sc_lv<8> > buffer_val_1_q0;
    sc_signal< sc_logic > buffer_val_1_ce1;
    sc_signal< sc_logic > buffer_val_1_we1;
    sc_signal< sc_lv<10> > i_reg_187;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<64> > tmp_6_fu_267_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > tmp2_1_fu_96;
    sc_signal< sc_lv<32> > tmp2_fu_304_p1;
    sc_signal< sc_lv<32> > tmp1_1_fu_100;
    sc_signal< sc_lv<32> > tmp1_fu_300_p1;
    sc_signal< sc_lv<8> > okno_val_0_0_s_fu_104;
    sc_signal< sc_lv<8> > okno_val_0_0_fu_372_p3;
    sc_signal< sc_lv<8> > okno_val_0_1_s_fu_108;
    sc_signal< sc_lv<8> > okno_val_1_0_s_fu_112;
    sc_signal< sc_lv<8> > okno_val_1_0_fu_365_p3;
    sc_signal< sc_lv<8> > okno_val_1_1_s_fu_116;
    sc_signal< sc_lv<8> > okno_val_0_0_1_fu_120;
    sc_signal< sc_lv<8> > okno_val_2_0_s_fu_124;
    sc_signal< sc_lv<8> > okno_val_2_0_fu_358_p3;
    sc_signal< sc_lv<8> > okno_val_2_1_s_fu_128;
    sc_signal< sc_lv<9> > tmp_1_fu_227_p4;
    sc_signal< sc_lv<10> > tmp_13_fu_273_p4;
    sc_signal< sc_lv<1> > tmp_s_fu_289_p2;
    sc_signal< sc_lv<8> > okno_val_2_0_1_fu_350_p1;
    sc_signal< sc_lv<8> > okno_val_1_0_1_fu_354_p1;
    sc_signal< sc_lv<13> > tmp_14_fu_387_p3;
    sc_signal< sc_lv<14> > p_shl1_fu_395_p1;
    sc_signal< sc_lv<14> > rhs_V_0_1_i_cast_fu_383_p1;
    sc_signal< sc_lv<13> > tmp_15_fu_413_p3;
    sc_signal< sc_lv<14> > p_shl2_fu_421_p1;
    sc_signal< sc_lv<14> > rhs_V_1_i_cast_fu_409_p1;
    sc_signal< sc_lv<13> > tmp_16_fu_439_p3;
    sc_signal< sc_lv<14> > p_shl3_fu_447_p1;
    sc_signal< sc_lv<14> > rhs_V_1_2_i_cast_fu_435_p1;
    sc_signal< sc_lv<14> > ret_V_1_2_i_fu_451_p2;
    sc_signal< sc_lv<13> > tmp_17_fu_469_p3;
    sc_signal< sc_lv<14> > p_shl_fu_477_p1;
    sc_signal< sc_lv<14> > rhs_V_2_1_i_cast_fu_465_p1;
    sc_signal< sc_lv<14> > grp_fu_631_p3;
    sc_signal< sc_lv<1> > tmp4_fu_537_p2;
    sc_signal< sc_lv<1> > tmp3_fu_533_p2;
    sc_signal< sc_lv<15> > tmp6_cast_fu_547_p1;
    sc_signal< sc_lv<15> > tmp7_cast_fu_550_p1;
    sc_signal< sc_lv<15> > tmp5_fu_553_p2;
    sc_signal< sc_lv<16> > tmp9_cast_fu_563_p1;
    sc_signal< sc_lv<16> > tmp10_cast_fu_566_p1;
    sc_signal< sc_lv<16> > tmp5_cast_fu_559_p1;
    sc_signal< sc_lv<16> > tmp8_fu_569_p2;
    sc_signal< sc_lv<16> > acc_V_2_2_i_fu_575_p2;
    sc_signal< sc_lv<1> > or_cond5_fu_541_p2;
    sc_signal< sc_lv<8> > v0_assign_fu_581_p4;
    sc_signal< sc_lv<6> > grp_fu_599_p0;
    sc_signal< sc_lv<8> > grp_fu_599_p1;
    sc_signal< sc_lv<14> > grp_fu_599_p2;
    sc_signal< sc_lv<6> > grp_fu_607_p0;
    sc_signal< sc_lv<8> > grp_fu_607_p1;
    sc_signal< sc_lv<14> > grp_fu_607_p2;
    sc_signal< sc_lv<7> > grp_fu_615_p0;
    sc_signal< sc_lv<8> > grp_fu_615_p1;
    sc_signal< sc_lv<14> > grp_fu_615_p2;
    sc_signal< sc_lv<6> > grp_fu_623_p0;
    sc_signal< sc_lv<8> > grp_fu_623_p1;
    sc_signal< sc_lv<14> > grp_fu_623_p2;
    sc_signal< sc_lv<6> > grp_fu_631_p0;
    sc_signal< sc_lv<8> > grp_fu_631_p1;
    sc_signal< sc_lv<14> > grp_fu_631_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<14> > grp_fu_599_p10;
    sc_signal< sc_lv<14> > grp_fu_607_p10;
    sc_signal< sc_lv<15> > grp_fu_615_p10;
    sc_signal< sc_lv<15> > grp_fu_615_p20;
    sc_signal< sc_lv<14> > grp_fu_623_p10;
    sc_signal< sc_lv<15> > grp_fu_623_p20;
    sc_signal< sc_lv<14> > grp_fu_631_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state8;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<10> ap_const_lv10_2D1;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<10> ap_const_lv10_2D0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<11> ap_const_lv11_501;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<11> ap_const_lv11_500;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<14> ap_const_lv14_13;
    static const sc_lv<15> ap_const_lv15_34;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_acc_V_2_2_i_fu_575_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state6_pp0_stage0_iter3();
    void thread_ap_block_state7_pp0_stage0_iter4();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_predicate_op64_read_state4();
    void thread_ap_ready();
    void thread_buffer_val_0_address0();
    void thread_buffer_val_0_ce0();
    void thread_buffer_val_0_ce1();
    void thread_buffer_val_0_we1();
    void thread_buffer_val_1_address0();
    void thread_buffer_val_1_ce0();
    void thread_buffer_val_1_ce1();
    void thread_buffer_val_1_we1();
    void thread_exitcond3_fu_209_p2();
    void thread_exitcond_fu_249_p2();
    void thread_grp_fu_599_p0();
    void thread_grp_fu_599_p1();
    void thread_grp_fu_599_p10();
    void thread_grp_fu_599_p2();
    void thread_grp_fu_607_p0();
    void thread_grp_fu_607_p1();
    void thread_grp_fu_607_p10();
    void thread_grp_fu_607_p2();
    void thread_grp_fu_615_p0();
    void thread_grp_fu_615_p1();
    void thread_grp_fu_615_p10();
    void thread_grp_fu_615_p2();
    void thread_grp_fu_615_p20();
    void thread_grp_fu_623_p0();
    void thread_grp_fu_623_p1();
    void thread_grp_fu_623_p10();
    void thread_grp_fu_623_p2();
    void thread_grp_fu_623_p20();
    void thread_grp_fu_631_p0();
    void thread_grp_fu_631_p1();
    void thread_grp_fu_631_p10();
    void thread_grp_fu_631_p2();
    void thread_i_1_fu_215_p2();
    void thread_icmp1_fu_283_p2();
    void thread_icmp_fu_237_p2();
    void thread_img_in_data_stream_V_blk_n();
    void thread_img_in_data_stream_V_read();
    void thread_img_out_data_stream_V_blk_n();
    void thread_img_out_data_stream_V_din();
    void thread_img_out_data_stream_V_write();
    void thread_internal_ap_ready();
    void thread_j_fu_255_p2();
    void thread_okno_val_0_0_fu_372_p3();
    void thread_okno_val_1_0_1_fu_354_p1();
    void thread_okno_val_1_0_fu_365_p3();
    void thread_okno_val_2_0_1_fu_350_p1();
    void thread_okno_val_2_0_fu_358_p3();
    void thread_or_cond5_fu_541_p2();
    void thread_or_cond6_fu_295_p2();
    void thread_p_shl1_fu_395_p1();
    void thread_p_shl2_fu_421_p1();
    void thread_p_shl3_fu_447_p1();
    void thread_p_shl_fu_477_p1();
    void thread_real_start();
    void thread_ret_V_1_2_i_fu_451_p2();
    void thread_rhs_V_0_1_i_cast_fu_383_p1();
    void thread_rhs_V_1_2_i_cast_fu_435_p1();
    void thread_rhs_V_1_i_cast_fu_409_p1();
    void thread_rhs_V_2_1_i_cast_fu_465_p1();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp10_cast_fu_566_p1();
    void thread_tmp1_fu_300_p1();
    void thread_tmp2_fu_304_p1();
    void thread_tmp3_fu_533_p2();
    void thread_tmp4_fu_537_p2();
    void thread_tmp5_cast_fu_559_p1();
    void thread_tmp5_fu_553_p2();
    void thread_tmp6_cast_fu_547_p1();
    void thread_tmp7_cast_fu_550_p1();
    void thread_tmp8_fu_569_p2();
    void thread_tmp9_cast_fu_563_p1();
    void thread_tmp_12_fu_591_p3();
    void thread_tmp_13_fu_273_p4();
    void thread_tmp_14_fu_387_p3();
    void thread_tmp_15_fu_413_p3();
    void thread_tmp_16_fu_439_p3();
    void thread_tmp_17_fu_469_p3();
    void thread_tmp_1_fu_227_p4();
    void thread_tmp_2_fu_243_p2();
    void thread_tmp_4_fu_261_p2();
    void thread_tmp_6_fu_267_p1();
    void thread_tmp_fu_221_p2();
    void thread_tmp_s_fu_289_p2();
    void thread_v0_assign_fu_581_p4();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
