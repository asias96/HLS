// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "gauss_blur.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic gauss_blur::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic gauss_blur::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> gauss_blur::ap_ST_fsm_state1 = "1";
const sc_lv<4> gauss_blur::ap_ST_fsm_state2 = "10";
const sc_lv<4> gauss_blur::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> gauss_blur::ap_ST_fsm_state9 = "1000";
const bool gauss_blur::ap_const_boolean_1 = true;
const sc_lv<32> gauss_blur::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> gauss_blur::ap_const_lv32_2 = "10";
const bool gauss_blur::ap_const_boolean_0 = false;
const sc_lv<1> gauss_blur::ap_const_lv1_1 = "1";
const sc_lv<32> gauss_blur::ap_const_lv32_1 = "1";
const sc_lv<1> gauss_blur::ap_const_lv1_0 = "0";
const sc_lv<10> gauss_blur::ap_const_lv10_0 = "0000000000";
const sc_lv<32> gauss_blur::ap_const_lv32_3 = "11";
const sc_lv<11> gauss_blur::ap_const_lv11_0 = "00000000000";
const sc_lv<10> gauss_blur::ap_const_lv10_2D1 = "1011010001";
const sc_lv<10> gauss_blur::ap_const_lv10_1 = "1";
const sc_lv<10> gauss_blur::ap_const_lv10_2D0 = "1011010000";
const sc_lv<32> gauss_blur::ap_const_lv32_9 = "1001";
const sc_lv<9> gauss_blur::ap_const_lv9_0 = "000000000";
const sc_lv<11> gauss_blur::ap_const_lv11_501 = "10100000001";
const sc_lv<11> gauss_blur::ap_const_lv11_1 = "1";
const sc_lv<11> gauss_blur::ap_const_lv11_500 = "10100000000";
const sc_lv<32> gauss_blur::ap_const_lv32_A = "1010";
const sc_lv<18> gauss_blur::ap_const_lv18_133 = "100110011";
const sc_lv<18> gauss_blur::ap_const_lv18_1FB = "111111011";
const sc_lv<32> gauss_blur::ap_const_lv32_C = "1100";
const sc_lv<32> gauss_blur::ap_const_lv32_13 = "10011";
const sc_lv<8> gauss_blur::ap_const_lv8_0 = "00000000";
const sc_lv<19> gauss_blur::ap_const_lv19_344 = "1101000100";

gauss_blur::gauss_blur(sc_module_name name) : sc_module(name), mVcdFile(0) {
    buff_val_0_U = new gauss_blur_buff_val_0("buff_val_0_U");
    buff_val_0_U->clk(ap_clk);
    buff_val_0_U->reset(ap_rst);
    buff_val_0_U->address0(buff_val_0_address0);
    buff_val_0_U->ce0(buff_val_0_ce0);
    buff_val_0_U->q0(buff_val_0_q0);
    buff_val_0_U->address1(buff_val_0_address1);
    buff_val_0_U->ce1(buff_val_0_ce1);
    buff_val_0_U->we1(buff_val_0_we1);
    buff_val_0_U->d1(img_in_data_stream_V_dout);
    buff_val_1_U = new gauss_blur_buff_val_0("buff_val_1_U");
    buff_val_1_U->clk(ap_clk);
    buff_val_1_U->reset(ap_rst);
    buff_val_1_U->address0(buff_val_1_address0);
    buff_val_1_U->ce0(buff_val_1_ce0);
    buff_val_1_U->q0(buff_val_1_q0);
    buff_val_1_U->address1(buff_val_1_addr_reg_674);
    buff_val_1_U->ce1(buff_val_1_ce1);
    buff_val_1_U->we1(buff_val_1_we1);
    buff_val_1_U->d1(buff_val_0_q0);
    gauss_mul_mul_8ns_11ns_19_1_1_U9 = new gauss_mul_mul_8ns_11ns_19_1_1<1,1,8,11,19>("gauss_mul_mul_8ns_11ns_19_1_1_U9");
    gauss_mul_mul_8ns_11ns_19_1_1_U9->din0(ret_V_1_1_i_fu_532_p0);
    gauss_mul_mul_8ns_11ns_19_1_1_U9->din1(ret_V_1_1_i_fu_532_p1);
    gauss_mul_mul_8ns_11ns_19_1_1_U9->dout(ret_V_1_1_i_fu_532_p2);
    gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U10 = new gauss_mac_muladd_8ns_10ns_18ns_18_1_1<1,1,8,10,18,18>("gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U10");
    gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U10->din0(grp_fu_538_p0);
    gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U10->din1(grp_fu_538_p1);
    gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U10->din2(grp_fu_538_p2);
    gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U10->dout(grp_fu_538_p3);
    gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U11 = new gauss_mac_muladd_8ns_10ns_18ns_18_1_1<1,1,8,10,18,18>("gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U11");
    gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U11->din0(grp_fu_546_p0);
    gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U11->din1(grp_fu_546_p1);
    gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U11->din2(grp_fu_546_p2);
    gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U11->dout(grp_fu_546_p3);
    gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U12 = new gauss_mac_muladd_8ns_10ns_18ns_18_1_1<1,1,8,10,18,18>("gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U12");
    gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U12->din0(grp_fu_554_p0);
    gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U12->din1(grp_fu_554_p1);
    gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U12->din2(grp_fu_554_p2);
    gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U12->dout(grp_fu_554_p3);
    gauss_mac_muladd_8ns_10ns_19ns_19_1_1_U13 = new gauss_mac_muladd_8ns_10ns_19ns_19_1_1<1,1,8,10,19,19>("gauss_mac_muladd_8ns_10ns_19ns_19_1_1_U13");
    gauss_mac_muladd_8ns_10ns_19ns_19_1_1_U13->din0(grp_fu_562_p0);
    gauss_mac_muladd_8ns_10ns_19ns_19_1_1_U13->din1(grp_fu_562_p1);
    gauss_mac_muladd_8ns_10ns_19ns_19_1_1_U13->din2(ret_V_1_1_i_reg_714);
    gauss_mac_muladd_8ns_10ns_19ns_19_1_1_U13->dout(grp_fu_562_p3);
    gauss_mac_muladd_8ns_10ns_18ns_19_1_1_U14 = new gauss_mac_muladd_8ns_10ns_18ns_19_1_1<1,1,8,10,18,19>("gauss_mac_muladd_8ns_10ns_18ns_19_1_1_U14");
    gauss_mac_muladd_8ns_10ns_18ns_19_1_1_U14->din0(grp_fu_569_p0);
    gauss_mac_muladd_8ns_10ns_18ns_19_1_1_U14->din1(grp_fu_569_p1);
    gauss_mac_muladd_8ns_10ns_18ns_19_1_1_U14->din2(grp_fu_569_p2);
    gauss_mac_muladd_8ns_10ns_18ns_19_1_1_U14->dout(grp_fu_569_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_acc_V_2_2_i_fu_508_p2);
    sensitive << ( tmp3_cast_fu_492_p1 );
    sensitive << ( tmp6_fu_502_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( img_in_data_stream_V_empty_n );
    sensitive << ( img_out_data_stream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_reg_685 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( or_cond7_reg_690_pp0_iter4_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( img_in_data_stream_V_empty_n );
    sensitive << ( img_out_data_stream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_reg_685 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( or_cond7_reg_690_pp0_iter4_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( img_in_data_stream_V_empty_n );
    sensitive << ( img_out_data_stream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_reg_685 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( or_cond7_reg_690_pp0_iter4_reg );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( img_in_data_stream_V_empty_n );
    sensitive << ( or_cond_reg_685 );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter5);
    sensitive << ( img_out_data_stream_V_full_n );
    sensitive << ( or_cond7_reg_690_pp0_iter4_reg );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( exitcond_fu_255_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( exitcond3_fu_215_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    SC_METHOD(thread_ap_phi_mux_col_assign_phi_fu_207_p4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( col_assign_reg_203 );
    sensitive << ( exitcond_reg_658 );
    sensitive << ( j_reg_662 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_buff_val_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_5_fu_273_p1 );

    SC_METHOD(thread_buff_val_0_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_7_fu_305_p1 );

    SC_METHOD(thread_buff_val_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_buff_val_0_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buff_val_0_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_reg_685 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buff_val_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_5_fu_273_p1 );

    SC_METHOD(thread_buff_val_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_buff_val_1_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_buff_val_1_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_4_reg_667 );

    SC_METHOD(thread_exitcond3_fu_215_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_192 );

    SC_METHOD(thread_exitcond_fu_255_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_col_assign_phi_fu_207_p4 );

    SC_METHOD(thread_grp_fu_538_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( grp_fu_538_p00 );

    SC_METHOD(thread_grp_fu_538_p00);
    sensitive << ( window_val_2_0_s_fu_122 );

    SC_METHOD(thread_grp_fu_538_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_grp_fu_538_p2);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ret_V_2_2_i_fu_371_p0 );

    SC_METHOD(thread_grp_fu_546_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( grp_fu_546_p00 );

    SC_METHOD(thread_grp_fu_546_p00);
    sensitive << ( pWindow_val_0_0_re_fu_410_p3 );

    SC_METHOD(thread_grp_fu_546_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_grp_fu_546_p2);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ret_V_0_1_i_fu_425_p0 );

    SC_METHOD(thread_grp_fu_554_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( grp_fu_554_p00 );

    SC_METHOD(thread_grp_fu_554_p00);
    sensitive << ( window_val_0_1_s_fu_106 );

    SC_METHOD(thread_grp_fu_554_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_grp_fu_554_p2);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ret_V_1_i_fu_438_p0 );

    SC_METHOD(thread_grp_fu_562_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( grp_fu_562_p00 );

    SC_METHOD(thread_grp_fu_562_p00);
    sensitive << ( window_val_1_1_s_fu_114 );

    SC_METHOD(thread_grp_fu_562_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_grp_fu_569_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( grp_fu_569_p00 );

    SC_METHOD(thread_grp_fu_569_p00);
    sensitive << ( pWindow_val_2_0_re_reg_704 );

    SC_METHOD(thread_grp_fu_569_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_grp_fu_569_p2);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( grp_fu_569_p20 );

    SC_METHOD(thread_grp_fu_569_p20);
    sensitive << ( tmp9_reg_719 );

    SC_METHOD(thread_i_1_fu_221_p2);
    sensitive << ( i_reg_192 );

    SC_METHOD(thread_icmp1_fu_320_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( tmp_8_fu_310_p4 );

    SC_METHOD(thread_icmp_fu_243_p2);
    sensitive << ( exitcond3_fu_215_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_1_10_fu_233_p4 );

    SC_METHOD(thread_img_in_data_stream_V_blk_n);
    sensitive << ( img_in_data_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( or_cond_reg_685 );

    SC_METHOD(thread_img_in_data_stream_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_reg_685 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_img_out_data_stream_V_blk_n);
    sensitive << ( img_out_data_stream_V_full_n );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( or_cond7_reg_690_pp0_iter4_reg );

    SC_METHOD(thread_img_out_data_stream_V_din);
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( or_cond7_reg_690_pp0_iter4_reg );
    sensitive << ( tmp_11_reg_749 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_img_out_data_stream_V_write);
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( or_cond7_reg_690_pp0_iter4_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( exitcond3_fu_215_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_j_fu_261_p2);
    sensitive << ( ap_phi_mux_col_assign_phi_fu_207_p4 );

    SC_METHOD(thread_or_cond6_fu_475_p2);
    sensitive << ( or_cond_reg_685_pp0_iter3_reg );
    sensitive << ( tmp1_fu_471_p2 );

    SC_METHOD(thread_or_cond7_fu_290_p2);
    sensitive << ( tmp_2_11_reg_653 );
    sensitive << ( tmp_9_fu_284_p2 );

    SC_METHOD(thread_or_cond_fu_279_p2);
    sensitive << ( tmp_reg_643 );
    sensitive << ( tmp_4_fu_267_p2 );

    SC_METHOD(thread_pWindow_val_0_0_re_fu_410_p3);
    sensitive << ( tmp_4_reg_667_pp0_iter2_reg );
    sensitive << ( window_val_0_0_s_fu_102 );
    sensitive << ( pix_in_val_0_s_fu_118 );

    SC_METHOD(thread_pWindow_val_1_0_re_fu_352_p3);
    sensitive << ( tmp_4_reg_667_pp0_iter1_reg );
    sensitive << ( tmp_1_s_fu_98 );
    sensitive << ( window_val_1_0_s_fu_110 );

    SC_METHOD(thread_pWindow_val_2_0_re_fu_345_p3);
    sensitive << ( tmp_4_reg_667_pp0_iter1_reg );
    sensitive << ( tmp_2_s_fu_94 );
    sensitive << ( window_val_2_0_s_fu_122 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_ret_V_0_1_i_fu_425_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ret_V_0_1_i_fu_425_p00 );

    SC_METHOD(thread_ret_V_0_1_i_fu_425_p00);
    sensitive << ( window_val_0_0_s_fu_102 );

    SC_METHOD(thread_ret_V_1_1_i_fu_532_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ret_V_1_1_i_fu_532_p00 );

    SC_METHOD(thread_ret_V_1_1_i_fu_532_p00);
    sensitive << ( window_val_1_0_s_fu_110 );

    SC_METHOD(thread_ret_V_1_1_i_fu_532_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ret_V_1_i_fu_438_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ret_V_1_i_fu_438_p00 );

    SC_METHOD(thread_ret_V_1_i_fu_438_p00);
    sensitive << ( pWindow_val_1_0_re_reg_709 );

    SC_METHOD(thread_ret_V_2_2_i_fu_371_p0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ret_V_2_2_i_fu_371_p00 );

    SC_METHOD(thread_ret_V_2_2_i_fu_371_p00);
    sensitive << ( window_val_2_1_s_fu_126 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_tmp1_fu_471_p2);
    sensitive << ( icmp_reg_648 );
    sensitive << ( icmp1_reg_699_pp0_iter3_reg );

    SC_METHOD(thread_tmp3_cast_fu_492_p1);
    sensitive << ( tmp3_fu_486_p2 );

    SC_METHOD(thread_tmp3_fu_486_p2);
    sensitive << ( tmp4_cast_fu_480_p1 );
    sensitive << ( tmp5_cast_fu_483_p1 );

    SC_METHOD(thread_tmp4_cast_fu_480_p1);
    sensitive << ( tmp4_reg_729 );

    SC_METHOD(thread_tmp5_cast_fu_483_p1);
    sensitive << ( tmp5_reg_734 );

    SC_METHOD(thread_tmp6_fu_502_p2);
    sensitive << ( tmp7_cast_fu_496_p1 );
    sensitive << ( tmp8_cast_fu_499_p1 );

    SC_METHOD(thread_tmp7_cast_fu_496_p1);
    sensitive << ( tmp7_reg_739 );

    SC_METHOD(thread_tmp8_cast_fu_499_p1);
    sensitive << ( tmp8_reg_744 );

    SC_METHOD(thread_tmp_11_fu_524_p3);
    sensitive << ( or_cond6_fu_475_p2 );
    sensitive << ( v0_assign_fu_514_p4 );

    SC_METHOD(thread_tmp_1_10_fu_233_p4);
    sensitive << ( i_reg_192 );

    SC_METHOD(thread_tmp_2_11_fu_249_p2);
    sensitive << ( exitcond3_fu_215_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_192 );

    SC_METHOD(thread_tmp_4_fu_267_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_fu_255_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_col_assign_phi_fu_207_p4 );

    SC_METHOD(thread_tmp_5_fu_273_p1);
    sensitive << ( ap_phi_mux_col_assign_phi_fu_207_p4 );

    SC_METHOD(thread_tmp_7_fu_305_p1);
    sensitive << ( col_assign_reg_203 );

    SC_METHOD(thread_tmp_8_fu_310_p4);
    sensitive << ( col_assign_reg_203 );

    SC_METHOD(thread_tmp_9_fu_284_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( exitcond_fu_255_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_col_assign_phi_fu_207_p4 );

    SC_METHOD(thread_tmp_fu_227_p2);
    sensitive << ( exitcond3_fu_215_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_192 );

    SC_METHOD(thread_v0_assign_fu_514_p4);
    sensitive << ( acc_V_2_2_i_fu_508_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( exitcond3_fu_215_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_255_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter4 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "gauss_blur_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, img_in_data_stream_V_dout, "(port)img_in_data_stream_V_dout");
    sc_trace(mVcdFile, img_in_data_stream_V_empty_n, "(port)img_in_data_stream_V_empty_n");
    sc_trace(mVcdFile, img_in_data_stream_V_read, "(port)img_in_data_stream_V_read");
    sc_trace(mVcdFile, img_out_data_stream_V_din, "(port)img_out_data_stream_V_din");
    sc_trace(mVcdFile, img_out_data_stream_V_full_n, "(port)img_out_data_stream_V_full_n");
    sc_trace(mVcdFile, img_out_data_stream_V_write, "(port)img_out_data_stream_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, img_in_data_stream_V_blk_n, "img_in_data_stream_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, or_cond_reg_685, "or_cond_reg_685");
    sc_trace(mVcdFile, img_out_data_stream_V_blk_n, "img_out_data_stream_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, or_cond7_reg_690, "or_cond7_reg_690");
    sc_trace(mVcdFile, or_cond7_reg_690_pp0_iter4_reg, "or_cond7_reg_690_pp0_iter4_reg");
    sc_trace(mVcdFile, col_assign_reg_203, "col_assign_reg_203");
    sc_trace(mVcdFile, exitcond3_fu_215_p2, "exitcond3_fu_215_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_1_fu_221_p2, "i_1_fu_221_p2");
    sc_trace(mVcdFile, i_1_reg_638, "i_1_reg_638");
    sc_trace(mVcdFile, tmp_fu_227_p2, "tmp_fu_227_p2");
    sc_trace(mVcdFile, tmp_reg_643, "tmp_reg_643");
    sc_trace(mVcdFile, icmp_fu_243_p2, "icmp_fu_243_p2");
    sc_trace(mVcdFile, icmp_reg_648, "icmp_reg_648");
    sc_trace(mVcdFile, tmp_2_11_fu_249_p2, "tmp_2_11_fu_249_p2");
    sc_trace(mVcdFile, tmp_2_11_reg_653, "tmp_2_11_reg_653");
    sc_trace(mVcdFile, exitcond_fu_255_p2, "exitcond_fu_255_p2");
    sc_trace(mVcdFile, exitcond_reg_658, "exitcond_reg_658");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter3, "ap_block_state6_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter4, "ap_block_state7_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter5, "ap_block_state8_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, exitcond_reg_658_pp0_iter1_reg, "exitcond_reg_658_pp0_iter1_reg");
    sc_trace(mVcdFile, exitcond_reg_658_pp0_iter2_reg, "exitcond_reg_658_pp0_iter2_reg");
    sc_trace(mVcdFile, j_fu_261_p2, "j_fu_261_p2");
    sc_trace(mVcdFile, j_reg_662, "j_reg_662");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_4_fu_267_p2, "tmp_4_fu_267_p2");
    sc_trace(mVcdFile, tmp_4_reg_667, "tmp_4_reg_667");
    sc_trace(mVcdFile, tmp_4_reg_667_pp0_iter1_reg, "tmp_4_reg_667_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_4_reg_667_pp0_iter2_reg, "tmp_4_reg_667_pp0_iter2_reg");
    sc_trace(mVcdFile, buff_val_1_addr_reg_674, "buff_val_1_addr_reg_674");
    sc_trace(mVcdFile, or_cond_fu_279_p2, "or_cond_fu_279_p2");
    sc_trace(mVcdFile, or_cond_reg_685_pp0_iter1_reg, "or_cond_reg_685_pp0_iter1_reg");
    sc_trace(mVcdFile, or_cond_reg_685_pp0_iter2_reg, "or_cond_reg_685_pp0_iter2_reg");
    sc_trace(mVcdFile, or_cond_reg_685_pp0_iter3_reg, "or_cond_reg_685_pp0_iter3_reg");
    sc_trace(mVcdFile, or_cond7_fu_290_p2, "or_cond7_fu_290_p2");
    sc_trace(mVcdFile, or_cond7_reg_690_pp0_iter1_reg, "or_cond7_reg_690_pp0_iter1_reg");
    sc_trace(mVcdFile, or_cond7_reg_690_pp0_iter2_reg, "or_cond7_reg_690_pp0_iter2_reg");
    sc_trace(mVcdFile, or_cond7_reg_690_pp0_iter3_reg, "or_cond7_reg_690_pp0_iter3_reg");
    sc_trace(mVcdFile, tmp_12_reg_694, "tmp_12_reg_694");
    sc_trace(mVcdFile, icmp1_fu_320_p2, "icmp1_fu_320_p2");
    sc_trace(mVcdFile, icmp1_reg_699, "icmp1_reg_699");
    sc_trace(mVcdFile, icmp1_reg_699_pp0_iter2_reg, "icmp1_reg_699_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp1_reg_699_pp0_iter3_reg, "icmp1_reg_699_pp0_iter3_reg");
    sc_trace(mVcdFile, pWindow_val_2_0_re_fu_345_p3, "pWindow_val_2_0_re_fu_345_p3");
    sc_trace(mVcdFile, pWindow_val_2_0_re_reg_704, "pWindow_val_2_0_re_reg_704");
    sc_trace(mVcdFile, pWindow_val_1_0_re_fu_352_p3, "pWindow_val_1_0_re_fu_352_p3");
    sc_trace(mVcdFile, pWindow_val_1_0_re_reg_709, "pWindow_val_1_0_re_reg_709");
    sc_trace(mVcdFile, ret_V_1_1_i_fu_532_p2, "ret_V_1_1_i_fu_532_p2");
    sc_trace(mVcdFile, ret_V_1_1_i_reg_714, "ret_V_1_1_i_reg_714");
    sc_trace(mVcdFile, grp_fu_538_p3, "grp_fu_538_p3");
    sc_trace(mVcdFile, tmp9_reg_719, "tmp9_reg_719");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, window_val_1_0_load_reg_724, "window_val_1_0_load_reg_724");
    sc_trace(mVcdFile, grp_fu_546_p3, "grp_fu_546_p3");
    sc_trace(mVcdFile, tmp4_reg_729, "tmp4_reg_729");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, grp_fu_554_p3, "grp_fu_554_p3");
    sc_trace(mVcdFile, tmp5_reg_734, "tmp5_reg_734");
    sc_trace(mVcdFile, grp_fu_562_p3, "grp_fu_562_p3");
    sc_trace(mVcdFile, tmp7_reg_739, "tmp7_reg_739");
    sc_trace(mVcdFile, grp_fu_569_p3, "grp_fu_569_p3");
    sc_trace(mVcdFile, tmp8_reg_744, "tmp8_reg_744");
    sc_trace(mVcdFile, tmp_11_fu_524_p3, "tmp_11_fu_524_p3");
    sc_trace(mVcdFile, tmp_11_reg_749, "tmp_11_reg_749");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, buff_val_0_address0, "buff_val_0_address0");
    sc_trace(mVcdFile, buff_val_0_ce0, "buff_val_0_ce0");
    sc_trace(mVcdFile, buff_val_0_q0, "buff_val_0_q0");
    sc_trace(mVcdFile, buff_val_0_address1, "buff_val_0_address1");
    sc_trace(mVcdFile, buff_val_0_ce1, "buff_val_0_ce1");
    sc_trace(mVcdFile, buff_val_0_we1, "buff_val_0_we1");
    sc_trace(mVcdFile, buff_val_1_address0, "buff_val_1_address0");
    sc_trace(mVcdFile, buff_val_1_ce0, "buff_val_1_ce0");
    sc_trace(mVcdFile, buff_val_1_q0, "buff_val_1_q0");
    sc_trace(mVcdFile, buff_val_1_ce1, "buff_val_1_ce1");
    sc_trace(mVcdFile, buff_val_1_we1, "buff_val_1_we1");
    sc_trace(mVcdFile, i_reg_192, "i_reg_192");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_phi_mux_col_assign_phi_fu_207_p4, "ap_phi_mux_col_assign_phi_fu_207_p4");
    sc_trace(mVcdFile, tmp_5_fu_273_p1, "tmp_5_fu_273_p1");
    sc_trace(mVcdFile, tmp_7_fu_305_p1, "tmp_7_fu_305_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, tmp_2_s_fu_94, "tmp_2_s_fu_94");
    sc_trace(mVcdFile, tmp_1_s_fu_98, "tmp_1_s_fu_98");
    sc_trace(mVcdFile, window_val_0_0_s_fu_102, "window_val_0_0_s_fu_102");
    sc_trace(mVcdFile, pWindow_val_0_0_re_fu_410_p3, "pWindow_val_0_0_re_fu_410_p3");
    sc_trace(mVcdFile, window_val_0_1_s_fu_106, "window_val_0_1_s_fu_106");
    sc_trace(mVcdFile, window_val_1_0_s_fu_110, "window_val_1_0_s_fu_110");
    sc_trace(mVcdFile, window_val_1_1_s_fu_114, "window_val_1_1_s_fu_114");
    sc_trace(mVcdFile, pix_in_val_0_s_fu_118, "pix_in_val_0_s_fu_118");
    sc_trace(mVcdFile, window_val_2_0_s_fu_122, "window_val_2_0_s_fu_122");
    sc_trace(mVcdFile, window_val_2_1_s_fu_126, "window_val_2_1_s_fu_126");
    sc_trace(mVcdFile, tmp_1_10_fu_233_p4, "tmp_1_10_fu_233_p4");
    sc_trace(mVcdFile, tmp_9_fu_284_p2, "tmp_9_fu_284_p2");
    sc_trace(mVcdFile, tmp_8_fu_310_p4, "tmp_8_fu_310_p4");
    sc_trace(mVcdFile, ret_V_2_2_i_fu_371_p0, "ret_V_2_2_i_fu_371_p0");
    sc_trace(mVcdFile, ret_V_0_1_i_fu_425_p0, "ret_V_0_1_i_fu_425_p0");
    sc_trace(mVcdFile, ret_V_1_i_fu_438_p0, "ret_V_1_i_fu_438_p0");
    sc_trace(mVcdFile, tmp1_fu_471_p2, "tmp1_fu_471_p2");
    sc_trace(mVcdFile, tmp4_cast_fu_480_p1, "tmp4_cast_fu_480_p1");
    sc_trace(mVcdFile, tmp5_cast_fu_483_p1, "tmp5_cast_fu_483_p1");
    sc_trace(mVcdFile, tmp3_fu_486_p2, "tmp3_fu_486_p2");
    sc_trace(mVcdFile, tmp7_cast_fu_496_p1, "tmp7_cast_fu_496_p1");
    sc_trace(mVcdFile, tmp8_cast_fu_499_p1, "tmp8_cast_fu_499_p1");
    sc_trace(mVcdFile, tmp3_cast_fu_492_p1, "tmp3_cast_fu_492_p1");
    sc_trace(mVcdFile, tmp6_fu_502_p2, "tmp6_fu_502_p2");
    sc_trace(mVcdFile, acc_V_2_2_i_fu_508_p2, "acc_V_2_2_i_fu_508_p2");
    sc_trace(mVcdFile, or_cond6_fu_475_p2, "or_cond6_fu_475_p2");
    sc_trace(mVcdFile, v0_assign_fu_514_p4, "v0_assign_fu_514_p4");
    sc_trace(mVcdFile, ret_V_1_1_i_fu_532_p0, "ret_V_1_1_i_fu_532_p0");
    sc_trace(mVcdFile, ret_V_1_1_i_fu_532_p1, "ret_V_1_1_i_fu_532_p1");
    sc_trace(mVcdFile, grp_fu_538_p0, "grp_fu_538_p0");
    sc_trace(mVcdFile, grp_fu_538_p1, "grp_fu_538_p1");
    sc_trace(mVcdFile, grp_fu_538_p2, "grp_fu_538_p2");
    sc_trace(mVcdFile, grp_fu_546_p0, "grp_fu_546_p0");
    sc_trace(mVcdFile, grp_fu_546_p1, "grp_fu_546_p1");
    sc_trace(mVcdFile, grp_fu_546_p2, "grp_fu_546_p2");
    sc_trace(mVcdFile, grp_fu_554_p0, "grp_fu_554_p0");
    sc_trace(mVcdFile, grp_fu_554_p1, "grp_fu_554_p1");
    sc_trace(mVcdFile, grp_fu_554_p2, "grp_fu_554_p2");
    sc_trace(mVcdFile, grp_fu_562_p0, "grp_fu_562_p0");
    sc_trace(mVcdFile, grp_fu_562_p1, "grp_fu_562_p1");
    sc_trace(mVcdFile, grp_fu_569_p0, "grp_fu_569_p0");
    sc_trace(mVcdFile, grp_fu_569_p1, "grp_fu_569_p1");
    sc_trace(mVcdFile, grp_fu_569_p2, "grp_fu_569_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, grp_fu_538_p00, "grp_fu_538_p00");
    sc_trace(mVcdFile, grp_fu_546_p00, "grp_fu_546_p00");
    sc_trace(mVcdFile, grp_fu_554_p00, "grp_fu_554_p00");
    sc_trace(mVcdFile, grp_fu_562_p00, "grp_fu_562_p00");
    sc_trace(mVcdFile, grp_fu_569_p00, "grp_fu_569_p00");
    sc_trace(mVcdFile, grp_fu_569_p20, "grp_fu_569_p20");
    sc_trace(mVcdFile, ret_V_0_1_i_fu_425_p00, "ret_V_0_1_i_fu_425_p00");
    sc_trace(mVcdFile, ret_V_1_1_i_fu_532_p00, "ret_V_1_1_i_fu_532_p00");
    sc_trace(mVcdFile, ret_V_1_i_fu_438_p00, "ret_V_1_i_fu_438_p00");
    sc_trace(mVcdFile, ret_V_2_2_i_fu_371_p00, "ret_V_2_2_i_fu_371_p00");
#endif

    }
}

gauss_blur::~gauss_blur() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete buff_val_0_U;
    delete buff_val_1_U;
    delete gauss_mul_mul_8ns_11ns_19_1_1_U9;
    delete gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U10;
    delete gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U11;
    delete gauss_mac_muladd_8ns_10ns_18ns_18_1_1_U12;
    delete gauss_mac_muladd_8ns_10ns_19ns_19_1_1_U13;
    delete gauss_mac_muladd_8ns_10ns_18ns_19_1_1_U14;
}

void gauss_blur::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_215_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(exitcond3_fu_215_p2.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(exitcond3_fu_215_p2.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter5 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_658.read()))) {
        col_assign_reg_203 = j_reg_662.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(exitcond3_fu_215_p2.read(), ap_const_lv1_0))) {
        col_assign_reg_203 = ap_const_lv11_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_reg_192 = i_1_reg_638.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_reg_192 = ap_const_lv10_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_255_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_267_p2.read()))) {
        buff_val_1_addr_reg_674 =  (sc_lv<11>) (tmp_5_fu_273_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_reg_658 = exitcond_fu_255_p2.read();
        exitcond_reg_658_pp0_iter1_reg = exitcond_reg_658.read();
        icmp1_reg_699 = icmp1_fu_320_p2.read();
        or_cond7_reg_690_pp0_iter1_reg = or_cond7_reg_690.read();
        or_cond_reg_685_pp0_iter1_reg = or_cond_reg_685.read();
        tmp_4_reg_667_pp0_iter1_reg = tmp_4_reg_667.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        exitcond_reg_658_pp0_iter2_reg = exitcond_reg_658_pp0_iter1_reg.read();
        icmp1_reg_699_pp0_iter2_reg = icmp1_reg_699.read();
        icmp1_reg_699_pp0_iter3_reg = icmp1_reg_699_pp0_iter2_reg.read();
        or_cond7_reg_690_pp0_iter2_reg = or_cond7_reg_690_pp0_iter1_reg.read();
        or_cond7_reg_690_pp0_iter3_reg = or_cond7_reg_690_pp0_iter2_reg.read();
        or_cond7_reg_690_pp0_iter4_reg = or_cond7_reg_690_pp0_iter3_reg.read();
        or_cond_reg_685_pp0_iter2_reg = or_cond_reg_685_pp0_iter1_reg.read();
        or_cond_reg_685_pp0_iter3_reg = or_cond_reg_685_pp0_iter2_reg.read();
        pWindow_val_1_0_re_reg_709 = pWindow_val_1_0_re_fu_352_p3.read();
        pWindow_val_2_0_re_reg_704 = pWindow_val_2_0_re_fu_345_p3.read();
        ret_V_1_1_i_reg_714 = ret_V_1_1_i_fu_532_p2.read();
        tmp_11_reg_749 = tmp_11_fu_524_p3.read();
        tmp_4_reg_667_pp0_iter2_reg = tmp_4_reg_667_pp0_iter1_reg.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_638 = i_1_fu_221_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond3_fu_215_p2.read(), ap_const_lv1_0))) {
        icmp_reg_648 = icmp_fu_243_p2.read();
        tmp_2_11_reg_653 = tmp_2_11_fu_249_p2.read();
        tmp_reg_643 = tmp_fu_227_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        j_reg_662 = j_fu_261_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_255_p2.read()))) {
        or_cond7_reg_690 = or_cond7_fu_290_p2.read();
        or_cond_reg_685 = or_cond_fu_279_p2.read();
        tmp_4_reg_667 = tmp_4_fu_267_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_reg_685_pp0_iter1_reg.read()))) {
        pix_in_val_0_s_fu_118 = tmp_12_reg_694.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        tmp4_reg_729 = grp_fu_546_p3.read();
        tmp5_reg_734 = grp_fu_554_p3.read();
        tmp7_reg_739 = grp_fu_562_p3.read();
        tmp8_reg_744 = grp_fu_569_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        tmp9_reg_719 = grp_fu_538_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(or_cond_reg_685.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_12_reg_694 = img_in_data_stream_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_reg_667.read()))) {
        tmp_1_s_fu_98 = buff_val_0_q0.read();
        tmp_2_s_fu_94 = buff_val_1_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_658_pp0_iter2_reg.read()))) {
        window_val_0_0_s_fu_102 = pWindow_val_0_0_re_fu_410_p3.read();
        window_val_0_1_s_fu_106 = window_val_0_0_s_fu_102.read();
        window_val_1_1_s_fu_114 = window_val_1_0_load_reg_724.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_658_pp0_iter1_reg.read()))) {
        window_val_1_0_load_reg_724 = window_val_1_0_s_fu_110.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_658_pp0_iter1_reg.read()))) {
        window_val_1_0_s_fu_110 = pWindow_val_1_0_re_fu_352_p3.read();
        window_val_2_0_s_fu_122 = pWindow_val_2_0_re_fu_345_p3.read();
        window_val_2_1_s_fu_126 = window_val_2_0_s_fu_122.read();
    }
}

void gauss_blur::thread_acc_V_2_2_i_fu_508_p2() {
    acc_V_2_2_i_fu_508_p2 = (!tmp3_cast_fu_492_p1.read().is_01() || !tmp6_fu_502_p2.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp3_cast_fu_492_p1.read()) + sc_biguint<20>(tmp6_fu_502_p2.read()));
}

void gauss_blur::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void gauss_blur::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void gauss_blur::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void gauss_blur::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[3];
}

void gauss_blur::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gauss_blur::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(or_cond_reg_685.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_in_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, or_cond7_reg_690_pp0_iter4_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_out_data_stream_V_full_n.read())));
}

void gauss_blur::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(or_cond_reg_685.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_in_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, or_cond7_reg_690_pp0_iter4_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_out_data_stream_V_full_n.read())));
}

void gauss_blur::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(or_cond_reg_685.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_in_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, or_cond7_reg_690_pp0_iter4_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_out_data_stream_V_full_n.read())));
}

void gauss_blur::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void gauss_blur::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gauss_blur::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = (esl_seteq<1,1,1>(or_cond_reg_685.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, img_in_data_stream_V_empty_n.read()));
}

void gauss_blur::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gauss_blur::thread_ap_block_state6_pp0_stage0_iter3() {
    ap_block_state6_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gauss_blur::thread_ap_block_state7_pp0_stage0_iter4() {
    ap_block_state7_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void gauss_blur::thread_ap_block_state8_pp0_stage0_iter5() {
    ap_block_state8_pp0_stage0_iter5 = (esl_seteq<1,1,1>(ap_const_lv1_1, or_cond7_reg_690_pp0_iter4_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, img_out_data_stream_V_full_n.read()));
}

void gauss_blur::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_255_p2.read())) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void gauss_blur::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_215_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void gauss_blur::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void gauss_blur::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void gauss_blur::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void gauss_blur::thread_ap_phi_mux_col_assign_phi_fu_207_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_reg_658.read()))) {
        ap_phi_mux_col_assign_phi_fu_207_p4 = j_reg_662.read();
    } else {
        ap_phi_mux_col_assign_phi_fu_207_p4 = col_assign_reg_203.read();
    }
}

void gauss_blur::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void gauss_blur::thread_buff_val_0_address0() {
    buff_val_0_address0 =  (sc_lv<11>) (tmp_5_fu_273_p1.read());
}

void gauss_blur::thread_buff_val_0_address1() {
    buff_val_0_address1 =  (sc_lv<11>) (tmp_7_fu_305_p1.read());
}

void gauss_blur::thread_buff_val_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        buff_val_0_ce0 = ap_const_logic_1;
    } else {
        buff_val_0_ce0 = ap_const_logic_0;
    }
}

void gauss_blur::thread_buff_val_0_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        buff_val_0_ce1 = ap_const_logic_1;
    } else {
        buff_val_0_ce1 = ap_const_logic_0;
    }
}

void gauss_blur::thread_buff_val_0_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(or_cond_reg_685.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        buff_val_0_we1 = ap_const_logic_1;
    } else {
        buff_val_0_we1 = ap_const_logic_0;
    }
}

void gauss_blur::thread_buff_val_1_address0() {
    buff_val_1_address0 =  (sc_lv<11>) (tmp_5_fu_273_p1.read());
}

void gauss_blur::thread_buff_val_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        buff_val_1_ce0 = ap_const_logic_1;
    } else {
        buff_val_1_ce0 = ap_const_logic_0;
    }
}

void gauss_blur::thread_buff_val_1_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        buff_val_1_ce1 = ap_const_logic_1;
    } else {
        buff_val_1_ce1 = ap_const_logic_0;
    }
}

void gauss_blur::thread_buff_val_1_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_reg_667.read()))) {
        buff_val_1_we1 = ap_const_logic_1;
    } else {
        buff_val_1_we1 = ap_const_logic_0;
    }
}

void gauss_blur::thread_exitcond3_fu_215_p2() {
    exitcond3_fu_215_p2 = (!i_reg_192.read().is_01() || !ap_const_lv10_2D1.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_192.read() == ap_const_lv10_2D1);
}

void gauss_blur::thread_exitcond_fu_255_p2() {
    exitcond_fu_255_p2 = (!ap_phi_mux_col_assign_phi_fu_207_p4.read().is_01() || !ap_const_lv11_501.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_col_assign_phi_fu_207_p4.read() == ap_const_lv11_501);
}

void gauss_blur::thread_grp_fu_538_p0() {
    grp_fu_538_p0 =  (sc_lv<8>) (grp_fu_538_p00.read());
}

void gauss_blur::thread_grp_fu_538_p00() {
    grp_fu_538_p00 = esl_zext<18,8>(window_val_2_0_s_fu_122.read());
}

void gauss_blur::thread_grp_fu_538_p1() {
    grp_fu_538_p1 =  (sc_lv<10>) (ap_const_lv18_1FB);
}

void gauss_blur::thread_grp_fu_538_p2() {
    grp_fu_538_p2 = (!ret_V_2_2_i_fu_371_p0.read().is_01() || !ap_const_lv18_133.is_01())? sc_lv<18>(): sc_biguint<8>(ret_V_2_2_i_fu_371_p0.read()) * sc_biguint<18>(ap_const_lv18_133);
}

void gauss_blur::thread_grp_fu_546_p0() {
    grp_fu_546_p0 =  (sc_lv<8>) (grp_fu_546_p00.read());
}

void gauss_blur::thread_grp_fu_546_p00() {
    grp_fu_546_p00 = esl_zext<18,8>(pWindow_val_0_0_re_fu_410_p3.read());
}

void gauss_blur::thread_grp_fu_546_p1() {
    grp_fu_546_p1 =  (sc_lv<10>) (ap_const_lv18_133);
}

void gauss_blur::thread_grp_fu_546_p2() {
    grp_fu_546_p2 = (!ret_V_0_1_i_fu_425_p0.read().is_01() || !ap_const_lv18_1FB.is_01())? sc_lv<18>(): sc_biguint<8>(ret_V_0_1_i_fu_425_p0.read()) * sc_biguint<18>(ap_const_lv18_1FB);
}

void gauss_blur::thread_grp_fu_554_p0() {
    grp_fu_554_p0 =  (sc_lv<8>) (grp_fu_554_p00.read());
}

void gauss_blur::thread_grp_fu_554_p00() {
    grp_fu_554_p00 = esl_zext<18,8>(window_val_0_1_s_fu_106.read());
}

void gauss_blur::thread_grp_fu_554_p1() {
    grp_fu_554_p1 =  (sc_lv<10>) (ap_const_lv18_133);
}

void gauss_blur::thread_grp_fu_554_p2() {
    grp_fu_554_p2 = (!ret_V_1_i_fu_438_p0.read().is_01() || !ap_const_lv18_1FB.is_01())? sc_lv<18>(): sc_biguint<8>(ret_V_1_i_fu_438_p0.read()) * sc_biguint<18>(ap_const_lv18_1FB);
}

void gauss_blur::thread_grp_fu_562_p0() {
    grp_fu_562_p0 =  (sc_lv<8>) (grp_fu_562_p00.read());
}

void gauss_blur::thread_grp_fu_562_p00() {
    grp_fu_562_p00 = esl_zext<18,8>(window_val_1_1_s_fu_114.read());
}

void gauss_blur::thread_grp_fu_562_p1() {
    grp_fu_562_p1 =  (sc_lv<10>) (ap_const_lv18_1FB);
}

void gauss_blur::thread_grp_fu_569_p0() {
    grp_fu_569_p0 =  (sc_lv<8>) (grp_fu_569_p00.read());
}

void gauss_blur::thread_grp_fu_569_p00() {
    grp_fu_569_p00 = esl_zext<18,8>(pWindow_val_2_0_re_reg_704.read());
}

void gauss_blur::thread_grp_fu_569_p1() {
    grp_fu_569_p1 =  (sc_lv<10>) (ap_const_lv18_133);
}

void gauss_blur::thread_grp_fu_569_p2() {
    grp_fu_569_p2 =  (sc_lv<18>) (grp_fu_569_p20.read());
}

void gauss_blur::thread_grp_fu_569_p20() {
    grp_fu_569_p20 = esl_zext<19,18>(tmp9_reg_719.read());
}

void gauss_blur::thread_i_1_fu_221_p2() {
    i_1_fu_221_p2 = (!i_reg_192.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_reg_192.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void gauss_blur::thread_icmp1_fu_320_p2() {
    icmp1_fu_320_p2 = (!tmp_8_fu_310_p4.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_8_fu_310_p4.read() != ap_const_lv10_0);
}

void gauss_blur::thread_icmp_fu_243_p2() {
    icmp_fu_243_p2 = (!tmp_1_10_fu_233_p4.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_10_fu_233_p4.read() != ap_const_lv9_0);
}

void gauss_blur::thread_img_in_data_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(or_cond_reg_685.read(), ap_const_lv1_1))) {
        img_in_data_stream_V_blk_n = img_in_data_stream_V_empty_n.read();
    } else {
        img_in_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void gauss_blur::thread_img_in_data_stream_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(or_cond_reg_685.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        img_in_data_stream_V_read = ap_const_logic_1;
    } else {
        img_in_data_stream_V_read = ap_const_logic_0;
    }
}

void gauss_blur::thread_img_out_data_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond7_reg_690_pp0_iter4_reg.read()))) {
        img_out_data_stream_V_blk_n = img_out_data_stream_V_full_n.read();
    } else {
        img_out_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void gauss_blur::thread_img_out_data_stream_V_din() {
    img_out_data_stream_V_din = tmp_11_reg_749.read();
}

void gauss_blur::thread_img_out_data_stream_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond7_reg_690_pp0_iter4_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        img_out_data_stream_V_write = ap_const_logic_1;
    } else {
        img_out_data_stream_V_write = ap_const_logic_0;
    }
}

void gauss_blur::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_215_p2.read()))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void gauss_blur::thread_j_fu_261_p2() {
    j_fu_261_p2 = (!ap_phi_mux_col_assign_phi_fu_207_p4.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(ap_phi_mux_col_assign_phi_fu_207_p4.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void gauss_blur::thread_or_cond6_fu_475_p2() {
    or_cond6_fu_475_p2 = (or_cond_reg_685_pp0_iter3_reg.read() & tmp1_fu_471_p2.read());
}

void gauss_blur::thread_or_cond7_fu_290_p2() {
    or_cond7_fu_290_p2 = (tmp_2_11_reg_653.read() & tmp_9_fu_284_p2.read());
}

void gauss_blur::thread_or_cond_fu_279_p2() {
    or_cond_fu_279_p2 = (tmp_4_fu_267_p2.read() & tmp_reg_643.read());
}

void gauss_blur::thread_pWindow_val_0_0_re_fu_410_p3() {
    pWindow_val_0_0_re_fu_410_p3 = (!tmp_4_reg_667_pp0_iter2_reg.read()[0].is_01())? sc_lv<8>(): ((tmp_4_reg_667_pp0_iter2_reg.read()[0].to_bool())? pix_in_val_0_s_fu_118.read(): window_val_0_0_s_fu_102.read());
}

void gauss_blur::thread_pWindow_val_1_0_re_fu_352_p3() {
    pWindow_val_1_0_re_fu_352_p3 = (!tmp_4_reg_667_pp0_iter1_reg.read()[0].is_01())? sc_lv<8>(): ((tmp_4_reg_667_pp0_iter1_reg.read()[0].to_bool())? tmp_1_s_fu_98.read(): window_val_1_0_s_fu_110.read());
}

void gauss_blur::thread_pWindow_val_2_0_re_fu_345_p3() {
    pWindow_val_2_0_re_fu_345_p3 = (!tmp_4_reg_667_pp0_iter1_reg.read()[0].is_01())? sc_lv<8>(): ((tmp_4_reg_667_pp0_iter1_reg.read()[0].to_bool())? tmp_2_s_fu_94.read(): window_val_2_0_s_fu_122.read());
}

void gauss_blur::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void gauss_blur::thread_ret_V_0_1_i_fu_425_p0() {
    ret_V_0_1_i_fu_425_p0 =  (sc_lv<8>) (ret_V_0_1_i_fu_425_p00.read());
}

void gauss_blur::thread_ret_V_0_1_i_fu_425_p00() {
    ret_V_0_1_i_fu_425_p00 = esl_zext<18,8>(window_val_0_0_s_fu_102.read());
}

void gauss_blur::thread_ret_V_1_1_i_fu_532_p0() {
    ret_V_1_1_i_fu_532_p0 =  (sc_lv<8>) (ret_V_1_1_i_fu_532_p00.read());
}

void gauss_blur::thread_ret_V_1_1_i_fu_532_p00() {
    ret_V_1_1_i_fu_532_p00 = esl_zext<19,8>(window_val_1_0_s_fu_110.read());
}

void gauss_blur::thread_ret_V_1_1_i_fu_532_p1() {
    ret_V_1_1_i_fu_532_p1 =  (sc_lv<11>) (ap_const_lv19_344);
}

void gauss_blur::thread_ret_V_1_i_fu_438_p0() {
    ret_V_1_i_fu_438_p0 =  (sc_lv<8>) (ret_V_1_i_fu_438_p00.read());
}

void gauss_blur::thread_ret_V_1_i_fu_438_p00() {
    ret_V_1_i_fu_438_p00 = esl_zext<18,8>(pWindow_val_1_0_re_reg_709.read());
}

void gauss_blur::thread_ret_V_2_2_i_fu_371_p0() {
    ret_V_2_2_i_fu_371_p0 =  (sc_lv<8>) (ret_V_2_2_i_fu_371_p00.read());
}

void gauss_blur::thread_ret_V_2_2_i_fu_371_p00() {
    ret_V_2_2_i_fu_371_p00 = esl_zext<18,8>(window_val_2_1_s_fu_126.read());
}

void gauss_blur::thread_start_out() {
    start_out = real_start.read();
}

void gauss_blur::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void gauss_blur::thread_tmp1_fu_471_p2() {
    tmp1_fu_471_p2 = (icmp_reg_648.read() & icmp1_reg_699_pp0_iter3_reg.read());
}

void gauss_blur::thread_tmp3_cast_fu_492_p1() {
    tmp3_cast_fu_492_p1 = esl_zext<20,19>(tmp3_fu_486_p2.read());
}

void gauss_blur::thread_tmp3_fu_486_p2() {
    tmp3_fu_486_p2 = (!tmp4_cast_fu_480_p1.read().is_01() || !tmp5_cast_fu_483_p1.read().is_01())? sc_lv<19>(): (sc_biguint<19>(tmp4_cast_fu_480_p1.read()) + sc_biguint<19>(tmp5_cast_fu_483_p1.read()));
}

void gauss_blur::thread_tmp4_cast_fu_480_p1() {
    tmp4_cast_fu_480_p1 = esl_zext<19,18>(tmp4_reg_729.read());
}

void gauss_blur::thread_tmp5_cast_fu_483_p1() {
    tmp5_cast_fu_483_p1 = esl_zext<19,18>(tmp5_reg_734.read());
}

void gauss_blur::thread_tmp6_fu_502_p2() {
    tmp6_fu_502_p2 = (!tmp7_cast_fu_496_p1.read().is_01() || !tmp8_cast_fu_499_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp7_cast_fu_496_p1.read()) + sc_biguint<20>(tmp8_cast_fu_499_p1.read()));
}

void gauss_blur::thread_tmp7_cast_fu_496_p1() {
    tmp7_cast_fu_496_p1 = esl_zext<20,19>(tmp7_reg_739.read());
}

void gauss_blur::thread_tmp8_cast_fu_499_p1() {
    tmp8_cast_fu_499_p1 = esl_zext<20,19>(tmp8_reg_744.read());
}

void gauss_blur::thread_tmp_11_fu_524_p3() {
    tmp_11_fu_524_p3 = (!or_cond6_fu_475_p2.read()[0].is_01())? sc_lv<8>(): ((or_cond6_fu_475_p2.read()[0].to_bool())? v0_assign_fu_514_p4.read(): ap_const_lv8_0);
}

void gauss_blur::thread_tmp_1_10_fu_233_p4() {
    tmp_1_10_fu_233_p4 = i_reg_192.read().range(9, 1);
}

void gauss_blur::thread_tmp_2_11_fu_249_p2() {
    tmp_2_11_fu_249_p2 = (!i_reg_192.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_192.read() != ap_const_lv10_0);
}

void gauss_blur::thread_tmp_4_fu_267_p2() {
    tmp_4_fu_267_p2 = (!ap_phi_mux_col_assign_phi_fu_207_p4.read().is_01() || !ap_const_lv11_500.is_01())? sc_lv<1>(): (sc_biguint<11>(ap_phi_mux_col_assign_phi_fu_207_p4.read()) < sc_biguint<11>(ap_const_lv11_500));
}

void gauss_blur::thread_tmp_5_fu_273_p1() {
    tmp_5_fu_273_p1 = esl_zext<64,11>(ap_phi_mux_col_assign_phi_fu_207_p4.read());
}

void gauss_blur::thread_tmp_7_fu_305_p1() {
    tmp_7_fu_305_p1 = esl_zext<64,11>(col_assign_reg_203.read());
}

void gauss_blur::thread_tmp_8_fu_310_p4() {
    tmp_8_fu_310_p4 = col_assign_reg_203.read().range(10, 1);
}

void gauss_blur::thread_tmp_9_fu_284_p2() {
    tmp_9_fu_284_p2 = (!ap_phi_mux_col_assign_phi_fu_207_p4.read().is_01() || !ap_const_lv11_0.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_col_assign_phi_fu_207_p4.read() != ap_const_lv11_0);
}

void gauss_blur::thread_tmp_fu_227_p2() {
    tmp_fu_227_p2 = (!i_reg_192.read().is_01() || !ap_const_lv10_2D0.is_01())? sc_lv<1>(): (sc_biguint<10>(i_reg_192.read()) < sc_biguint<10>(ap_const_lv10_2D0));
}

void gauss_blur::thread_v0_assign_fu_514_p4() {
    v0_assign_fu_514_p4 = acc_V_2_2_i_fu_508_p2.read().range(19, 12);
}

void gauss_blur::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_215_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_255_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_255_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

