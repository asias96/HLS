// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="gauss,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.628000,HLS_SYN_LAT=928652,HLS_SYN_TPT=928650,HLS_SYN_MEM=2,HLS_SYN_DSP=6,HLS_SYN_FF=875,HLS_SYN_LUT=1532,HLS_VERSION=2018_3}" *)

module gauss (
        s_axi_bun_1_AWVALID,
        s_axi_bun_1_AWREADY,
        s_axi_bun_1_AWADDR,
        s_axi_bun_1_WVALID,
        s_axi_bun_1_WREADY,
        s_axi_bun_1_WDATA,
        s_axi_bun_1_WSTRB,
        s_axi_bun_1_ARVALID,
        s_axi_bun_1_ARREADY,
        s_axi_bun_1_ARADDR,
        s_axi_bun_1_RVALID,
        s_axi_bun_1_RREADY,
        s_axi_bun_1_RDATA,
        s_axi_bun_1_RRESP,
        s_axi_bun_1_BVALID,
        s_axi_bun_1_BREADY,
        s_axi_bun_1_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        input_stream_TDATA,
        input_stream_TKEEP,
        input_stream_TSTRB,
        input_stream_TUSER,
        input_stream_TLAST,
        input_stream_TID,
        input_stream_TDEST,
        output_stream_TDATA,
        output_stream_TKEEP,
        output_stream_TSTRB,
        output_stream_TUSER,
        output_stream_TLAST,
        output_stream_TID,
        output_stream_TDEST,
        input_stream_TVALID,
        input_stream_TREADY,
        output_stream_TVALID,
        output_stream_TREADY
);

parameter    C_S_AXI_BUN_1_DATA_WIDTH = 32;
parameter    C_S_AXI_BUN_1_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;

parameter C_S_AXI_BUN_1_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_bun_1_AWVALID;
output   s_axi_bun_1_AWREADY;
input  [C_S_AXI_BUN_1_ADDR_WIDTH - 1:0] s_axi_bun_1_AWADDR;
input   s_axi_bun_1_WVALID;
output   s_axi_bun_1_WREADY;
input  [C_S_AXI_BUN_1_DATA_WIDTH - 1:0] s_axi_bun_1_WDATA;
input  [C_S_AXI_BUN_1_WSTRB_WIDTH - 1:0] s_axi_bun_1_WSTRB;
input   s_axi_bun_1_ARVALID;
output   s_axi_bun_1_ARREADY;
input  [C_S_AXI_BUN_1_ADDR_WIDTH - 1:0] s_axi_bun_1_ARADDR;
output   s_axi_bun_1_RVALID;
input   s_axi_bun_1_RREADY;
output  [C_S_AXI_BUN_1_DATA_WIDTH - 1:0] s_axi_bun_1_RDATA;
output  [1:0] s_axi_bun_1_RRESP;
output   s_axi_bun_1_BVALID;
input   s_axi_bun_1_BREADY;
output  [1:0] s_axi_bun_1_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [7:0] input_stream_TDATA;
input  [0:0] input_stream_TKEEP;
input  [0:0] input_stream_TSTRB;
input  [0:0] input_stream_TUSER;
input  [0:0] input_stream_TLAST;
input  [0:0] input_stream_TID;
input  [0:0] input_stream_TDEST;
output  [7:0] output_stream_TDATA;
output  [0:0] output_stream_TKEEP;
output  [0:0] output_stream_TSTRB;
output  [0:0] output_stream_TUSER;
output  [0:0] output_stream_TLAST;
output  [0:0] output_stream_TID;
output  [0:0] output_stream_TDEST;
input   input_stream_TVALID;
output   input_stream_TREADY;
output   output_stream_TVALID;
input   output_stream_TREADY;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire    AXIvideo2Mat_U0_ap_start;
wire    AXIvideo2Mat_U0_ap_done;
wire    AXIvideo2Mat_U0_ap_continue;
wire    AXIvideo2Mat_U0_ap_idle;
wire    AXIvideo2Mat_U0_ap_ready;
wire    AXIvideo2Mat_U0_start_out;
wire    AXIvideo2Mat_U0_start_write;
wire    AXIvideo2Mat_U0_input_stream_TREADY;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_V_write;
wire    gauss_blur_U0_ap_start;
wire    gauss_blur_U0_ap_done;
wire    gauss_blur_U0_ap_continue;
wire    gauss_blur_U0_ap_idle;
wire    gauss_blur_U0_ap_ready;
wire    gauss_blur_U0_start_out;
wire    gauss_blur_U0_start_write;
wire    gauss_blur_U0_img_in_data_stream_V_read;
wire   [7:0] gauss_blur_U0_img_out_data_stream_V_din;
wire    gauss_blur_U0_img_out_data_stream_V_write;
wire    Mat2AXIvideo_U0_ap_start;
wire    Mat2AXIvideo_U0_ap_done;
wire    Mat2AXIvideo_U0_ap_continue;
wire    Mat2AXIvideo_U0_ap_idle;
wire    Mat2AXIvideo_U0_ap_ready;
wire    Mat2AXIvideo_U0_img_data_stream_V_read;
wire   [7:0] Mat2AXIvideo_U0_output_stream_TDATA;
wire    Mat2AXIvideo_U0_output_stream_TVALID;
wire   [0:0] Mat2AXIvideo_U0_output_stream_TKEEP;
wire   [0:0] Mat2AXIvideo_U0_output_stream_TSTRB;
wire   [0:0] Mat2AXIvideo_U0_output_stream_TUSER;
wire   [0:0] Mat2AXIvideo_U0_output_stream_TLAST;
wire   [0:0] Mat2AXIvideo_U0_output_stream_TID;
wire   [0:0] Mat2AXIvideo_U0_output_stream_TDEST;
wire    ap_sync_continue;
wire    img_in_data_stream_0_full_n;
wire   [7:0] img_in_data_stream_0_dout;
wire    img_in_data_stream_0_empty_n;
wire    img_out_data_stream_s_full_n;
wire   [7:0] img_out_data_stream_s_dout;
wire    img_out_data_stream_s_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire   [0:0] start_for_gauss_blur_U0_din;
wire    start_for_gauss_blur_U0_full_n;
wire   [0:0] start_for_gauss_blur_U0_dout;
wire    start_for_gauss_blur_U0_empty_n;
wire   [0:0] start_for_Mat2AXIvideo_U0_din;
wire    start_for_Mat2AXIvideo_U0_full_n;
wire   [0:0] start_for_Mat2AXIvideo_U0_dout;
wire    start_for_Mat2AXIvideo_U0_empty_n;
wire    Mat2AXIvideo_U0_start_full_n;
wire    Mat2AXIvideo_U0_start_write;

gauss_bun_1_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_BUN_1_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_BUN_1_DATA_WIDTH ))
gauss_bun_1_s_axi_U(
    .AWVALID(s_axi_bun_1_AWVALID),
    .AWREADY(s_axi_bun_1_AWREADY),
    .AWADDR(s_axi_bun_1_AWADDR),
    .WVALID(s_axi_bun_1_WVALID),
    .WREADY(s_axi_bun_1_WREADY),
    .WDATA(s_axi_bun_1_WDATA),
    .WSTRB(s_axi_bun_1_WSTRB),
    .ARVALID(s_axi_bun_1_ARVALID),
    .ARREADY(s_axi_bun_1_ARREADY),
    .ARADDR(s_axi_bun_1_ARADDR),
    .RVALID(s_axi_bun_1_RVALID),
    .RREADY(s_axi_bun_1_RREADY),
    .RDATA(s_axi_bun_1_RDATA),
    .RRESP(s_axi_bun_1_RRESP),
    .BVALID(s_axi_bun_1_BVALID),
    .BREADY(s_axi_bun_1_BREADY),
    .BRESP(s_axi_bun_1_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

AXIvideo2Mat AXIvideo2Mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2Mat_U0_ap_start),
    .start_full_n(start_for_gauss_blur_U0_full_n),
    .ap_done(AXIvideo2Mat_U0_ap_done),
    .ap_continue(AXIvideo2Mat_U0_ap_continue),
    .ap_idle(AXIvideo2Mat_U0_ap_idle),
    .ap_ready(AXIvideo2Mat_U0_ap_ready),
    .start_out(AXIvideo2Mat_U0_start_out),
    .start_write(AXIvideo2Mat_U0_start_write),
    .input_stream_TDATA(input_stream_TDATA),
    .input_stream_TVALID(input_stream_TVALID),
    .input_stream_TREADY(AXIvideo2Mat_U0_input_stream_TREADY),
    .input_stream_TKEEP(input_stream_TKEEP),
    .input_stream_TSTRB(input_stream_TSTRB),
    .input_stream_TUSER(input_stream_TUSER),
    .input_stream_TLAST(input_stream_TLAST),
    .input_stream_TID(input_stream_TID),
    .input_stream_TDEST(input_stream_TDEST),
    .img_data_stream_V_din(AXIvideo2Mat_U0_img_data_stream_V_din),
    .img_data_stream_V_full_n(img_in_data_stream_0_full_n),
    .img_data_stream_V_write(AXIvideo2Mat_U0_img_data_stream_V_write)
);

gauss_blur gauss_blur_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(gauss_blur_U0_ap_start),
    .start_full_n(start_for_Mat2AXIvideo_U0_full_n),
    .ap_done(gauss_blur_U0_ap_done),
    .ap_continue(gauss_blur_U0_ap_continue),
    .ap_idle(gauss_blur_U0_ap_idle),
    .ap_ready(gauss_blur_U0_ap_ready),
    .start_out(gauss_blur_U0_start_out),
    .start_write(gauss_blur_U0_start_write),
    .img_in_data_stream_V_dout(img_in_data_stream_0_dout),
    .img_in_data_stream_V_empty_n(img_in_data_stream_0_empty_n),
    .img_in_data_stream_V_read(gauss_blur_U0_img_in_data_stream_V_read),
    .img_out_data_stream_V_din(gauss_blur_U0_img_out_data_stream_V_din),
    .img_out_data_stream_V_full_n(img_out_data_stream_s_full_n),
    .img_out_data_stream_V_write(gauss_blur_U0_img_out_data_stream_V_write)
);

Mat2AXIvideo Mat2AXIvideo_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Mat2AXIvideo_U0_ap_start),
    .ap_done(Mat2AXIvideo_U0_ap_done),
    .ap_continue(Mat2AXIvideo_U0_ap_continue),
    .ap_idle(Mat2AXIvideo_U0_ap_idle),
    .ap_ready(Mat2AXIvideo_U0_ap_ready),
    .img_data_stream_V_dout(img_out_data_stream_s_dout),
    .img_data_stream_V_empty_n(img_out_data_stream_s_empty_n),
    .img_data_stream_V_read(Mat2AXIvideo_U0_img_data_stream_V_read),
    .output_stream_TDATA(Mat2AXIvideo_U0_output_stream_TDATA),
    .output_stream_TVALID(Mat2AXIvideo_U0_output_stream_TVALID),
    .output_stream_TREADY(output_stream_TREADY),
    .output_stream_TKEEP(Mat2AXIvideo_U0_output_stream_TKEEP),
    .output_stream_TSTRB(Mat2AXIvideo_U0_output_stream_TSTRB),
    .output_stream_TUSER(Mat2AXIvideo_U0_output_stream_TUSER),
    .output_stream_TLAST(Mat2AXIvideo_U0_output_stream_TLAST),
    .output_stream_TID(Mat2AXIvideo_U0_output_stream_TID),
    .output_stream_TDEST(Mat2AXIvideo_U0_output_stream_TDEST)
);

fifo_w8_d2_A img_in_data_stream_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_V_din),
    .if_full_n(img_in_data_stream_0_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_V_write),
    .if_dout(img_in_data_stream_0_dout),
    .if_empty_n(img_in_data_stream_0_empty_n),
    .if_read(gauss_blur_U0_img_in_data_stream_V_read)
);

fifo_w8_d2_A img_out_data_stream_s_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(gauss_blur_U0_img_out_data_stream_V_din),
    .if_full_n(img_out_data_stream_s_full_n),
    .if_write(gauss_blur_U0_img_out_data_stream_V_write),
    .if_dout(img_out_data_stream_s_dout),
    .if_empty_n(img_out_data_stream_s_empty_n),
    .if_read(Mat2AXIvideo_U0_img_data_stream_V_read)
);

start_for_gauss_blur_U0 start_for_gauss_blur_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_gauss_blur_U0_din),
    .if_full_n(start_for_gauss_blur_U0_full_n),
    .if_write(AXIvideo2Mat_U0_start_write),
    .if_dout(start_for_gauss_blur_U0_dout),
    .if_empty_n(start_for_gauss_blur_U0_empty_n),
    .if_read(gauss_blur_U0_ap_ready)
);

start_for_Mat2AXIvideo_U0 start_for_Mat2AXIvideo_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Mat2AXIvideo_U0_din),
    .if_full_n(start_for_Mat2AXIvideo_U0_full_n),
    .if_write(gauss_blur_U0_start_write),
    .if_dout(start_for_Mat2AXIvideo_U0_dout),
    .if_empty_n(start_for_Mat2AXIvideo_U0_empty_n),
    .if_read(Mat2AXIvideo_U0_ap_ready)
);

assign AXIvideo2Mat_U0_ap_continue = 1'b1;

assign AXIvideo2Mat_U0_ap_start = ap_start;

assign Mat2AXIvideo_U0_ap_continue = 1'b1;

assign Mat2AXIvideo_U0_ap_start = start_for_Mat2AXIvideo_U0_empty_n;

assign Mat2AXIvideo_U0_start_full_n = 1'b1;

assign Mat2AXIvideo_U0_start_write = 1'b0;

assign ap_done = Mat2AXIvideo_U0_ap_done;

assign ap_idle = (gauss_blur_U0_ap_idle & Mat2AXIvideo_U0_ap_idle & AXIvideo2Mat_U0_ap_idle);

assign ap_ready = AXIvideo2Mat_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b1;

assign ap_sync_done = Mat2AXIvideo_U0_ap_done;

assign ap_sync_ready = AXIvideo2Mat_U0_ap_ready;

assign gauss_blur_U0_ap_continue = 1'b1;

assign gauss_blur_U0_ap_start = start_for_gauss_blur_U0_empty_n;

assign input_stream_TREADY = AXIvideo2Mat_U0_input_stream_TREADY;

assign output_stream_TDATA = Mat2AXIvideo_U0_output_stream_TDATA;

assign output_stream_TDEST = Mat2AXIvideo_U0_output_stream_TDEST;

assign output_stream_TID = Mat2AXIvideo_U0_output_stream_TID;

assign output_stream_TKEEP = Mat2AXIvideo_U0_output_stream_TKEEP;

assign output_stream_TLAST = Mat2AXIvideo_U0_output_stream_TLAST;

assign output_stream_TSTRB = Mat2AXIvideo_U0_output_stream_TSTRB;

assign output_stream_TUSER = Mat2AXIvideo_U0_output_stream_TUSER;

assign output_stream_TVALID = Mat2AXIvideo_U0_output_stream_TVALID;

assign start_for_Mat2AXIvideo_U0_din = 1'b1;

assign start_for_gauss_blur_U0_din = 1'b1;

endmodule //gauss
