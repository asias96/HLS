// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fir_HH_
#define _fir_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "fir_dadd_64ns_64ns_64_5_full_dsp_1.h"
#include "fir_dmul_64ns_64ns_64_6_max_dsp_1.h"
#include "fir_sitodp_32ns_64_6_1.h"

namespace ap_rtl {

struct fir : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<64> > probe_in;
    sc_in< sc_logic > probe_in_ap_vld;
    sc_out< sc_lv<64> > out_r;
    sc_out< sc_logic > out_r_ap_vld;
    sc_out< sc_lv<4> > coeff_address0;
    sc_out< sc_logic > coeff_ce0;
    sc_in< sc_lv<32> > coeff_q0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    fir(sc_module_name name);
    SC_HAS_PROCESS(fir);

    ~fir();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    fir_dadd_64ns_64ns_64_5_full_dsp_1<1,5,64,64,64>* fir_dadd_64ns_64ns_64_5_full_dsp_1_U1;
    fir_dmul_64ns_64ns_64_6_max_dsp_1<1,6,64,64,64>* fir_dmul_64ns_64ns_64_6_max_dsp_1_U2;
    fir_sitodp_32ns_64_6_1<1,6,32,64>* fir_sitodp_32ns_64_6_1_U3;
    sc_signal< sc_lv<38> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<64> > probe_in_preg;
    sc_signal< sc_lv<64> > probe_in_in_sig;
    sc_signal< sc_logic > probe_in_ap_vld_preg;
    sc_signal< sc_logic > probe_in_ap_vld_in_sig;
    sc_signal< sc_lv<64> > data_in_0;
    sc_signal< sc_lv<64> > data_in_1;
    sc_signal< sc_lv<64> > data_in_2;
    sc_signal< sc_lv<64> > data_in_3;
    sc_signal< sc_lv<64> > data_in_4;
    sc_signal< sc_lv<64> > data_in_5;
    sc_signal< sc_lv<64> > data_in_6;
    sc_signal< sc_lv<64> > data_in_7;
    sc_signal< sc_lv<64> > data_in_8;
    sc_signal< sc_logic > probe_in_blk_n;
    sc_signal< sc_lv<32> > reg_177;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<64> > grp_fu_174_p1;
    sc_signal< sc_lv<64> > reg_182;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_lv<64> > grp_fu_169_p2;
    sc_signal< sc_lv<64> > reg_188;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<4> > i_1_fu_199_p2;
    sc_signal< sc_lv<4> > i_1_reg_322;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_fu_193_p2;
    sc_signal< sc_lv<64> > grp_fu_163_p2;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<64> > acc_reg_116;
    sc_signal< sc_lv<4> > ap_phi_mux_i_phi_fu_132_p4;
    sc_signal< sc_lv<4> > i_reg_128;
    sc_signal< sc_lv<64> > ap_phi_mux_data_in_load_phi_phi_fu_142_p18;
    sc_signal< sc_lv<64> > data_in_load_phi_reg_139;
    sc_signal< sc_lv<64> > tmp_3_fu_250_p1;
    sc_signal< sc_logic > ap_CS_fsm_state38;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_lv<64> > grp_fu_169_p0;
    sc_signal< sc_lv<64> > grp_fu_169_p1;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state28;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<38> > ap_NS_fsm;
    sc_signal< bool > ap_condition_457;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<38> ap_ST_fsm_state1;
    static const sc_lv<38> ap_ST_fsm_state2;
    static const sc_lv<38> ap_ST_fsm_state3;
    static const sc_lv<38> ap_ST_fsm_state4;
    static const sc_lv<38> ap_ST_fsm_state5;
    static const sc_lv<38> ap_ST_fsm_state6;
    static const sc_lv<38> ap_ST_fsm_state7;
    static const sc_lv<38> ap_ST_fsm_state8;
    static const sc_lv<38> ap_ST_fsm_state9;
    static const sc_lv<38> ap_ST_fsm_state10;
    static const sc_lv<38> ap_ST_fsm_state11;
    static const sc_lv<38> ap_ST_fsm_state12;
    static const sc_lv<38> ap_ST_fsm_state13;
    static const sc_lv<38> ap_ST_fsm_state14;
    static const sc_lv<38> ap_ST_fsm_state15;
    static const sc_lv<38> ap_ST_fsm_state16;
    static const sc_lv<38> ap_ST_fsm_state17;
    static const sc_lv<38> ap_ST_fsm_state18;
    static const sc_lv<38> ap_ST_fsm_state19;
    static const sc_lv<38> ap_ST_fsm_state20;
    static const sc_lv<38> ap_ST_fsm_state21;
    static const sc_lv<38> ap_ST_fsm_state22;
    static const sc_lv<38> ap_ST_fsm_state23;
    static const sc_lv<38> ap_ST_fsm_state24;
    static const sc_lv<38> ap_ST_fsm_state25;
    static const sc_lv<38> ap_ST_fsm_state26;
    static const sc_lv<38> ap_ST_fsm_state27;
    static const sc_lv<38> ap_ST_fsm_state28;
    static const sc_lv<38> ap_ST_fsm_state29;
    static const sc_lv<38> ap_ST_fsm_state30;
    static const sc_lv<38> ap_ST_fsm_state31;
    static const sc_lv<38> ap_ST_fsm_state32;
    static const sc_lv<38> ap_ST_fsm_state33;
    static const sc_lv<38> ap_ST_fsm_state34;
    static const sc_lv<38> ap_ST_fsm_state35;
    static const sc_lv<38> ap_ST_fsm_state36;
    static const sc_lv<38> ap_ST_fsm_state37;
    static const sc_lv<38> ap_ST_fsm_state38;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state28();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state38();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state1();
    void thread_ap_condition_457();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_data_in_load_phi_phi_fu_142_p18();
    void thread_ap_phi_mux_i_phi_fu_132_p4();
    void thread_ap_ready();
    void thread_coeff_address0();
    void thread_coeff_ce0();
    void thread_grp_fu_169_p0();
    void thread_grp_fu_169_p1();
    void thread_i_1_fu_199_p2();
    void thread_out_r();
    void thread_out_r_ap_vld();
    void thread_probe_in_ap_vld_in_sig();
    void thread_probe_in_blk_n();
    void thread_probe_in_in_sig();
    void thread_tmp_3_fu_250_p1();
    void thread_tmp_fu_193_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
