// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _fir_HH_
#define _fir_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "fir_data_in_V.h"
#include "fir_coeff.h"

namespace ap_rtl {

struct fir : public sc_module {
    // Port declarations 24
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > stream_in_TDATA;
    sc_in< sc_logic > stream_in_TVALID;
    sc_out< sc_logic > stream_in_TREADY;
    sc_in< sc_lv<4> > stream_in_TKEEP;
    sc_in< sc_lv<4> > stream_in_TSTRB;
    sc_in< sc_lv<2> > stream_in_TUSER;
    sc_in< sc_lv<1> > stream_in_TLAST;
    sc_in< sc_lv<5> > stream_in_TID;
    sc_in< sc_lv<6> > stream_in_TDEST;
    sc_out< sc_lv<32> > stream_out_TDATA;
    sc_out< sc_logic > stream_out_TVALID;
    sc_in< sc_logic > stream_out_TREADY;
    sc_out< sc_lv<4> > stream_out_TKEEP;
    sc_out< sc_lv<4> > stream_out_TSTRB;
    sc_out< sc_lv<2> > stream_out_TUSER;
    sc_out< sc_lv<1> > stream_out_TLAST;
    sc_out< sc_lv<5> > stream_out_TID;
    sc_out< sc_lv<6> > stream_out_TDEST;


    // Module declarations
    fir(sc_module_name name);
    SC_HAS_PROCESS(fir);

    ~fir();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    fir_data_in_V* data_in_V_U;
    fir_coeff* coeff_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > stream_in_V_data_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_data_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_data_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_data_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_data_V_0_ack_out;
    sc_signal< sc_lv<32> > stream_in_V_data_V_0_payload_A;
    sc_signal< sc_lv<32> > stream_in_V_data_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_data_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_data_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_data_V_0_sel;
    sc_signal< sc_logic > stream_in_V_data_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_data_V_0_state;
    sc_signal< sc_logic > stream_in_V_data_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > stream_in_V_keep_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_keep_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_keep_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_keep_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_keep_V_0_ack_out;
    sc_signal< sc_lv<4> > stream_in_V_keep_V_0_payload_A;
    sc_signal< sc_lv<4> > stream_in_V_keep_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_keep_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_keep_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_keep_V_0_sel;
    sc_signal< sc_logic > stream_in_V_keep_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_keep_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_keep_V_0_state;
    sc_signal< sc_logic > stream_in_V_keep_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > stream_in_V_strb_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_strb_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_strb_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_strb_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_strb_V_0_ack_out;
    sc_signal< sc_lv<4> > stream_in_V_strb_V_0_payload_A;
    sc_signal< sc_lv<4> > stream_in_V_strb_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_strb_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_strb_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_strb_V_0_sel;
    sc_signal< sc_logic > stream_in_V_strb_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_strb_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_strb_V_0_state;
    sc_signal< sc_logic > stream_in_V_strb_V_0_state_cmp_full;
    sc_signal< sc_lv<2> > stream_in_V_user_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_user_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_user_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_user_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_user_V_0_ack_out;
    sc_signal< sc_lv<2> > stream_in_V_user_V_0_payload_A;
    sc_signal< sc_lv<2> > stream_in_V_user_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_user_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_user_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_user_V_0_sel;
    sc_signal< sc_logic > stream_in_V_user_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_user_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_user_V_0_state;
    sc_signal< sc_logic > stream_in_V_user_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > stream_in_V_last_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_last_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_last_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_last_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_last_V_0_ack_out;
    sc_signal< sc_lv<1> > stream_in_V_last_V_0_payload_A;
    sc_signal< sc_lv<1> > stream_in_V_last_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_last_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_last_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_last_V_0_sel;
    sc_signal< sc_logic > stream_in_V_last_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_last_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_last_V_0_state;
    sc_signal< sc_logic > stream_in_V_last_V_0_state_cmp_full;
    sc_signal< sc_lv<5> > stream_in_V_id_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_id_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_id_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_id_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_id_V_0_ack_out;
    sc_signal< sc_lv<5> > stream_in_V_id_V_0_payload_A;
    sc_signal< sc_lv<5> > stream_in_V_id_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_id_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_id_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_id_V_0_sel;
    sc_signal< sc_logic > stream_in_V_id_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_id_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_id_V_0_state;
    sc_signal< sc_logic > stream_in_V_id_V_0_state_cmp_full;
    sc_signal< sc_lv<6> > stream_in_V_dest_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_dest_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_dest_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_dest_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_dest_V_0_ack_out;
    sc_signal< sc_lv<6> > stream_in_V_dest_V_0_payload_A;
    sc_signal< sc_lv<6> > stream_in_V_dest_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_dest_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_dest_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_dest_V_0_sel;
    sc_signal< sc_logic > stream_in_V_dest_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_dest_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_dest_V_0_state;
    sc_signal< sc_logic > stream_in_V_dest_V_0_state_cmp_full;
    sc_signal< sc_lv<32> > stream_out_V_data_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_data_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_data_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_data_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_data_V_1_ack_out;
    sc_signal< sc_lv<32> > stream_out_V_data_V_1_payload_A;
    sc_signal< sc_lv<32> > stream_out_V_data_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_data_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_data_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_data_V_1_sel;
    sc_signal< sc_logic > stream_out_V_data_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_data_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_data_V_1_state;
    sc_signal< sc_logic > stream_out_V_data_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > stream_out_V_keep_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_keep_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_keep_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_keep_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_keep_V_1_ack_out;
    sc_signal< sc_lv<4> > stream_out_V_keep_V_1_payload_A;
    sc_signal< sc_lv<4> > stream_out_V_keep_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_keep_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_keep_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_keep_V_1_sel;
    sc_signal< sc_logic > stream_out_V_keep_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_keep_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_keep_V_1_state;
    sc_signal< sc_logic > stream_out_V_keep_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > stream_out_V_strb_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_strb_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_strb_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_strb_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_strb_V_1_ack_out;
    sc_signal< sc_lv<4> > stream_out_V_strb_V_1_payload_A;
    sc_signal< sc_lv<4> > stream_out_V_strb_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_strb_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_strb_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_strb_V_1_sel;
    sc_signal< sc_logic > stream_out_V_strb_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_strb_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_strb_V_1_state;
    sc_signal< sc_logic > stream_out_V_strb_V_1_state_cmp_full;
    sc_signal< sc_lv<2> > stream_out_V_user_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_user_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_user_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_user_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_user_V_1_ack_out;
    sc_signal< sc_lv<2> > stream_out_V_user_V_1_payload_A;
    sc_signal< sc_lv<2> > stream_out_V_user_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_user_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_user_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_user_V_1_sel;
    sc_signal< sc_logic > stream_out_V_user_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_user_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_user_V_1_state;
    sc_signal< sc_logic > stream_out_V_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > stream_out_V_last_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_last_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_last_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_last_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_last_V_1_ack_out;
    sc_signal< sc_lv<1> > stream_out_V_last_V_1_payload_A;
    sc_signal< sc_lv<1> > stream_out_V_last_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_last_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_last_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_last_V_1_sel;
    sc_signal< sc_logic > stream_out_V_last_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_last_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_last_V_1_state;
    sc_signal< sc_logic > stream_out_V_last_V_1_state_cmp_full;
    sc_signal< sc_lv<5> > stream_out_V_id_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_id_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_id_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_id_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_id_V_1_ack_out;
    sc_signal< sc_lv<5> > stream_out_V_id_V_1_payload_A;
    sc_signal< sc_lv<5> > stream_out_V_id_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_id_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_id_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_id_V_1_sel;
    sc_signal< sc_logic > stream_out_V_id_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_id_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_id_V_1_state;
    sc_signal< sc_logic > stream_out_V_id_V_1_state_cmp_full;
    sc_signal< sc_lv<6> > stream_out_V_dest_V_1_data_out;
    sc_signal< sc_logic > stream_out_V_dest_V_1_vld_in;
    sc_signal< sc_logic > stream_out_V_dest_V_1_vld_out;
    sc_signal< sc_logic > stream_out_V_dest_V_1_ack_in;
    sc_signal< sc_logic > stream_out_V_dest_V_1_ack_out;
    sc_signal< sc_lv<6> > stream_out_V_dest_V_1_payload_A;
    sc_signal< sc_lv<6> > stream_out_V_dest_V_1_payload_B;
    sc_signal< sc_logic > stream_out_V_dest_V_1_sel_rd;
    sc_signal< sc_logic > stream_out_V_dest_V_1_sel_wr;
    sc_signal< sc_logic > stream_out_V_dest_V_1_sel;
    sc_signal< sc_logic > stream_out_V_dest_V_1_load_A;
    sc_signal< sc_logic > stream_out_V_dest_V_1_load_B;
    sc_signal< sc_lv<2> > stream_out_V_dest_V_1_state;
    sc_signal< sc_logic > stream_out_V_dest_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > data_in_V_address0;
    sc_signal< sc_logic > data_in_V_ce0;
    sc_signal< sc_logic > data_in_V_we0;
    sc_signal< sc_lv<32> > data_in_V_d0;
    sc_signal< sc_lv<32> > data_in_V_q0;
    sc_signal< sc_lv<4> > coeff_address0;
    sc_signal< sc_logic > coeff_ce0;
    sc_signal< sc_lv<1> > coeff_q0;
    sc_signal< sc_logic > stream_in_TDATA_blk_n;
    sc_signal< sc_logic > stream_out_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_2_fu_204_p2;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > tmp_data_V_reg_252;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<4> > tmp_keep_V_reg_258;
    sc_signal< sc_lv<4> > tmp_strb_V_reg_263;
    sc_signal< sc_lv<2> > tmp_user_V_reg_268;
    sc_signal< sc_lv<1> > tmp_last_V_reg_273;
    sc_signal< sc_lv<5> > tmp_id_V_reg_278;
    sc_signal< sc_lv<6> > tmp_dest_V_reg_283;
    sc_signal< sc_lv<64> > tmp_3_fu_210_p1;
    sc_signal< sc_lv<64> > tmp_3_reg_291;
    sc_signal< bool > ap_block_state2_io;
    sc_signal< sc_lv<4> > i_1_fu_215_p2;
    sc_signal< sc_lv<4> > i_1_reg_296;
    sc_signal< sc_lv<32> > acc_V_2_fu_226_p2;
    sc_signal< sc_lv<32> > acc_V_fu_246_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<32> > p_s_reg_153;
    sc_signal< sc_lv<4> > i_reg_165;
    sc_signal< sc_lv<64> > tmp_5_fu_221_p1;
    sc_signal< sc_lv<32> > tmp_fu_232_p3;
    sc_signal< sc_lv<32> > p_1_fu_240_p2;
    sc_signal< bool > ap_block_state4;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_acc_V_2_fu_226_p2();
    void thread_acc_V_fu_246_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_state1();
    void thread_ap_block_state2_io();
    void thread_ap_block_state4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_coeff_address0();
    void thread_coeff_ce0();
    void thread_data_in_V_address0();
    void thread_data_in_V_ce0();
    void thread_data_in_V_d0();
    void thread_data_in_V_we0();
    void thread_i_1_fu_215_p2();
    void thread_p_1_fu_240_p2();
    void thread_stream_in_TDATA_blk_n();
    void thread_stream_in_TREADY();
    void thread_stream_in_V_data_V_0_ack_in();
    void thread_stream_in_V_data_V_0_ack_out();
    void thread_stream_in_V_data_V_0_data_out();
    void thread_stream_in_V_data_V_0_load_A();
    void thread_stream_in_V_data_V_0_load_B();
    void thread_stream_in_V_data_V_0_sel();
    void thread_stream_in_V_data_V_0_state_cmp_full();
    void thread_stream_in_V_data_V_0_vld_in();
    void thread_stream_in_V_data_V_0_vld_out();
    void thread_stream_in_V_dest_V_0_ack_in();
    void thread_stream_in_V_dest_V_0_ack_out();
    void thread_stream_in_V_dest_V_0_data_out();
    void thread_stream_in_V_dest_V_0_load_A();
    void thread_stream_in_V_dest_V_0_load_B();
    void thread_stream_in_V_dest_V_0_sel();
    void thread_stream_in_V_dest_V_0_state_cmp_full();
    void thread_stream_in_V_dest_V_0_vld_in();
    void thread_stream_in_V_dest_V_0_vld_out();
    void thread_stream_in_V_id_V_0_ack_in();
    void thread_stream_in_V_id_V_0_ack_out();
    void thread_stream_in_V_id_V_0_data_out();
    void thread_stream_in_V_id_V_0_load_A();
    void thread_stream_in_V_id_V_0_load_B();
    void thread_stream_in_V_id_V_0_sel();
    void thread_stream_in_V_id_V_0_state_cmp_full();
    void thread_stream_in_V_id_V_0_vld_in();
    void thread_stream_in_V_id_V_0_vld_out();
    void thread_stream_in_V_keep_V_0_ack_in();
    void thread_stream_in_V_keep_V_0_ack_out();
    void thread_stream_in_V_keep_V_0_data_out();
    void thread_stream_in_V_keep_V_0_load_A();
    void thread_stream_in_V_keep_V_0_load_B();
    void thread_stream_in_V_keep_V_0_sel();
    void thread_stream_in_V_keep_V_0_state_cmp_full();
    void thread_stream_in_V_keep_V_0_vld_in();
    void thread_stream_in_V_keep_V_0_vld_out();
    void thread_stream_in_V_last_V_0_ack_in();
    void thread_stream_in_V_last_V_0_ack_out();
    void thread_stream_in_V_last_V_0_data_out();
    void thread_stream_in_V_last_V_0_load_A();
    void thread_stream_in_V_last_V_0_load_B();
    void thread_stream_in_V_last_V_0_sel();
    void thread_stream_in_V_last_V_0_state_cmp_full();
    void thread_stream_in_V_last_V_0_vld_in();
    void thread_stream_in_V_last_V_0_vld_out();
    void thread_stream_in_V_strb_V_0_ack_in();
    void thread_stream_in_V_strb_V_0_ack_out();
    void thread_stream_in_V_strb_V_0_data_out();
    void thread_stream_in_V_strb_V_0_load_A();
    void thread_stream_in_V_strb_V_0_load_B();
    void thread_stream_in_V_strb_V_0_sel();
    void thread_stream_in_V_strb_V_0_state_cmp_full();
    void thread_stream_in_V_strb_V_0_vld_in();
    void thread_stream_in_V_strb_V_0_vld_out();
    void thread_stream_in_V_user_V_0_ack_in();
    void thread_stream_in_V_user_V_0_ack_out();
    void thread_stream_in_V_user_V_0_data_out();
    void thread_stream_in_V_user_V_0_load_A();
    void thread_stream_in_V_user_V_0_load_B();
    void thread_stream_in_V_user_V_0_sel();
    void thread_stream_in_V_user_V_0_state_cmp_full();
    void thread_stream_in_V_user_V_0_vld_in();
    void thread_stream_in_V_user_V_0_vld_out();
    void thread_stream_out_TDATA();
    void thread_stream_out_TDATA_blk_n();
    void thread_stream_out_TDEST();
    void thread_stream_out_TID();
    void thread_stream_out_TKEEP();
    void thread_stream_out_TLAST();
    void thread_stream_out_TSTRB();
    void thread_stream_out_TUSER();
    void thread_stream_out_TVALID();
    void thread_stream_out_V_data_V_1_ack_in();
    void thread_stream_out_V_data_V_1_ack_out();
    void thread_stream_out_V_data_V_1_data_out();
    void thread_stream_out_V_data_V_1_load_A();
    void thread_stream_out_V_data_V_1_load_B();
    void thread_stream_out_V_data_V_1_sel();
    void thread_stream_out_V_data_V_1_state_cmp_full();
    void thread_stream_out_V_data_V_1_vld_in();
    void thread_stream_out_V_data_V_1_vld_out();
    void thread_stream_out_V_dest_V_1_ack_in();
    void thread_stream_out_V_dest_V_1_ack_out();
    void thread_stream_out_V_dest_V_1_data_out();
    void thread_stream_out_V_dest_V_1_load_A();
    void thread_stream_out_V_dest_V_1_load_B();
    void thread_stream_out_V_dest_V_1_sel();
    void thread_stream_out_V_dest_V_1_state_cmp_full();
    void thread_stream_out_V_dest_V_1_vld_in();
    void thread_stream_out_V_dest_V_1_vld_out();
    void thread_stream_out_V_id_V_1_ack_in();
    void thread_stream_out_V_id_V_1_ack_out();
    void thread_stream_out_V_id_V_1_data_out();
    void thread_stream_out_V_id_V_1_load_A();
    void thread_stream_out_V_id_V_1_load_B();
    void thread_stream_out_V_id_V_1_sel();
    void thread_stream_out_V_id_V_1_state_cmp_full();
    void thread_stream_out_V_id_V_1_vld_in();
    void thread_stream_out_V_id_V_1_vld_out();
    void thread_stream_out_V_keep_V_1_ack_in();
    void thread_stream_out_V_keep_V_1_ack_out();
    void thread_stream_out_V_keep_V_1_data_out();
    void thread_stream_out_V_keep_V_1_load_A();
    void thread_stream_out_V_keep_V_1_load_B();
    void thread_stream_out_V_keep_V_1_sel();
    void thread_stream_out_V_keep_V_1_state_cmp_full();
    void thread_stream_out_V_keep_V_1_vld_in();
    void thread_stream_out_V_keep_V_1_vld_out();
    void thread_stream_out_V_last_V_1_ack_in();
    void thread_stream_out_V_last_V_1_ack_out();
    void thread_stream_out_V_last_V_1_data_out();
    void thread_stream_out_V_last_V_1_load_A();
    void thread_stream_out_V_last_V_1_load_B();
    void thread_stream_out_V_last_V_1_sel();
    void thread_stream_out_V_last_V_1_state_cmp_full();
    void thread_stream_out_V_last_V_1_vld_in();
    void thread_stream_out_V_last_V_1_vld_out();
    void thread_stream_out_V_strb_V_1_ack_in();
    void thread_stream_out_V_strb_V_1_ack_out();
    void thread_stream_out_V_strb_V_1_data_out();
    void thread_stream_out_V_strb_V_1_load_A();
    void thread_stream_out_V_strb_V_1_load_B();
    void thread_stream_out_V_strb_V_1_sel();
    void thread_stream_out_V_strb_V_1_state_cmp_full();
    void thread_stream_out_V_strb_V_1_vld_in();
    void thread_stream_out_V_strb_V_1_vld_out();
    void thread_stream_out_V_user_V_1_ack_in();
    void thread_stream_out_V_user_V_1_ack_out();
    void thread_stream_out_V_user_V_1_data_out();
    void thread_stream_out_V_user_V_1_load_A();
    void thread_stream_out_V_user_V_1_load_B();
    void thread_stream_out_V_user_V_1_sel();
    void thread_stream_out_V_user_V_1_state_cmp_full();
    void thread_stream_out_V_user_V_1_vld_in();
    void thread_stream_out_V_user_V_1_vld_out();
    void thread_tmp_2_fu_204_p2();
    void thread_tmp_3_fu_210_p1();
    void thread_tmp_5_fu_221_p1();
    void thread_tmp_fu_232_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
