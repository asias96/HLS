

================================================================
== Vivado HLS Report for 'fir'
================================================================
* Date:           Wed Oct 30 11:40:53 2019

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        FIR_AXI4_new
* Solution:       Solution1
* Product family: zynq
* Target device:  xc7z010clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.742|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  606|  606|  606|  606|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+-----+-----+----------+-----------+-----------+------+----------+
        |               |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name   | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------+-----+-----+----------+-----------+-----------+------+----------+
        |- STREAM_LOOP  |  604|  604|         6|          1|          1|   600|    yes   |
        +---------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 1
  Pipeline-0 : II = 1, D = 6, States = { 2 3 4 5 6 7 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	8  / (exitcond)
	3  / (!exitcond)
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	2  / true
8 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %coeff_9_V), !map !49"   --->   Operation 9 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %coeff_8_V), !map !55"   --->   Operation 10 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %coeff_7_V), !map !61"   --->   Operation 11 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %coeff_6_V), !map !67"   --->   Operation 12 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %coeff_5_V), !map !73"   --->   Operation 13 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %coeff_4_V), !map !79"   --->   Operation 14 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %coeff_3_V), !map !85"   --->   Operation 15 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %coeff_2_V), !map !91"   --->   Operation 16 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %coeff_1_V), !map !97"   --->   Operation 17 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %coeff_0_V), !map !103"   --->   Operation 18 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %stream_in_V_data_V), !map !109"   --->   Operation 19 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i4* %stream_in_V_keep_V), !map !115"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i4* %stream_in_V_strb_V), !map !119"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %stream_in_V_user_V), !map !123"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %stream_in_V_last_V), !map !127"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i5* %stream_in_V_id_V), !map !131"   --->   Operation 24 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i6* %stream_in_V_dest_V), !map !135"   --->   Operation 25 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %stream_out_V_data_V), !map !139"   --->   Operation 26 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i4* %stream_out_V_keep_V), !map !143"   --->   Operation 27 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i4* %stream_out_V_strb_V), !map !147"   --->   Operation 28 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i2* %stream_out_V_user_V), !map !151"   --->   Operation 29 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %stream_out_V_last_V), !map !155"   --->   Operation 30 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i5* %stream_out_V_id_V), !map !159"   --->   Operation 31 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i6* %stream_out_V_dest_V), !map !163"   --->   Operation 32 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @fir_str) nounwind"   --->   Operation 33 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [7 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FIR_AXI4/.settings/fir.cpp:7]   --->   Operation 34 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %coeff_0_V, i32* %coeff_1_V, i32* %coeff_2_V, i32* %coeff_3_V, i32* %coeff_4_V, i32* %coeff_5_V, i32* %coeff_6_V, i32* %coeff_7_V, i32* %coeff_8_V, i32* %coeff_9_V, [10 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [7 x i8]* @p_str3, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FIR_AXI4/.settings/fir.cpp:8]   --->   Operation 35 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %stream_out_V_data_V, i4* %stream_out_V_keep_V, i4* %stream_out_V_strb_V, i2* %stream_out_V_user_V, i1* %stream_out_V_last_V, i5* %stream_out_V_id_V, i6* %stream_out_V_dest_V, [5 x i8]* @p_str4, i32 1, i32 1, [5 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FIR_AXI4/.settings/fir.cpp:9]   --->   Operation 36 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %stream_in_V_data_V, i4* %stream_in_V_keep_V, i4* %stream_in_V_strb_V, i2* %stream_in_V_user_V, i1* %stream_in_V_last_V, i5* %stream_in_V_id_V, i6* %stream_in_V_dest_V, [5 x i8]* @p_str4, i32 1, i32 1, [5 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [FIR_AXI4/.settings/fir.cpp:10]   --->   Operation 37 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (1.76ns)   --->   "br label %0" [FIR_AXI4/.settings/fir.cpp:21]   --->   Operation 38 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.77>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%j = phi i10 [ 0, %codeRepl ], [ %j_1, %1 ]"   --->   Operation 39 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (1.77ns)   --->   "%exitcond = icmp eq i10 %j, -424" [FIR_AXI4/.settings/fir.cpp:21]   --->   Operation 40 'icmp' 'exitcond' <Predicate = true> <Delay = 1.77> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 600, i64 600, i64 600)"   --->   Operation 41 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (1.73ns)   --->   "%j_1 = add i10 %j, 1" [FIR_AXI4/.settings/fir.cpp:21]   --->   Operation 42 'add' 'j_1' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %2, label %1" [FIR_AXI4/.settings/fir.cpp:21]   --->   Operation 43 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%empty_2 = call { i32, i4, i4, i2, i1, i5, i6 } @_ssdm_op_Read.axis.volatile.i32P.i4P.i4P.i2P.i1P.i5P.i6P(i32* %stream_in_V_data_V, i4* %stream_in_V_keep_V, i4* %stream_in_V_strb_V, i2* %stream_in_V_user_V, i1* %stream_in_V_last_V, i5* %stream_in_V_id_V, i6* %stream_in_V_dest_V)" [FIR_AXI4/.settings/fir.cpp:24]   --->   Operation 44 'read' 'empty_2' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_data_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_2, 0" [FIR_AXI4/.settings/fir.cpp:24]   --->   Operation 45 'extractvalue' 'tmp_data_V' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_keep_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_2, 1" [FIR_AXI4/.settings/fir.cpp:24]   --->   Operation 46 'extractvalue' 'tmp_keep_V' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%tmp_strb_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_2, 2" [FIR_AXI4/.settings/fir.cpp:24]   --->   Operation 47 'extractvalue' 'tmp_strb_V' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_user_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_2, 3" [FIR_AXI4/.settings/fir.cpp:24]   --->   Operation 48 'extractvalue' 'tmp_user_V' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_last_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_2, 4" [FIR_AXI4/.settings/fir.cpp:24]   --->   Operation 49 'extractvalue' 'tmp_last_V' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%tmp_id_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_2, 5" [FIR_AXI4/.settings/fir.cpp:24]   --->   Operation 50 'extractvalue' 'tmp_id_V' <Predicate = (!exitcond)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%tmp_dest_V = extractvalue { i32, i4, i4, i2, i1, i5, i6 } %empty_2, 6" [FIR_AXI4/.settings/fir.cpp:24]   --->   Operation 51 'extractvalue' 'tmp_dest_V' <Predicate = (!exitcond)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.00>
ST_3 : Operation 52 [1/1] (1.00ns)   --->   "%coeff_9_V_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %coeff_9_V)" [FIR_AXI4/.settings/fir.cpp:31]   --->   Operation 52 'read' 'coeff_9_V_read' <Predicate = (!exitcond)> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 53 [1/1] (1.00ns)   --->   "%coeff_8_V_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %coeff_8_V)" [FIR_AXI4/.settings/fir.cpp:31]   --->   Operation 53 'read' 'coeff_8_V_read' <Predicate = (!exitcond)> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 54 [1/1] (1.00ns)   --->   "%coeff_7_V_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %coeff_7_V)" [FIR_AXI4/.settings/fir.cpp:31]   --->   Operation 54 'read' 'coeff_7_V_read' <Predicate = (!exitcond)> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 55 [1/1] (1.00ns)   --->   "%coeff_6_V_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %coeff_6_V)" [FIR_AXI4/.settings/fir.cpp:31]   --->   Operation 55 'read' 'coeff_6_V_read' <Predicate = (!exitcond)> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 56 [1/1] (1.00ns)   --->   "%coeff_5_V_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %coeff_5_V)" [FIR_AXI4/.settings/fir.cpp:31]   --->   Operation 56 'read' 'coeff_5_V_read' <Predicate = (!exitcond)> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 57 [1/1] (1.00ns)   --->   "%coeff_4_V_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %coeff_4_V)" [FIR_AXI4/.settings/fir.cpp:31]   --->   Operation 57 'read' 'coeff_4_V_read' <Predicate = (!exitcond)> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 58 [1/1] (1.00ns)   --->   "%coeff_3_V_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %coeff_3_V)" [FIR_AXI4/.settings/fir.cpp:31]   --->   Operation 58 'read' 'coeff_3_V_read' <Predicate = (!exitcond)> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 59 [1/1] (1.00ns)   --->   "%coeff_2_V_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %coeff_2_V)" [FIR_AXI4/.settings/fir.cpp:31]   --->   Operation 59 'read' 'coeff_2_V_read' <Predicate = (!exitcond)> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 60 [1/1] (1.00ns)   --->   "%coeff_1_V_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %coeff_1_V)" [FIR_AXI4/.settings/fir.cpp:31]   --->   Operation 60 'read' 'coeff_1_V_read' <Predicate = (!exitcond)> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 61 [1/1] (1.00ns)   --->   "%coeff_0_V_read = call i32 @_ssdm_op_Read.s_axilite.i32P(i32* %coeff_0_V)" [FIR_AXI4/.settings/fir.cpp:35]   --->   Operation 61 'read' 'coeff_0_V_read' <Predicate = (!exitcond)> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>

State 4 <SV = 3> <Delay = 8.51>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%data_in_V_8_load = load i32* @data_in_V_8, align 16" [FIR_AXI4/.settings/fir.cpp:30]   --->   Operation 62 'load' 'data_in_V_8_load' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (8.51ns)   --->   "%p_1 = mul i32 %data_in_V_8_load, %coeff_9_V_read" [FIR_AXI4/.settings/fir.cpp:31]   --->   Operation 63 'mul' 'p_1' <Predicate = (!exitcond)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%data_in_V_7_load = load i32* @data_in_V_7, align 4" [FIR_AXI4/.settings/fir.cpp:30]   --->   Operation 64 'load' 'data_in_V_7_load' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "store i32 %data_in_V_7_load, i32* @data_in_V_8, align 16" [FIR_AXI4/.settings/fir.cpp:30]   --->   Operation 65 'store' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (8.51ns)   --->   "%p_1_1 = mul i32 %data_in_V_7_load, %coeff_8_V_read" [FIR_AXI4/.settings/fir.cpp:31]   --->   Operation 66 'mul' 'p_1_1' <Predicate = (!exitcond)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%data_in_V_6_load = load i32* @data_in_V_6, align 8" [FIR_AXI4/.settings/fir.cpp:30]   --->   Operation 67 'load' 'data_in_V_6_load' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "store i32 %data_in_V_6_load, i32* @data_in_V_7, align 4" [FIR_AXI4/.settings/fir.cpp:30]   --->   Operation 68 'store' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (8.51ns)   --->   "%p_1_2 = mul i32 %data_in_V_6_load, %coeff_7_V_read" [FIR_AXI4/.settings/fir.cpp:31]   --->   Operation 69 'mul' 'p_1_2' <Predicate = (!exitcond)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%data_in_V_5_load = load i32* @data_in_V_5, align 4" [FIR_AXI4/.settings/fir.cpp:30]   --->   Operation 70 'load' 'data_in_V_5_load' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "store i32 %data_in_V_5_load, i32* @data_in_V_6, align 8" [FIR_AXI4/.settings/fir.cpp:30]   --->   Operation 71 'store' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (8.51ns)   --->   "%p_1_3 = mul i32 %data_in_V_5_load, %coeff_6_V_read" [FIR_AXI4/.settings/fir.cpp:31]   --->   Operation 72 'mul' 'p_1_3' <Predicate = (!exitcond)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "%data_in_V_4_load = load i32* @data_in_V_4, align 16" [FIR_AXI4/.settings/fir.cpp:30]   --->   Operation 73 'load' 'data_in_V_4_load' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "store i32 %data_in_V_4_load, i32* @data_in_V_5, align 4" [FIR_AXI4/.settings/fir.cpp:30]   --->   Operation 74 'store' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 75 [1/1] (8.51ns)   --->   "%p_1_4 = mul i32 %data_in_V_4_load, %coeff_5_V_read" [FIR_AXI4/.settings/fir.cpp:31]   --->   Operation 75 'mul' 'p_1_4' <Predicate = (!exitcond)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%data_in_V_3_load = load i32* @data_in_V_3, align 4" [FIR_AXI4/.settings/fir.cpp:30]   --->   Operation 76 'load' 'data_in_V_3_load' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "store i32 %data_in_V_3_load, i32* @data_in_V_4, align 16" [FIR_AXI4/.settings/fir.cpp:30]   --->   Operation 77 'store' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (8.51ns)   --->   "%p_1_5 = mul i32 %data_in_V_3_load, %coeff_4_V_read" [FIR_AXI4/.settings/fir.cpp:31]   --->   Operation 78 'mul' 'p_1_5' <Predicate = (!exitcond)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%data_in_V_2_load = load i32* @data_in_V_2, align 8" [FIR_AXI4/.settings/fir.cpp:30]   --->   Operation 79 'load' 'data_in_V_2_load' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "store i32 %data_in_V_2_load, i32* @data_in_V_3, align 4" [FIR_AXI4/.settings/fir.cpp:30]   --->   Operation 80 'store' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (8.51ns)   --->   "%p_1_6 = mul i32 %data_in_V_2_load, %coeff_3_V_read" [FIR_AXI4/.settings/fir.cpp:31]   --->   Operation 81 'mul' 'p_1_6' <Predicate = (!exitcond)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%data_in_V_1_load = load i32* @data_in_V_1, align 4" [FIR_AXI4/.settings/fir.cpp:30]   --->   Operation 82 'load' 'data_in_V_1_load' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "store i32 %data_in_V_1_load, i32* @data_in_V_2, align 8" [FIR_AXI4/.settings/fir.cpp:30]   --->   Operation 83 'store' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 84 [1/1] (8.51ns)   --->   "%p_1_7 = mul i32 %data_in_V_1_load, %coeff_2_V_read" [FIR_AXI4/.settings/fir.cpp:31]   --->   Operation 84 'mul' 'p_1_7' <Predicate = (!exitcond)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "%data_in_V_0_load = load i32* @data_in_V_0, align 16" [FIR_AXI4/.settings/fir.cpp:30]   --->   Operation 85 'load' 'data_in_V_0_load' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "store i32 %data_in_V_0_load, i32* @data_in_V_1, align 4" [FIR_AXI4/.settings/fir.cpp:30]   --->   Operation 86 'store' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (8.51ns)   --->   "%p_1_8 = mul i32 %data_in_V_0_load, %coeff_1_V_read" [FIR_AXI4/.settings/fir.cpp:31]   --->   Operation 87 'mul' 'p_1_8' <Predicate = (!exitcond)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 88 [1/1] (0.00ns)   --->   "store i32 %tmp_data_V, i32* @data_in_V_0, align 16" [FIR_AXI4/.settings/fir.cpp:34]   --->   Operation 88 'store' <Predicate = (!exitcond)> <Delay = 0.00>
ST_4 : Operation 89 [1/1] (8.51ns)   --->   "%p_2 = mul i32 %coeff_0_V_read, %tmp_data_V" [FIR_AXI4/.settings/fir.cpp:35]   --->   Operation 89 'mul' 'p_2' <Predicate = (!exitcond)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 8.74>
ST_5 : Operation 90 [1/1] (2.55ns)   --->   "%tmp2 = add i32 %p_1, %p_1_1" [FIR_AXI4/.settings/fir.cpp:35]   --->   Operation 90 'add' 'tmp2' <Predicate = (!exitcond)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 91 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp4 = add i32 %p_1_3, %p_1_4" [FIR_AXI4/.settings/fir.cpp:35]   --->   Operation 91 'add' 'tmp4' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 92 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%tmp3 = add i32 %tmp4, %p_1_2" [FIR_AXI4/.settings/fir.cpp:35]   --->   Operation 92 'add' 'tmp3' <Predicate = (!exitcond)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 93 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp6 = add i32 %p_1_5, %p_1_6" [FIR_AXI4/.settings/fir.cpp:35]   --->   Operation 93 'add' 'tmp6' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 94 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp8 = add i32 %p_1_8, %p_2" [FIR_AXI4/.settings/fir.cpp:35]   --->   Operation 94 'add' 'tmp8' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 95 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%tmp7 = add i32 %tmp8, %p_1_7" [FIR_AXI4/.settings/fir.cpp:35]   --->   Operation 95 'add' 'tmp7' <Predicate = (!exitcond)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 96 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%tmp5 = add i32 %tmp7, %tmp6" [FIR_AXI4/.settings/fir.cpp:35]   --->   Operation 96 'add' 'tmp5' <Predicate = (!exitcond)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

State 6 <SV = 5> <Delay = 4.37>
ST_6 : Operation 97 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp1 = add i32 %tmp3, %tmp2" [FIR_AXI4/.settings/fir.cpp:35]   --->   Operation 97 'add' 'tmp1' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 98 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%acc_V = add i32 %tmp5, %tmp1" [FIR_AXI4/.settings/fir.cpp:35]   --->   Operation 98 'add' 'acc_V' <Predicate = (!exitcond)> <Delay = 4.37> <Core = "TAddSub">   --->   Core 84 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 99 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P.i4P.i4P.i2P.i1P.i5P.i6P(i32* %stream_out_V_data_V, i4* %stream_out_V_keep_V, i4* %stream_out_V_strb_V, i2* %stream_out_V_user_V, i1* %stream_out_V_last_V, i5* %stream_out_V_id_V, i6* %stream_out_V_dest_V, i32 %acc_V, i4 %tmp_keep_V, i4 %tmp_strb_V, i2 %tmp_user_V, i1 %tmp_last_V, i5 %tmp_id_V, i6 %tmp_dest_V)" [FIR_AXI4/.settings/fir.cpp:45]   --->   Operation 99 'write' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 7 <SV = 6> <Delay = 0.00>
ST_7 : Operation 100 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str6) nounwind" [FIR_AXI4/.settings/fir.cpp:21]   --->   Operation 100 'specloopname' <Predicate = (!exitcond)> <Delay = 0.00>
ST_7 : Operation 101 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6)" [FIR_AXI4/.settings/fir.cpp:21]   --->   Operation 101 'specregionbegin' 'tmp' <Predicate = (!exitcond)> <Delay = 0.00>
ST_7 : Operation 102 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [FIR_AXI4/.settings/fir.cpp:22]   --->   Operation 102 'specpipeline' <Predicate = (!exitcond)> <Delay = 0.00>
ST_7 : Operation 103 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P.i4P.i4P.i2P.i1P.i5P.i6P(i32* %stream_out_V_data_V, i4* %stream_out_V_keep_V, i4* %stream_out_V_strb_V, i2* %stream_out_V_user_V, i1* %stream_out_V_last_V, i5* %stream_out_V_id_V, i6* %stream_out_V_dest_V, i32 %acc_V, i4 %tmp_keep_V, i4 %tmp_strb_V, i2 %tmp_user_V, i1 %tmp_last_V, i5 %tmp_id_V, i6 %tmp_dest_V)" [FIR_AXI4/.settings/fir.cpp:45]   --->   Operation 103 'write' <Predicate = (!exitcond)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_7 : Operation 104 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp)" [FIR_AXI4/.settings/fir.cpp:46]   --->   Operation 104 'specregionend' 'empty_3' <Predicate = (!exitcond)> <Delay = 0.00>
ST_7 : Operation 105 [1/1] (0.00ns)   --->   "br label %0" [FIR_AXI4/.settings/fir.cpp:21]   --->   Operation 105 'br' <Predicate = (!exitcond)> <Delay = 0.00>

State 8 <SV = 2> <Delay = 0.00>
ST_8 : Operation 106 [1/1] (0.00ns)   --->   "ret void" [FIR_AXI4/.settings/fir.cpp:47]   --->   Operation 106 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', FIR_AXI4/.settings/fir.cpp:21) [65]  (1.77 ns)

 <State 2>: 1.77ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', FIR_AXI4/.settings/fir.cpp:21) [65]  (0 ns)
	'icmp' operation ('exitcond', FIR_AXI4/.settings/fir.cpp:21) [66]  (1.77 ns)

 <State 3>: 1ns
The critical path consists of the following:
	s_axi read on port 'coeff_9_V' (FIR_AXI4/.settings/fir.cpp:31) [83]  (1 ns)

 <State 4>: 8.51ns
The critical path consists of the following:
	'load' operation ('data_in_V_8_load', FIR_AXI4/.settings/fir.cpp:30) on static variable 'data_in_V_8' [82]  (0 ns)
	'mul' operation ('p_1', FIR_AXI4/.settings/fir.cpp:31) [84]  (8.51 ns)

 <State 5>: 8.74ns
The critical path consists of the following:
	'add' operation ('tmp8', FIR_AXI4/.settings/fir.cpp:35) [125]  (0 ns)
	'add' operation ('tmp7', FIR_AXI4/.settings/fir.cpp:35) [126]  (4.37 ns)
	'add' operation ('tmp5', FIR_AXI4/.settings/fir.cpp:35) [127]  (4.37 ns)

 <State 6>: 4.37ns
The critical path consists of the following:
	'add' operation ('tmp1', FIR_AXI4/.settings/fir.cpp:35) [123]  (0 ns)
	'add' operation ('acc.V', FIR_AXI4/.settings/fir.cpp:35) [128]  (4.37 ns)

 <State 7>: 0ns
The critical path consists of the following:

 <State 8>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
