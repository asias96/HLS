-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Loop_STREAM_LOOP_pro is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    stream_in_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    stream_in_TVALID : IN STD_LOGIC;
    stream_in_TREADY : OUT STD_LOGIC;
    stream_in_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    stream_in_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    stream_in_TUSER : IN STD_LOGIC_VECTOR (1 downto 0);
    stream_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    stream_in_TID : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_in_TDEST : IN STD_LOGIC_VECTOR (5 downto 0);
    coeff_9_V : IN STD_LOGIC_VECTOR (31 downto 0);
    coeff_8_V : IN STD_LOGIC_VECTOR (31 downto 0);
    coeff_7_V : IN STD_LOGIC_VECTOR (31 downto 0);
    coeff_6_V : IN STD_LOGIC_VECTOR (31 downto 0);
    coeff_5_V : IN STD_LOGIC_VECTOR (31 downto 0);
    coeff_4_V : IN STD_LOGIC_VECTOR (31 downto 0);
    coeff_3_V : IN STD_LOGIC_VECTOR (31 downto 0);
    coeff_2_V : IN STD_LOGIC_VECTOR (31 downto 0);
    coeff_1_V : IN STD_LOGIC_VECTOR (31 downto 0);
    coeff_0_V : IN STD_LOGIC_VECTOR (31 downto 0);
    stream_out_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    stream_out_TVALID : OUT STD_LOGIC;
    stream_out_TREADY : IN STD_LOGIC;
    stream_out_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    stream_out_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    stream_out_TUSER : OUT STD_LOGIC_VECTOR (1 downto 0);
    stream_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    stream_out_TID : OUT STD_LOGIC_VECTOR (4 downto 0);
    stream_out_TDEST : OUT STD_LOGIC_VECTOR (5 downto 0) );
end;


architecture behav of Loop_STREAM_LOOP_pro is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv10_258 : STD_LOGIC_VECTOR (9 downto 0) := "1001011000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal stream_in_V_data_V_0_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_in_V_data_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_data_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_data_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_data_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_data_V_0_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_in_V_data_V_0_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_in_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_data_V_0_sel : STD_LOGIC;
    signal stream_in_V_data_V_0_load_A : STD_LOGIC;
    signal stream_in_V_data_V_0_load_B : STD_LOGIC;
    signal stream_in_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_keep_V_0_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_in_V_keep_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_keep_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_keep_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_keep_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_keep_V_0_payload_A : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_in_V_keep_V_0_payload_B : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_in_V_keep_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_keep_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_keep_V_0_sel : STD_LOGIC;
    signal stream_in_V_keep_V_0_load_A : STD_LOGIC;
    signal stream_in_V_keep_V_0_load_B : STD_LOGIC;
    signal stream_in_V_keep_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_keep_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_strb_V_0_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_in_V_strb_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_strb_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_strb_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_strb_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_strb_V_0_payload_A : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_in_V_strb_V_0_payload_B : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_in_V_strb_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_strb_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_strb_V_0_sel : STD_LOGIC;
    signal stream_in_V_strb_V_0_load_A : STD_LOGIC;
    signal stream_in_V_strb_V_0_load_B : STD_LOGIC;
    signal stream_in_V_strb_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_strb_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_user_V_0_data_out : STD_LOGIC_VECTOR (1 downto 0);
    signal stream_in_V_user_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_user_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_user_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_user_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_user_V_0_payload_A : STD_LOGIC_VECTOR (1 downto 0);
    signal stream_in_V_user_V_0_payload_B : STD_LOGIC_VECTOR (1 downto 0);
    signal stream_in_V_user_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_user_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_user_V_0_sel : STD_LOGIC;
    signal stream_in_V_user_V_0_load_A : STD_LOGIC;
    signal stream_in_V_user_V_0_load_B : STD_LOGIC;
    signal stream_in_V_user_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_user_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_last_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_last_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_last_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_last_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_in_V_last_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_last_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_last_V_0_sel : STD_LOGIC;
    signal stream_in_V_last_V_0_load_A : STD_LOGIC;
    signal stream_in_V_last_V_0_load_B : STD_LOGIC;
    signal stream_in_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_last_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_id_V_0_data_out : STD_LOGIC_VECTOR (4 downto 0);
    signal stream_in_V_id_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_id_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_id_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_id_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_id_V_0_payload_A : STD_LOGIC_VECTOR (4 downto 0);
    signal stream_in_V_id_V_0_payload_B : STD_LOGIC_VECTOR (4 downto 0);
    signal stream_in_V_id_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_id_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_id_V_0_sel : STD_LOGIC;
    signal stream_in_V_id_V_0_load_A : STD_LOGIC;
    signal stream_in_V_id_V_0_load_B : STD_LOGIC;
    signal stream_in_V_id_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_id_V_0_state_cmp_full : STD_LOGIC;
    signal stream_in_V_dest_V_0_data_out : STD_LOGIC_VECTOR (5 downto 0);
    signal stream_in_V_dest_V_0_vld_in : STD_LOGIC;
    signal stream_in_V_dest_V_0_vld_out : STD_LOGIC;
    signal stream_in_V_dest_V_0_ack_in : STD_LOGIC;
    signal stream_in_V_dest_V_0_ack_out : STD_LOGIC;
    signal stream_in_V_dest_V_0_payload_A : STD_LOGIC_VECTOR (5 downto 0);
    signal stream_in_V_dest_V_0_payload_B : STD_LOGIC_VECTOR (5 downto 0);
    signal stream_in_V_dest_V_0_sel_rd : STD_LOGIC := '0';
    signal stream_in_V_dest_V_0_sel_wr : STD_LOGIC := '0';
    signal stream_in_V_dest_V_0_sel : STD_LOGIC;
    signal stream_in_V_dest_V_0_load_A : STD_LOGIC;
    signal stream_in_V_dest_V_0_load_B : STD_LOGIC;
    signal stream_in_V_dest_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_in_V_dest_V_0_state_cmp_full : STD_LOGIC;
    signal stream_out_V_data_V_1_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_out_V_data_V_1_vld_in : STD_LOGIC;
    signal stream_out_V_data_V_1_vld_out : STD_LOGIC;
    signal stream_out_V_data_V_1_ack_in : STD_LOGIC;
    signal stream_out_V_data_V_1_ack_out : STD_LOGIC;
    signal stream_out_V_data_V_1_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_out_V_data_V_1_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal stream_out_V_data_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_V_data_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_V_data_V_1_sel : STD_LOGIC;
    signal stream_out_V_data_V_1_load_A : STD_LOGIC;
    signal stream_out_V_data_V_1_load_B : STD_LOGIC;
    signal stream_out_V_data_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_V_data_V_1_state_cmp_full : STD_LOGIC;
    signal stream_out_V_keep_V_1_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_out_V_keep_V_1_vld_in : STD_LOGIC;
    signal stream_out_V_keep_V_1_vld_out : STD_LOGIC;
    signal stream_out_V_keep_V_1_ack_in : STD_LOGIC;
    signal stream_out_V_keep_V_1_ack_out : STD_LOGIC;
    signal stream_out_V_keep_V_1_payload_A : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_out_V_keep_V_1_payload_B : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_out_V_keep_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_V_keep_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_V_keep_V_1_sel : STD_LOGIC;
    signal stream_out_V_keep_V_1_load_A : STD_LOGIC;
    signal stream_out_V_keep_V_1_load_B : STD_LOGIC;
    signal stream_out_V_keep_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_V_keep_V_1_state_cmp_full : STD_LOGIC;
    signal stream_out_V_strb_V_1_data_out : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_out_V_strb_V_1_vld_in : STD_LOGIC;
    signal stream_out_V_strb_V_1_vld_out : STD_LOGIC;
    signal stream_out_V_strb_V_1_ack_in : STD_LOGIC;
    signal stream_out_V_strb_V_1_ack_out : STD_LOGIC;
    signal stream_out_V_strb_V_1_payload_A : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_out_V_strb_V_1_payload_B : STD_LOGIC_VECTOR (3 downto 0);
    signal stream_out_V_strb_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_V_strb_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_V_strb_V_1_sel : STD_LOGIC;
    signal stream_out_V_strb_V_1_load_A : STD_LOGIC;
    signal stream_out_V_strb_V_1_load_B : STD_LOGIC;
    signal stream_out_V_strb_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_V_strb_V_1_state_cmp_full : STD_LOGIC;
    signal stream_out_V_user_V_1_data_out : STD_LOGIC_VECTOR (1 downto 0);
    signal stream_out_V_user_V_1_vld_in : STD_LOGIC;
    signal stream_out_V_user_V_1_vld_out : STD_LOGIC;
    signal stream_out_V_user_V_1_ack_in : STD_LOGIC;
    signal stream_out_V_user_V_1_ack_out : STD_LOGIC;
    signal stream_out_V_user_V_1_payload_A : STD_LOGIC_VECTOR (1 downto 0);
    signal stream_out_V_user_V_1_payload_B : STD_LOGIC_VECTOR (1 downto 0);
    signal stream_out_V_user_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_V_user_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_V_user_V_1_sel : STD_LOGIC;
    signal stream_out_V_user_V_1_load_A : STD_LOGIC;
    signal stream_out_V_user_V_1_load_B : STD_LOGIC;
    signal stream_out_V_user_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_V_user_V_1_state_cmp_full : STD_LOGIC;
    signal stream_out_V_last_V_1_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_V_last_V_1_vld_in : STD_LOGIC;
    signal stream_out_V_last_V_1_vld_out : STD_LOGIC;
    signal stream_out_V_last_V_1_ack_in : STD_LOGIC;
    signal stream_out_V_last_V_1_ack_out : STD_LOGIC;
    signal stream_out_V_last_V_1_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_V_last_V_1_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_V_last_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_V_last_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_V_last_V_1_sel : STD_LOGIC;
    signal stream_out_V_last_V_1_load_A : STD_LOGIC;
    signal stream_out_V_last_V_1_load_B : STD_LOGIC;
    signal stream_out_V_last_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_V_last_V_1_state_cmp_full : STD_LOGIC;
    signal stream_out_V_id_V_1_data_out : STD_LOGIC_VECTOR (4 downto 0);
    signal stream_out_V_id_V_1_vld_in : STD_LOGIC;
    signal stream_out_V_id_V_1_vld_out : STD_LOGIC;
    signal stream_out_V_id_V_1_ack_in : STD_LOGIC;
    signal stream_out_V_id_V_1_ack_out : STD_LOGIC;
    signal stream_out_V_id_V_1_payload_A : STD_LOGIC_VECTOR (4 downto 0);
    signal stream_out_V_id_V_1_payload_B : STD_LOGIC_VECTOR (4 downto 0);
    signal stream_out_V_id_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_V_id_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_V_id_V_1_sel : STD_LOGIC;
    signal stream_out_V_id_V_1_load_A : STD_LOGIC;
    signal stream_out_V_id_V_1_load_B : STD_LOGIC;
    signal stream_out_V_id_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_V_id_V_1_state_cmp_full : STD_LOGIC;
    signal stream_out_V_dest_V_1_data_out : STD_LOGIC_VECTOR (5 downto 0);
    signal stream_out_V_dest_V_1_vld_in : STD_LOGIC;
    signal stream_out_V_dest_V_1_vld_out : STD_LOGIC;
    signal stream_out_V_dest_V_1_ack_in : STD_LOGIC;
    signal stream_out_V_dest_V_1_ack_out : STD_LOGIC;
    signal stream_out_V_dest_V_1_payload_A : STD_LOGIC_VECTOR (5 downto 0);
    signal stream_out_V_dest_V_1_payload_B : STD_LOGIC_VECTOR (5 downto 0);
    signal stream_out_V_dest_V_1_sel_rd : STD_LOGIC := '0';
    signal stream_out_V_dest_V_1_sel_wr : STD_LOGIC := '0';
    signal stream_out_V_dest_V_1_sel : STD_LOGIC;
    signal stream_out_V_dest_V_1_load_A : STD_LOGIC;
    signal stream_out_V_dest_V_1_load_B : STD_LOGIC;
    signal stream_out_V_dest_V_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal stream_out_V_dest_V_1_state_cmp_full : STD_LOGIC;
    signal data_in_V_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal data_in_V_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal data_in_V_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal data_in_V_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal data_in_V_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal data_in_V_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal data_in_V_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal data_in_V_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal data_in_V_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal stream_in_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_TDATA_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal exitcond_reg_452 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_452_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal exitcond_reg_452_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_reg_209 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal j_1_fu_226_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_keep_V_reg_461 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_keep_V_reg_461_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_strb_V_reg_466 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_strb_V_reg_466_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_user_V_reg_471 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_user_V_reg_471_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_last_V_reg_476 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_476_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_id_V_reg_481 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_id_V_reg_481_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_dest_V_reg_486 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_dest_V_reg_486_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal p_1_fu_264_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_reg_491 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_1_fu_280_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_1_reg_496 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_2_fu_296_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_2_reg_501 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_3_fu_312_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_3_reg_506 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_4_fu_328_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_4_reg_511 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_5_fu_344_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_5_reg_516 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_6_fu_360_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_6_reg_521 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_7_fu_376_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_7_reg_526 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_8_fu_392_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_8_reg_531 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_fu_404_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_reg_536 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_410_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_reg_541 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_418_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_reg_546 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_fu_436_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_reg_551 : STD_LOGIC_VECTOR (31 downto 0);
    signal acc_V_fu_446_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_1_fu_264_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_fu_264_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_1_fu_280_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_1_fu_280_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_2_fu_296_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_2_fu_296_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_3_fu_312_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_3_fu_312_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_4_fu_328_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_4_fu_328_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_5_fu_344_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_5_fu_344_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_6_fu_360_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_6_fu_360_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_7_fu_376_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_7_fu_376_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_8_fu_392_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_1_8_fu_392_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_fu_404_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_2_fu_404_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_fu_414_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp8_fu_427_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp7_fu_431_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_423_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_fu_442_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_block_state6 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((stream_out_V_dest_V_1_ack_in = ap_const_logic_0) or (stream_out_V_id_V_1_ack_in = ap_const_logic_0) or (stream_out_V_last_V_1_ack_in = ap_const_logic_0) or (stream_out_V_user_V_1_ack_in = ap_const_logic_0) or (stream_out_V_strb_V_1_ack_in = ap_const_logic_0) or (stream_out_V_keep_V_1_ack_in = ap_const_logic_0) or (stream_out_V_data_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_data_V_0_ack_out = ap_const_logic_1) and (stream_in_V_data_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_data_V_0_sel_rd <= not(stream_in_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_data_V_0_ack_in = ap_const_logic_1) and (stream_in_V_data_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_data_V_0_sel_wr <= not(stream_in_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_data_V_0_state = ap_const_lv2_2) and (stream_in_V_data_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_data_V_0_state = ap_const_lv2_3) and (stream_in_V_data_V_0_vld_in = ap_const_logic_0) and (stream_in_V_data_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_data_V_0_state = ap_const_lv2_1) and (stream_in_V_data_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_data_V_0_state = ap_const_lv2_3) and (stream_in_V_data_V_0_ack_out = ap_const_logic_0) and (stream_in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_data_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_data_V_0_vld_in = ap_const_logic_0) and (stream_in_V_data_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_data_V_0_ack_out = ap_const_logic_0) and (stream_in_V_data_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_data_V_0_state = ap_const_lv2_3)) or ((stream_in_V_data_V_0_state = ap_const_lv2_1) and (stream_in_V_data_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_data_V_0_state = ap_const_lv2_2) and (stream_in_V_data_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_dest_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_dest_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_dest_V_0_ack_out = ap_const_logic_1) and (stream_in_V_dest_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_dest_V_0_sel_rd <= not(stream_in_V_dest_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_dest_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_dest_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_dest_V_0_ack_in = ap_const_logic_1) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_dest_V_0_sel_wr <= not(stream_in_V_dest_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_dest_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_dest_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_dest_V_0_state = ap_const_lv2_2) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_dest_V_0_state = ap_const_lv2_3) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_0) and (stream_in_V_dest_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_dest_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_dest_V_0_state = ap_const_lv2_1) and (stream_in_V_dest_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_dest_V_0_state = ap_const_lv2_3) and (stream_in_V_dest_V_0_ack_out = ap_const_logic_0) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_dest_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_dest_V_0_vld_in = ap_const_logic_0) and (stream_in_V_dest_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_dest_V_0_ack_out = ap_const_logic_0) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_dest_V_0_state = ap_const_lv2_3)) or ((stream_in_V_dest_V_0_state = ap_const_lv2_1) and (stream_in_V_dest_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_dest_V_0_state = ap_const_lv2_2) and (stream_in_V_dest_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_dest_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_dest_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_id_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_id_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_id_V_0_ack_out = ap_const_logic_1) and (stream_in_V_id_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_id_V_0_sel_rd <= not(stream_in_V_id_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_id_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_id_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_id_V_0_ack_in = ap_const_logic_1) and (stream_in_V_id_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_id_V_0_sel_wr <= not(stream_in_V_id_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_id_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_id_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_id_V_0_state = ap_const_lv2_2) and (stream_in_V_id_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_id_V_0_state = ap_const_lv2_3) and (stream_in_V_id_V_0_vld_in = ap_const_logic_0) and (stream_in_V_id_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_id_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_id_V_0_state = ap_const_lv2_1) and (stream_in_V_id_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_id_V_0_state = ap_const_lv2_3) and (stream_in_V_id_V_0_ack_out = ap_const_logic_0) and (stream_in_V_id_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_id_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_id_V_0_vld_in = ap_const_logic_0) and (stream_in_V_id_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_id_V_0_ack_out = ap_const_logic_0) and (stream_in_V_id_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_id_V_0_state = ap_const_lv2_3)) or ((stream_in_V_id_V_0_state = ap_const_lv2_1) and (stream_in_V_id_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_id_V_0_state = ap_const_lv2_2) and (stream_in_V_id_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_id_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_id_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_keep_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_keep_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_keep_V_0_ack_out = ap_const_logic_1) and (stream_in_V_keep_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_keep_V_0_sel_rd <= not(stream_in_V_keep_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_keep_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_keep_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_keep_V_0_ack_in = ap_const_logic_1) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_keep_V_0_sel_wr <= not(stream_in_V_keep_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_keep_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_keep_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_keep_V_0_state = ap_const_lv2_2) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_keep_V_0_state = ap_const_lv2_3) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_0) and (stream_in_V_keep_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_keep_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_keep_V_0_state = ap_const_lv2_1) and (stream_in_V_keep_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_keep_V_0_state = ap_const_lv2_3) and (stream_in_V_keep_V_0_ack_out = ap_const_logic_0) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_keep_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_keep_V_0_vld_in = ap_const_logic_0) and (stream_in_V_keep_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_keep_V_0_ack_out = ap_const_logic_0) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_keep_V_0_state = ap_const_lv2_3)) or ((stream_in_V_keep_V_0_state = ap_const_lv2_1) and (stream_in_V_keep_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_keep_V_0_state = ap_const_lv2_2) and (stream_in_V_keep_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_keep_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_keep_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_last_V_0_ack_out = ap_const_logic_1) and (stream_in_V_last_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_last_V_0_sel_rd <= not(stream_in_V_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_last_V_0_ack_in = ap_const_logic_1) and (stream_in_V_last_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_last_V_0_sel_wr <= not(stream_in_V_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_last_V_0_state = ap_const_lv2_2) and (stream_in_V_last_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_last_V_0_state = ap_const_lv2_3) and (stream_in_V_last_V_0_vld_in = ap_const_logic_0) and (stream_in_V_last_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_last_V_0_state = ap_const_lv2_1) and (stream_in_V_last_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_last_V_0_state = ap_const_lv2_3) and (stream_in_V_last_V_0_ack_out = ap_const_logic_0) and (stream_in_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_last_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_last_V_0_vld_in = ap_const_logic_0) and (stream_in_V_last_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_last_V_0_ack_out = ap_const_logic_0) and (stream_in_V_last_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_last_V_0_state = ap_const_lv2_3)) or ((stream_in_V_last_V_0_state = ap_const_lv2_1) and (stream_in_V_last_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_last_V_0_state = ap_const_lv2_2) and (stream_in_V_last_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_strb_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_strb_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_strb_V_0_ack_out = ap_const_logic_1) and (stream_in_V_strb_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_strb_V_0_sel_rd <= not(stream_in_V_strb_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_strb_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_strb_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_strb_V_0_ack_in = ap_const_logic_1) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_strb_V_0_sel_wr <= not(stream_in_V_strb_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_strb_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_strb_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_strb_V_0_state = ap_const_lv2_2) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_strb_V_0_state = ap_const_lv2_3) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_0) and (stream_in_V_strb_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_strb_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_strb_V_0_state = ap_const_lv2_1) and (stream_in_V_strb_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_strb_V_0_state = ap_const_lv2_3) and (stream_in_V_strb_V_0_ack_out = ap_const_logic_0) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_strb_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_strb_V_0_vld_in = ap_const_logic_0) and (stream_in_V_strb_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_strb_V_0_ack_out = ap_const_logic_0) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_strb_V_0_state = ap_const_lv2_3)) or ((stream_in_V_strb_V_0_state = ap_const_lv2_1) and (stream_in_V_strb_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_strb_V_0_state = ap_const_lv2_2) and (stream_in_V_strb_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_strb_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_strb_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_user_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_user_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((stream_in_V_user_V_0_ack_out = ap_const_logic_1) and (stream_in_V_user_V_0_vld_out = ap_const_logic_1))) then 
                                        stream_in_V_user_V_0_sel_rd <= not(stream_in_V_user_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_user_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_user_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((stream_in_V_user_V_0_ack_in = ap_const_logic_1) and (stream_in_V_user_V_0_vld_in = ap_const_logic_1))) then 
                                        stream_in_V_user_V_0_sel_wr <= not(stream_in_V_user_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_in_V_user_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_in_V_user_V_0_state <= ap_const_lv2_0;
            else
                if ((((stream_in_V_user_V_0_state = ap_const_lv2_2) and (stream_in_V_user_V_0_vld_in = ap_const_logic_0)) or ((stream_in_V_user_V_0_state = ap_const_lv2_3) and (stream_in_V_user_V_0_vld_in = ap_const_logic_0) and (stream_in_V_user_V_0_ack_out = ap_const_logic_1)))) then 
                    stream_in_V_user_V_0_state <= ap_const_lv2_2;
                elsif ((((stream_in_V_user_V_0_state = ap_const_lv2_1) and (stream_in_V_user_V_0_ack_out = ap_const_logic_0)) or ((stream_in_V_user_V_0_state = ap_const_lv2_3) and (stream_in_V_user_V_0_ack_out = ap_const_logic_0) and (stream_in_V_user_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_user_V_0_state <= ap_const_lv2_1;
                elsif (((not(((stream_in_V_user_V_0_vld_in = ap_const_logic_0) and (stream_in_V_user_V_0_ack_out = ap_const_logic_1))) and not(((stream_in_V_user_V_0_ack_out = ap_const_logic_0) and (stream_in_V_user_V_0_vld_in = ap_const_logic_1))) and (stream_in_V_user_V_0_state = ap_const_lv2_3)) or ((stream_in_V_user_V_0_state = ap_const_lv2_1) and (stream_in_V_user_V_0_ack_out = ap_const_logic_1)) or ((stream_in_V_user_V_0_state = ap_const_lv2_2) and (stream_in_V_user_V_0_vld_in = ap_const_logic_1)))) then 
                    stream_in_V_user_V_0_state <= ap_const_lv2_3;
                else 
                    stream_in_V_user_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_data_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_data_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_out_V_data_V_1_ack_out = ap_const_logic_1) and (stream_out_V_data_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_out_V_data_V_1_sel_rd <= not(stream_out_V_data_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_data_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_data_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_out_V_data_V_1_ack_in = ap_const_logic_1) and (stream_out_V_data_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_out_V_data_V_1_sel_wr <= not(stream_out_V_data_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_data_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_data_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_out_V_data_V_1_state = ap_const_lv2_2) and (stream_out_V_data_V_1_vld_in = ap_const_logic_0)) or ((stream_out_V_data_V_1_state = ap_const_lv2_3) and (stream_out_V_data_V_1_vld_in = ap_const_logic_0) and (stream_out_V_data_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_out_V_data_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_out_V_data_V_1_state = ap_const_lv2_1) and (stream_out_V_data_V_1_ack_out = ap_const_logic_0)) or ((stream_out_V_data_V_1_state = ap_const_lv2_3) and (stream_out_V_data_V_1_ack_out = ap_const_logic_0) and (stream_out_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_data_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_out_V_data_V_1_vld_in = ap_const_logic_0) and (stream_out_V_data_V_1_ack_out = ap_const_logic_1))) and not(((stream_out_V_data_V_1_ack_out = ap_const_logic_0) and (stream_out_V_data_V_1_vld_in = ap_const_logic_1))) and (stream_out_V_data_V_1_state = ap_const_lv2_3)) or ((stream_out_V_data_V_1_state = ap_const_lv2_1) and (stream_out_V_data_V_1_ack_out = ap_const_logic_1)) or ((stream_out_V_data_V_1_state = ap_const_lv2_2) and (stream_out_V_data_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_data_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_V_data_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_dest_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_dest_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_out_V_dest_V_1_ack_out = ap_const_logic_1) and (stream_out_V_dest_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_out_V_dest_V_1_sel_rd <= not(stream_out_V_dest_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_dest_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_dest_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_out_V_dest_V_1_ack_in = ap_const_logic_1) and (stream_out_V_dest_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_out_V_dest_V_1_sel_wr <= not(stream_out_V_dest_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_dest_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_dest_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_out_V_dest_V_1_state = ap_const_lv2_2) and (stream_out_V_dest_V_1_vld_in = ap_const_logic_0)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_3) and (stream_out_V_dest_V_1_vld_in = ap_const_logic_0) and (stream_out_V_dest_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_out_V_dest_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_out_V_dest_V_1_state = ap_const_lv2_1) and (stream_out_V_dest_V_1_ack_out = ap_const_logic_0)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_3) and (stream_out_V_dest_V_1_ack_out = ap_const_logic_0) and (stream_out_V_dest_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_dest_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_out_V_dest_V_1_vld_in = ap_const_logic_0) and (stream_out_V_dest_V_1_ack_out = ap_const_logic_1))) and not(((stream_out_V_dest_V_1_ack_out = ap_const_logic_0) and (stream_out_V_dest_V_1_vld_in = ap_const_logic_1))) and (stream_out_V_dest_V_1_state = ap_const_lv2_3)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_1) and (stream_out_V_dest_V_1_ack_out = ap_const_logic_1)) or ((stream_out_V_dest_V_1_state = ap_const_lv2_2) and (stream_out_V_dest_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_dest_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_V_dest_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_id_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_id_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_out_V_id_V_1_ack_out = ap_const_logic_1) and (stream_out_V_id_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_out_V_id_V_1_sel_rd <= not(stream_out_V_id_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_id_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_id_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_out_V_id_V_1_ack_in = ap_const_logic_1) and (stream_out_V_id_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_out_V_id_V_1_sel_wr <= not(stream_out_V_id_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_id_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_id_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_out_V_id_V_1_state = ap_const_lv2_2) and (stream_out_V_id_V_1_vld_in = ap_const_logic_0)) or ((stream_out_V_id_V_1_state = ap_const_lv2_3) and (stream_out_V_id_V_1_vld_in = ap_const_logic_0) and (stream_out_V_id_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_out_V_id_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_out_V_id_V_1_state = ap_const_lv2_1) and (stream_out_V_id_V_1_ack_out = ap_const_logic_0)) or ((stream_out_V_id_V_1_state = ap_const_lv2_3) and (stream_out_V_id_V_1_ack_out = ap_const_logic_0) and (stream_out_V_id_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_id_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_out_V_id_V_1_vld_in = ap_const_logic_0) and (stream_out_V_id_V_1_ack_out = ap_const_logic_1))) and not(((stream_out_V_id_V_1_ack_out = ap_const_logic_0) and (stream_out_V_id_V_1_vld_in = ap_const_logic_1))) and (stream_out_V_id_V_1_state = ap_const_lv2_3)) or ((stream_out_V_id_V_1_state = ap_const_lv2_1) and (stream_out_V_id_V_1_ack_out = ap_const_logic_1)) or ((stream_out_V_id_V_1_state = ap_const_lv2_2) and (stream_out_V_id_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_id_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_V_id_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_keep_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_keep_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_out_V_keep_V_1_ack_out = ap_const_logic_1) and (stream_out_V_keep_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_out_V_keep_V_1_sel_rd <= not(stream_out_V_keep_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_keep_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_keep_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_out_V_keep_V_1_ack_in = ap_const_logic_1) and (stream_out_V_keep_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_out_V_keep_V_1_sel_wr <= not(stream_out_V_keep_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_keep_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_keep_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_out_V_keep_V_1_state = ap_const_lv2_2) and (stream_out_V_keep_V_1_vld_in = ap_const_logic_0)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_3) and (stream_out_V_keep_V_1_vld_in = ap_const_logic_0) and (stream_out_V_keep_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_out_V_keep_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_out_V_keep_V_1_state = ap_const_lv2_1) and (stream_out_V_keep_V_1_ack_out = ap_const_logic_0)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_3) and (stream_out_V_keep_V_1_ack_out = ap_const_logic_0) and (stream_out_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_keep_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_out_V_keep_V_1_vld_in = ap_const_logic_0) and (stream_out_V_keep_V_1_ack_out = ap_const_logic_1))) and not(((stream_out_V_keep_V_1_ack_out = ap_const_logic_0) and (stream_out_V_keep_V_1_vld_in = ap_const_logic_1))) and (stream_out_V_keep_V_1_state = ap_const_lv2_3)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_1) and (stream_out_V_keep_V_1_ack_out = ap_const_logic_1)) or ((stream_out_V_keep_V_1_state = ap_const_lv2_2) and (stream_out_V_keep_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_keep_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_V_keep_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_last_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_last_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_out_V_last_V_1_ack_out = ap_const_logic_1) and (stream_out_V_last_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_out_V_last_V_1_sel_rd <= not(stream_out_V_last_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_last_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_last_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_out_V_last_V_1_ack_in = ap_const_logic_1) and (stream_out_V_last_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_out_V_last_V_1_sel_wr <= not(stream_out_V_last_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_last_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_last_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_out_V_last_V_1_state = ap_const_lv2_2) and (stream_out_V_last_V_1_vld_in = ap_const_logic_0)) or ((stream_out_V_last_V_1_state = ap_const_lv2_3) and (stream_out_V_last_V_1_vld_in = ap_const_logic_0) and (stream_out_V_last_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_out_V_last_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_out_V_last_V_1_state = ap_const_lv2_1) and (stream_out_V_last_V_1_ack_out = ap_const_logic_0)) or ((stream_out_V_last_V_1_state = ap_const_lv2_3) and (stream_out_V_last_V_1_ack_out = ap_const_logic_0) and (stream_out_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_last_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_out_V_last_V_1_vld_in = ap_const_logic_0) and (stream_out_V_last_V_1_ack_out = ap_const_logic_1))) and not(((stream_out_V_last_V_1_ack_out = ap_const_logic_0) and (stream_out_V_last_V_1_vld_in = ap_const_logic_1))) and (stream_out_V_last_V_1_state = ap_const_lv2_3)) or ((stream_out_V_last_V_1_state = ap_const_lv2_1) and (stream_out_V_last_V_1_ack_out = ap_const_logic_1)) or ((stream_out_V_last_V_1_state = ap_const_lv2_2) and (stream_out_V_last_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_last_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_V_last_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_strb_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_strb_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_out_V_strb_V_1_ack_out = ap_const_logic_1) and (stream_out_V_strb_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_out_V_strb_V_1_sel_rd <= not(stream_out_V_strb_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_strb_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_strb_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_out_V_strb_V_1_ack_in = ap_const_logic_1) and (stream_out_V_strb_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_out_V_strb_V_1_sel_wr <= not(stream_out_V_strb_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_strb_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_strb_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_out_V_strb_V_1_state = ap_const_lv2_2) and (stream_out_V_strb_V_1_vld_in = ap_const_logic_0)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_3) and (stream_out_V_strb_V_1_vld_in = ap_const_logic_0) and (stream_out_V_strb_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_out_V_strb_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_out_V_strb_V_1_state = ap_const_lv2_1) and (stream_out_V_strb_V_1_ack_out = ap_const_logic_0)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_3) and (stream_out_V_strb_V_1_ack_out = ap_const_logic_0) and (stream_out_V_strb_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_strb_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_out_V_strb_V_1_vld_in = ap_const_logic_0) and (stream_out_V_strb_V_1_ack_out = ap_const_logic_1))) and not(((stream_out_V_strb_V_1_ack_out = ap_const_logic_0) and (stream_out_V_strb_V_1_vld_in = ap_const_logic_1))) and (stream_out_V_strb_V_1_state = ap_const_lv2_3)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_1) and (stream_out_V_strb_V_1_ack_out = ap_const_logic_1)) or ((stream_out_V_strb_V_1_state = ap_const_lv2_2) and (stream_out_V_strb_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_strb_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_V_strb_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_user_V_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_user_V_1_sel_rd <= ap_const_logic_0;
            else
                if (((stream_out_V_user_V_1_ack_out = ap_const_logic_1) and (stream_out_V_user_V_1_vld_out = ap_const_logic_1))) then 
                                        stream_out_V_user_V_1_sel_rd <= not(stream_out_V_user_V_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_user_V_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_user_V_1_sel_wr <= ap_const_logic_0;
            else
                if (((stream_out_V_user_V_1_ack_in = ap_const_logic_1) and (stream_out_V_user_V_1_vld_in = ap_const_logic_1))) then 
                                        stream_out_V_user_V_1_sel_wr <= not(stream_out_V_user_V_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    stream_out_V_user_V_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                stream_out_V_user_V_1_state <= ap_const_lv2_0;
            else
                if ((((stream_out_V_user_V_1_state = ap_const_lv2_2) and (stream_out_V_user_V_1_vld_in = ap_const_logic_0)) or ((stream_out_V_user_V_1_state = ap_const_lv2_3) and (stream_out_V_user_V_1_vld_in = ap_const_logic_0) and (stream_out_V_user_V_1_ack_out = ap_const_logic_1)))) then 
                    stream_out_V_user_V_1_state <= ap_const_lv2_2;
                elsif ((((stream_out_V_user_V_1_state = ap_const_lv2_1) and (stream_out_V_user_V_1_ack_out = ap_const_logic_0)) or ((stream_out_V_user_V_1_state = ap_const_lv2_3) and (stream_out_V_user_V_1_ack_out = ap_const_logic_0) and (stream_out_V_user_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_user_V_1_state <= ap_const_lv2_1;
                elsif (((not(((stream_out_V_user_V_1_vld_in = ap_const_logic_0) and (stream_out_V_user_V_1_ack_out = ap_const_logic_1))) and not(((stream_out_V_user_V_1_ack_out = ap_const_logic_0) and (stream_out_V_user_V_1_vld_in = ap_const_logic_1))) and (stream_out_V_user_V_1_state = ap_const_lv2_3)) or ((stream_out_V_user_V_1_state = ap_const_lv2_1) and (stream_out_V_user_V_1_ack_out = ap_const_logic_1)) or ((stream_out_V_user_V_1_state = ap_const_lv2_2) and (stream_out_V_user_V_1_vld_in = ap_const_logic_1)))) then 
                    stream_out_V_user_V_1_state <= ap_const_lv2_3;
                else 
                    stream_out_V_user_V_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    j_reg_209_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_fu_220_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                j_reg_209 <= j_1_fu_226_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j_reg_209 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_fu_220_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                data_in_V_0 <= stream_in_V_data_V_0_data_out;
                data_in_V_1 <= data_in_V_0;
                data_in_V_2 <= data_in_V_1;
                data_in_V_3 <= data_in_V_2;
                data_in_V_4 <= data_in_V_3;
                data_in_V_5 <= data_in_V_4;
                data_in_V_6 <= data_in_V_5;
                data_in_V_7 <= data_in_V_6;
                data_in_V_8 <= data_in_V_7;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_reg_452 <= exitcond_fu_220_p2;
                exitcond_reg_452_pp0_iter1_reg <= exitcond_reg_452;
                tmp_dest_V_reg_486_pp0_iter1_reg <= tmp_dest_V_reg_486;
                tmp_id_V_reg_481_pp0_iter1_reg <= tmp_id_V_reg_481;
                tmp_keep_V_reg_461_pp0_iter1_reg <= tmp_keep_V_reg_461;
                tmp_last_V_reg_476_pp0_iter1_reg <= tmp_last_V_reg_476;
                tmp_strb_V_reg_466_pp0_iter1_reg <= tmp_strb_V_reg_466;
                tmp_user_V_reg_471_pp0_iter1_reg <= tmp_user_V_reg_471;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                exitcond_reg_452_pp0_iter2_reg <= exitcond_reg_452_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_fu_220_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_1_1_reg_496 <= p_1_1_fu_280_p2;
                p_1_2_reg_501 <= p_1_2_fu_296_p2;
                p_1_3_reg_506 <= p_1_3_fu_312_p2;
                p_1_4_reg_511 <= p_1_4_fu_328_p2;
                p_1_5_reg_516 <= p_1_5_fu_344_p2;
                p_1_6_reg_521 <= p_1_6_fu_360_p2;
                p_1_7_reg_526 <= p_1_7_fu_376_p2;
                p_1_8_reg_531 <= p_1_8_fu_392_p2;
                p_1_reg_491 <= p_1_fu_264_p2;
                p_2_reg_536 <= p_2_fu_404_p2;
                tmp_dest_V_reg_486 <= stream_in_V_dest_V_0_data_out;
                tmp_id_V_reg_481 <= stream_in_V_id_V_0_data_out;
                tmp_keep_V_reg_461 <= stream_in_V_keep_V_0_data_out;
                tmp_last_V_reg_476 <= stream_in_V_last_V_0_data_out;
                tmp_strb_V_reg_466 <= stream_in_V_strb_V_0_data_out;
                tmp_user_V_reg_471 <= stream_in_V_user_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_data_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_data_V_0_payload_A <= stream_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_data_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_data_V_0_payload_B <= stream_in_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_dest_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_dest_V_0_payload_A <= stream_in_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_dest_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_dest_V_0_payload_B <= stream_in_TDEST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_id_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_id_V_0_payload_A <= stream_in_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_id_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_id_V_0_payload_B <= stream_in_TID;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_keep_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_keep_V_0_payload_A <= stream_in_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_keep_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_keep_V_0_payload_B <= stream_in_TKEEP;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_last_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_last_V_0_payload_A <= stream_in_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_last_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_last_V_0_payload_B <= stream_in_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_strb_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_strb_V_0_payload_A <= stream_in_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_strb_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_strb_V_0_payload_B <= stream_in_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_user_V_0_load_A = ap_const_logic_1)) then
                stream_in_V_user_V_0_payload_A <= stream_in_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_in_V_user_V_0_load_B = ap_const_logic_1)) then
                stream_in_V_user_V_0_payload_B <= stream_in_TUSER;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_data_V_1_load_A = ap_const_logic_1)) then
                stream_out_V_data_V_1_payload_A <= acc_V_fu_446_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_data_V_1_load_B = ap_const_logic_1)) then
                stream_out_V_data_V_1_payload_B <= acc_V_fu_446_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_dest_V_1_load_A = ap_const_logic_1)) then
                stream_out_V_dest_V_1_payload_A <= tmp_dest_V_reg_486_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_dest_V_1_load_B = ap_const_logic_1)) then
                stream_out_V_dest_V_1_payload_B <= tmp_dest_V_reg_486_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_id_V_1_load_A = ap_const_logic_1)) then
                stream_out_V_id_V_1_payload_A <= tmp_id_V_reg_481_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_id_V_1_load_B = ap_const_logic_1)) then
                stream_out_V_id_V_1_payload_B <= tmp_id_V_reg_481_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_keep_V_1_load_A = ap_const_logic_1)) then
                stream_out_V_keep_V_1_payload_A <= tmp_keep_V_reg_461_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_keep_V_1_load_B = ap_const_logic_1)) then
                stream_out_V_keep_V_1_payload_B <= tmp_keep_V_reg_461_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_last_V_1_load_A = ap_const_logic_1)) then
                stream_out_V_last_V_1_payload_A <= tmp_last_V_reg_476_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_last_V_1_load_B = ap_const_logic_1)) then
                stream_out_V_last_V_1_payload_B <= tmp_last_V_reg_476_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_strb_V_1_load_A = ap_const_logic_1)) then
                stream_out_V_strb_V_1_payload_A <= tmp_strb_V_reg_466_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_strb_V_1_load_B = ap_const_logic_1)) then
                stream_out_V_strb_V_1_payload_B <= tmp_strb_V_reg_466_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_user_V_1_load_A = ap_const_logic_1)) then
                stream_out_V_user_V_1_payload_A <= tmp_user_V_reg_471_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((stream_out_V_user_V_1_load_B = ap_const_logic_1)) then
                stream_out_V_user_V_1_payload_B <= tmp_user_V_reg_471_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp2_reg_541 <= tmp2_fu_410_p2;
                tmp3_reg_546 <= tmp3_fu_418_p2;
                tmp5_reg_551 <= tmp5_fu_436_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, stream_out_V_data_V_1_ack_in, stream_out_V_keep_V_1_ack_in, stream_out_V_strb_V_1_ack_in, stream_out_V_user_V_1_ack_in, stream_out_V_last_V_1_ack_in, stream_out_V_id_V_1_ack_in, stream_out_V_dest_V_1_ack_in, ap_enable_reg_pp0_iter0, exitcond_fu_220_p2, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_CS_fsm_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_fu_220_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond_fu_220_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((stream_out_V_dest_V_1_ack_in = ap_const_logic_0) or (stream_out_V_id_V_1_ack_in = ap_const_logic_0) or (stream_out_V_last_V_1_ack_in = ap_const_logic_0) or (stream_out_V_user_V_1_ack_in = ap_const_logic_0) or (stream_out_V_strb_V_1_ack_in = ap_const_logic_0) or (stream_out_V_keep_V_1_ack_in = ap_const_logic_0) or (stream_out_V_data_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    acc_V_fu_446_p2 <= std_logic_vector(unsigned(tmp5_reg_551) + unsigned(tmp1_fu_442_p2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state6 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(stream_in_V_data_V_0_vld_out, ap_enable_reg_pp0_iter0, exitcond_fu_220_p2)
    begin
                ap_block_pp0_stage0_01001 <= ((exitcond_fu_220_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(stream_in_V_data_V_0_vld_out, ap_enable_reg_pp0_iter0, exitcond_fu_220_p2, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state4_io, ap_block_state5_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state5_io) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state4_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((exitcond_fu_220_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(stream_in_V_data_V_0_vld_out, ap_enable_reg_pp0_iter0, exitcond_fu_220_p2, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_block_state4_io, ap_block_state5_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state5_io) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state4_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((exitcond_fu_220_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(stream_in_V_data_V_0_vld_out, exitcond_fu_220_p2)
    begin
                ap_block_state2_pp0_stage0_iter0 <= ((exitcond_fu_220_p2 = ap_const_lv1_0) and (stream_in_V_data_V_0_vld_out = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(stream_out_V_data_V_1_ack_in, exitcond_reg_452_pp0_iter1_reg)
    begin
                ap_block_state4_io <= ((exitcond_reg_452_pp0_iter1_reg = ap_const_lv1_0) and (stream_out_V_data_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_io_assign_proc : process(stream_out_V_data_V_1_ack_in, exitcond_reg_452_pp0_iter2_reg)
    begin
                ap_block_state5_io <= ((exitcond_reg_452_pp0_iter2_reg = ap_const_lv1_0) and (stream_out_V_data_V_1_ack_in = ap_const_logic_0));
    end process;

        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_assign_proc : process(stream_out_V_data_V_1_ack_in, stream_out_V_keep_V_1_ack_in, stream_out_V_strb_V_1_ack_in, stream_out_V_user_V_1_ack_in, stream_out_V_last_V_1_ack_in, stream_out_V_id_V_1_ack_in, stream_out_V_dest_V_1_ack_in)
    begin
                ap_block_state6 <= ((stream_out_V_dest_V_1_ack_in = ap_const_logic_0) or (stream_out_V_id_V_1_ack_in = ap_const_logic_0) or (stream_out_V_last_V_1_ack_in = ap_const_logic_0) or (stream_out_V_user_V_1_ack_in = ap_const_logic_0) or (stream_out_V_strb_V_1_ack_in = ap_const_logic_0) or (stream_out_V_keep_V_1_ack_in = ap_const_logic_0) or (stream_out_V_data_V_1_ack_in = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond_fu_220_p2)
    begin
        if ((exitcond_fu_220_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, stream_out_V_data_V_1_ack_in, stream_out_V_keep_V_1_ack_in, stream_out_V_strb_V_1_ack_in, stream_out_V_user_V_1_ack_in, stream_out_V_last_V_1_ack_in, stream_out_V_id_V_1_ack_in, stream_out_V_dest_V_1_ack_in, ap_CS_fsm_state6)
    begin
        if ((not(((stream_out_V_dest_V_1_ack_in = ap_const_logic_0) or (stream_out_V_id_V_1_ack_in = ap_const_logic_0) or (stream_out_V_last_V_1_ack_in = ap_const_logic_0) or (stream_out_V_user_V_1_ack_in = ap_const_logic_0) or (stream_out_V_strb_V_1_ack_in = ap_const_logic_0) or (stream_out_V_keep_V_1_ack_in = ap_const_logic_0) or (stream_out_V_data_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(stream_out_V_data_V_1_ack_in, stream_out_V_keep_V_1_ack_in, stream_out_V_strb_V_1_ack_in, stream_out_V_user_V_1_ack_in, stream_out_V_last_V_1_ack_in, stream_out_V_id_V_1_ack_in, stream_out_V_dest_V_1_ack_in, ap_CS_fsm_state6)
    begin
        if ((not(((stream_out_V_dest_V_1_ack_in = ap_const_logic_0) or (stream_out_V_id_V_1_ack_in = ap_const_logic_0) or (stream_out_V_last_V_1_ack_in = ap_const_logic_0) or (stream_out_V_user_V_1_ack_in = ap_const_logic_0) or (stream_out_V_strb_V_1_ack_in = ap_const_logic_0) or (stream_out_V_keep_V_1_ack_in = ap_const_logic_0) or (stream_out_V_data_V_1_ack_in = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_fu_220_p2 <= "1" when (j_reg_209 = ap_const_lv10_258) else "0";
    j_1_fu_226_p2 <= std_logic_vector(unsigned(j_reg_209) + unsigned(ap_const_lv10_1));
    p_1_1_fu_280_p0 <= data_in_V_7;
    p_1_1_fu_280_p1 <= coeff_8_V;
    p_1_1_fu_280_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_1_1_fu_280_p0) * signed(p_1_1_fu_280_p1))), 32));
    p_1_2_fu_296_p0 <= data_in_V_6;
    p_1_2_fu_296_p1 <= coeff_7_V;
    p_1_2_fu_296_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_1_2_fu_296_p0) * signed(p_1_2_fu_296_p1))), 32));
    p_1_3_fu_312_p0 <= data_in_V_5;
    p_1_3_fu_312_p1 <= coeff_6_V;
    p_1_3_fu_312_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_1_3_fu_312_p0) * signed(p_1_3_fu_312_p1))), 32));
    p_1_4_fu_328_p0 <= data_in_V_4;
    p_1_4_fu_328_p1 <= coeff_5_V;
    p_1_4_fu_328_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_1_4_fu_328_p0) * signed(p_1_4_fu_328_p1))), 32));
    p_1_5_fu_344_p0 <= data_in_V_3;
    p_1_5_fu_344_p1 <= coeff_4_V;
    p_1_5_fu_344_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_1_5_fu_344_p0) * signed(p_1_5_fu_344_p1))), 32));
    p_1_6_fu_360_p0 <= data_in_V_2;
    p_1_6_fu_360_p1 <= coeff_3_V;
    p_1_6_fu_360_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_1_6_fu_360_p0) * signed(p_1_6_fu_360_p1))), 32));
    p_1_7_fu_376_p0 <= data_in_V_1;
    p_1_7_fu_376_p1 <= coeff_2_V;
    p_1_7_fu_376_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_1_7_fu_376_p0) * signed(p_1_7_fu_376_p1))), 32));
    p_1_8_fu_392_p0 <= data_in_V_0;
    p_1_8_fu_392_p1 <= coeff_1_V;
    p_1_8_fu_392_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_1_8_fu_392_p0) * signed(p_1_8_fu_392_p1))), 32));
    p_1_fu_264_p0 <= data_in_V_8;
    p_1_fu_264_p1 <= coeff_9_V;
    p_1_fu_264_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_1_fu_264_p0) * signed(p_1_fu_264_p1))), 32));
    p_2_fu_404_p0 <= coeff_0_V;
    p_2_fu_404_p1 <= stream_in_V_data_V_0_data_out;
    p_2_fu_404_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_2_fu_404_p0) * signed(p_2_fu_404_p1))), 32));

    stream_in_TDATA_blk_n_assign_proc : process(stream_in_V_data_V_0_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, exitcond_fu_220_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_fu_220_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_TDATA_blk_n <= stream_in_V_data_V_0_state(0);
        else 
            stream_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_in_TREADY <= stream_in_V_dest_V_0_state(1);
    stream_in_V_data_V_0_ack_in <= stream_in_V_data_V_0_state(1);

    stream_in_V_data_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, exitcond_fu_220_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_fu_220_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_data_V_0_data_out_assign_proc : process(stream_in_V_data_V_0_payload_A, stream_in_V_data_V_0_payload_B, stream_in_V_data_V_0_sel)
    begin
        if ((stream_in_V_data_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_data_V_0_data_out <= stream_in_V_data_V_0_payload_B;
        else 
            stream_in_V_data_V_0_data_out <= stream_in_V_data_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_data_V_0_load_A <= (stream_in_V_data_V_0_state_cmp_full and not(stream_in_V_data_V_0_sel_wr));
    stream_in_V_data_V_0_load_B <= (stream_in_V_data_V_0_state_cmp_full and stream_in_V_data_V_0_sel_wr);
    stream_in_V_data_V_0_sel <= stream_in_V_data_V_0_sel_rd;
    stream_in_V_data_V_0_state_cmp_full <= '0' when (stream_in_V_data_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_data_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_data_V_0_vld_out <= stream_in_V_data_V_0_state(0);
    stream_in_V_dest_V_0_ack_in <= stream_in_V_dest_V_0_state(1);

    stream_in_V_dest_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, exitcond_fu_220_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_fu_220_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_V_dest_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_dest_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_dest_V_0_data_out_assign_proc : process(stream_in_V_dest_V_0_payload_A, stream_in_V_dest_V_0_payload_B, stream_in_V_dest_V_0_sel)
    begin
        if ((stream_in_V_dest_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_dest_V_0_data_out <= stream_in_V_dest_V_0_payload_B;
        else 
            stream_in_V_dest_V_0_data_out <= stream_in_V_dest_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_dest_V_0_load_A <= (stream_in_V_dest_V_0_state_cmp_full and not(stream_in_V_dest_V_0_sel_wr));
    stream_in_V_dest_V_0_load_B <= (stream_in_V_dest_V_0_state_cmp_full and stream_in_V_dest_V_0_sel_wr);
    stream_in_V_dest_V_0_sel <= stream_in_V_dest_V_0_sel_rd;
    stream_in_V_dest_V_0_state_cmp_full <= '0' when (stream_in_V_dest_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_dest_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_dest_V_0_vld_out <= stream_in_V_dest_V_0_state(0);
    stream_in_V_id_V_0_ack_in <= stream_in_V_id_V_0_state(1);

    stream_in_V_id_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, exitcond_fu_220_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_fu_220_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_V_id_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_id_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_id_V_0_data_out_assign_proc : process(stream_in_V_id_V_0_payload_A, stream_in_V_id_V_0_payload_B, stream_in_V_id_V_0_sel)
    begin
        if ((stream_in_V_id_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_id_V_0_data_out <= stream_in_V_id_V_0_payload_B;
        else 
            stream_in_V_id_V_0_data_out <= stream_in_V_id_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_id_V_0_load_A <= (stream_in_V_id_V_0_state_cmp_full and not(stream_in_V_id_V_0_sel_wr));
    stream_in_V_id_V_0_load_B <= (stream_in_V_id_V_0_state_cmp_full and stream_in_V_id_V_0_sel_wr);
    stream_in_V_id_V_0_sel <= stream_in_V_id_V_0_sel_rd;
    stream_in_V_id_V_0_state_cmp_full <= '0' when (stream_in_V_id_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_id_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_id_V_0_vld_out <= stream_in_V_id_V_0_state(0);
    stream_in_V_keep_V_0_ack_in <= stream_in_V_keep_V_0_state(1);

    stream_in_V_keep_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, exitcond_fu_220_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_fu_220_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_V_keep_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_keep_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_keep_V_0_data_out_assign_proc : process(stream_in_V_keep_V_0_payload_A, stream_in_V_keep_V_0_payload_B, stream_in_V_keep_V_0_sel)
    begin
        if ((stream_in_V_keep_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_keep_V_0_data_out <= stream_in_V_keep_V_0_payload_B;
        else 
            stream_in_V_keep_V_0_data_out <= stream_in_V_keep_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_keep_V_0_load_A <= (stream_in_V_keep_V_0_state_cmp_full and not(stream_in_V_keep_V_0_sel_wr));
    stream_in_V_keep_V_0_load_B <= (stream_in_V_keep_V_0_state_cmp_full and stream_in_V_keep_V_0_sel_wr);
    stream_in_V_keep_V_0_sel <= stream_in_V_keep_V_0_sel_rd;
    stream_in_V_keep_V_0_state_cmp_full <= '0' when (stream_in_V_keep_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_keep_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_keep_V_0_vld_out <= stream_in_V_keep_V_0_state(0);
    stream_in_V_last_V_0_ack_in <= stream_in_V_last_V_0_state(1);

    stream_in_V_last_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, exitcond_fu_220_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_fu_220_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_last_V_0_data_out_assign_proc : process(stream_in_V_last_V_0_payload_A, stream_in_V_last_V_0_payload_B, stream_in_V_last_V_0_sel)
    begin
        if ((stream_in_V_last_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_last_V_0_data_out <= stream_in_V_last_V_0_payload_B;
        else 
            stream_in_V_last_V_0_data_out <= stream_in_V_last_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_last_V_0_load_A <= (stream_in_V_last_V_0_state_cmp_full and not(stream_in_V_last_V_0_sel_wr));
    stream_in_V_last_V_0_load_B <= (stream_in_V_last_V_0_state_cmp_full and stream_in_V_last_V_0_sel_wr);
    stream_in_V_last_V_0_sel <= stream_in_V_last_V_0_sel_rd;
    stream_in_V_last_V_0_state_cmp_full <= '0' when (stream_in_V_last_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_last_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_last_V_0_vld_out <= stream_in_V_last_V_0_state(0);
    stream_in_V_strb_V_0_ack_in <= stream_in_V_strb_V_0_state(1);

    stream_in_V_strb_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, exitcond_fu_220_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_fu_220_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_V_strb_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_strb_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_strb_V_0_data_out_assign_proc : process(stream_in_V_strb_V_0_payload_A, stream_in_V_strb_V_0_payload_B, stream_in_V_strb_V_0_sel)
    begin
        if ((stream_in_V_strb_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_strb_V_0_data_out <= stream_in_V_strb_V_0_payload_B;
        else 
            stream_in_V_strb_V_0_data_out <= stream_in_V_strb_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_strb_V_0_load_A <= (stream_in_V_strb_V_0_state_cmp_full and not(stream_in_V_strb_V_0_sel_wr));
    stream_in_V_strb_V_0_load_B <= (stream_in_V_strb_V_0_state_cmp_full and stream_in_V_strb_V_0_sel_wr);
    stream_in_V_strb_V_0_sel <= stream_in_V_strb_V_0_sel_rd;
    stream_in_V_strb_V_0_state_cmp_full <= '0' when (stream_in_V_strb_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_strb_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_strb_V_0_vld_out <= stream_in_V_strb_V_0_state(0);
    stream_in_V_user_V_0_ack_in <= stream_in_V_user_V_0_state(1);

    stream_in_V_user_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, exitcond_fu_220_p2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_fu_220_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_V_user_V_0_ack_out <= ap_const_logic_1;
        else 
            stream_in_V_user_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_user_V_0_data_out_assign_proc : process(stream_in_V_user_V_0_payload_A, stream_in_V_user_V_0_payload_B, stream_in_V_user_V_0_sel)
    begin
        if ((stream_in_V_user_V_0_sel = ap_const_logic_1)) then 
            stream_in_V_user_V_0_data_out <= stream_in_V_user_V_0_payload_B;
        else 
            stream_in_V_user_V_0_data_out <= stream_in_V_user_V_0_payload_A;
        end if; 
    end process;

    stream_in_V_user_V_0_load_A <= (stream_in_V_user_V_0_state_cmp_full and not(stream_in_V_user_V_0_sel_wr));
    stream_in_V_user_V_0_load_B <= (stream_in_V_user_V_0_state_cmp_full and stream_in_V_user_V_0_sel_wr);
    stream_in_V_user_V_0_sel <= stream_in_V_user_V_0_sel_rd;
    stream_in_V_user_V_0_state_cmp_full <= '0' when (stream_in_V_user_V_0_state = ap_const_lv2_1) else '1';
    stream_in_V_user_V_0_vld_in <= stream_in_TVALID;
    stream_in_V_user_V_0_vld_out <= stream_in_V_user_V_0_state(0);
    stream_out_TDATA <= stream_out_V_data_V_1_data_out;

    stream_out_TDATA_blk_n_assign_proc : process(stream_out_V_data_V_1_state, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_reg_452_pp0_iter1_reg, ap_enable_reg_pp0_iter3, exitcond_reg_452_pp0_iter2_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_reg_452_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_reg_452_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            stream_out_TDATA_blk_n <= stream_out_V_data_V_1_state(1);
        else 
            stream_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    stream_out_TDEST <= stream_out_V_dest_V_1_data_out;
    stream_out_TID <= stream_out_V_id_V_1_data_out;
    stream_out_TKEEP <= stream_out_V_keep_V_1_data_out;
    stream_out_TLAST <= stream_out_V_last_V_1_data_out;
    stream_out_TSTRB <= stream_out_V_strb_V_1_data_out;
    stream_out_TUSER <= stream_out_V_user_V_1_data_out;
    stream_out_TVALID <= stream_out_V_dest_V_1_state(0);
    stream_out_V_data_V_1_ack_in <= stream_out_V_data_V_1_state(1);
    stream_out_V_data_V_1_ack_out <= stream_out_TREADY;

    stream_out_V_data_V_1_data_out_assign_proc : process(stream_out_V_data_V_1_payload_A, stream_out_V_data_V_1_payload_B, stream_out_V_data_V_1_sel)
    begin
        if ((stream_out_V_data_V_1_sel = ap_const_logic_1)) then 
            stream_out_V_data_V_1_data_out <= stream_out_V_data_V_1_payload_B;
        else 
            stream_out_V_data_V_1_data_out <= stream_out_V_data_V_1_payload_A;
        end if; 
    end process;

    stream_out_V_data_V_1_load_A <= (stream_out_V_data_V_1_state_cmp_full and not(stream_out_V_data_V_1_sel_wr));
    stream_out_V_data_V_1_load_B <= (stream_out_V_data_V_1_state_cmp_full and stream_out_V_data_V_1_sel_wr);
    stream_out_V_data_V_1_sel <= stream_out_V_data_V_1_sel_rd;
    stream_out_V_data_V_1_state_cmp_full <= '0' when (stream_out_V_data_V_1_state = ap_const_lv2_1) else '1';

    stream_out_V_data_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_reg_452_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_reg_452_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            stream_out_V_data_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_V_data_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_V_data_V_1_vld_out <= stream_out_V_data_V_1_state(0);
    stream_out_V_dest_V_1_ack_in <= stream_out_V_dest_V_1_state(1);
    stream_out_V_dest_V_1_ack_out <= stream_out_TREADY;

    stream_out_V_dest_V_1_data_out_assign_proc : process(stream_out_V_dest_V_1_payload_A, stream_out_V_dest_V_1_payload_B, stream_out_V_dest_V_1_sel)
    begin
        if ((stream_out_V_dest_V_1_sel = ap_const_logic_1)) then 
            stream_out_V_dest_V_1_data_out <= stream_out_V_dest_V_1_payload_B;
        else 
            stream_out_V_dest_V_1_data_out <= stream_out_V_dest_V_1_payload_A;
        end if; 
    end process;

    stream_out_V_dest_V_1_load_A <= (stream_out_V_dest_V_1_state_cmp_full and not(stream_out_V_dest_V_1_sel_wr));
    stream_out_V_dest_V_1_load_B <= (stream_out_V_dest_V_1_state_cmp_full and stream_out_V_dest_V_1_sel_wr);
    stream_out_V_dest_V_1_sel <= stream_out_V_dest_V_1_sel_rd;
    stream_out_V_dest_V_1_state_cmp_full <= '0' when (stream_out_V_dest_V_1_state = ap_const_lv2_1) else '1';

    stream_out_V_dest_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_reg_452_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_reg_452_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            stream_out_V_dest_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_V_dest_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_V_dest_V_1_vld_out <= stream_out_V_dest_V_1_state(0);
    stream_out_V_id_V_1_ack_in <= stream_out_V_id_V_1_state(1);
    stream_out_V_id_V_1_ack_out <= stream_out_TREADY;

    stream_out_V_id_V_1_data_out_assign_proc : process(stream_out_V_id_V_1_payload_A, stream_out_V_id_V_1_payload_B, stream_out_V_id_V_1_sel)
    begin
        if ((stream_out_V_id_V_1_sel = ap_const_logic_1)) then 
            stream_out_V_id_V_1_data_out <= stream_out_V_id_V_1_payload_B;
        else 
            stream_out_V_id_V_1_data_out <= stream_out_V_id_V_1_payload_A;
        end if; 
    end process;

    stream_out_V_id_V_1_load_A <= (stream_out_V_id_V_1_state_cmp_full and not(stream_out_V_id_V_1_sel_wr));
    stream_out_V_id_V_1_load_B <= (stream_out_V_id_V_1_state_cmp_full and stream_out_V_id_V_1_sel_wr);
    stream_out_V_id_V_1_sel <= stream_out_V_id_V_1_sel_rd;
    stream_out_V_id_V_1_state_cmp_full <= '0' when (stream_out_V_id_V_1_state = ap_const_lv2_1) else '1';

    stream_out_V_id_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_reg_452_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_reg_452_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            stream_out_V_id_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_V_id_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_V_id_V_1_vld_out <= stream_out_V_id_V_1_state(0);
    stream_out_V_keep_V_1_ack_in <= stream_out_V_keep_V_1_state(1);
    stream_out_V_keep_V_1_ack_out <= stream_out_TREADY;

    stream_out_V_keep_V_1_data_out_assign_proc : process(stream_out_V_keep_V_1_payload_A, stream_out_V_keep_V_1_payload_B, stream_out_V_keep_V_1_sel)
    begin
        if ((stream_out_V_keep_V_1_sel = ap_const_logic_1)) then 
            stream_out_V_keep_V_1_data_out <= stream_out_V_keep_V_1_payload_B;
        else 
            stream_out_V_keep_V_1_data_out <= stream_out_V_keep_V_1_payload_A;
        end if; 
    end process;

    stream_out_V_keep_V_1_load_A <= (stream_out_V_keep_V_1_state_cmp_full and not(stream_out_V_keep_V_1_sel_wr));
    stream_out_V_keep_V_1_load_B <= (stream_out_V_keep_V_1_state_cmp_full and stream_out_V_keep_V_1_sel_wr);
    stream_out_V_keep_V_1_sel <= stream_out_V_keep_V_1_sel_rd;
    stream_out_V_keep_V_1_state_cmp_full <= '0' when (stream_out_V_keep_V_1_state = ap_const_lv2_1) else '1';

    stream_out_V_keep_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_reg_452_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_reg_452_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            stream_out_V_keep_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_V_keep_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_V_keep_V_1_vld_out <= stream_out_V_keep_V_1_state(0);
    stream_out_V_last_V_1_ack_in <= stream_out_V_last_V_1_state(1);
    stream_out_V_last_V_1_ack_out <= stream_out_TREADY;

    stream_out_V_last_V_1_data_out_assign_proc : process(stream_out_V_last_V_1_payload_A, stream_out_V_last_V_1_payload_B, stream_out_V_last_V_1_sel)
    begin
        if ((stream_out_V_last_V_1_sel = ap_const_logic_1)) then 
            stream_out_V_last_V_1_data_out <= stream_out_V_last_V_1_payload_B;
        else 
            stream_out_V_last_V_1_data_out <= stream_out_V_last_V_1_payload_A;
        end if; 
    end process;

    stream_out_V_last_V_1_load_A <= (stream_out_V_last_V_1_state_cmp_full and not(stream_out_V_last_V_1_sel_wr));
    stream_out_V_last_V_1_load_B <= (stream_out_V_last_V_1_state_cmp_full and stream_out_V_last_V_1_sel_wr);
    stream_out_V_last_V_1_sel <= stream_out_V_last_V_1_sel_rd;
    stream_out_V_last_V_1_state_cmp_full <= '0' when (stream_out_V_last_V_1_state = ap_const_lv2_1) else '1';

    stream_out_V_last_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_reg_452_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_reg_452_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            stream_out_V_last_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_V_last_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_V_last_V_1_vld_out <= stream_out_V_last_V_1_state(0);
    stream_out_V_strb_V_1_ack_in <= stream_out_V_strb_V_1_state(1);
    stream_out_V_strb_V_1_ack_out <= stream_out_TREADY;

    stream_out_V_strb_V_1_data_out_assign_proc : process(stream_out_V_strb_V_1_payload_A, stream_out_V_strb_V_1_payload_B, stream_out_V_strb_V_1_sel)
    begin
        if ((stream_out_V_strb_V_1_sel = ap_const_logic_1)) then 
            stream_out_V_strb_V_1_data_out <= stream_out_V_strb_V_1_payload_B;
        else 
            stream_out_V_strb_V_1_data_out <= stream_out_V_strb_V_1_payload_A;
        end if; 
    end process;

    stream_out_V_strb_V_1_load_A <= (stream_out_V_strb_V_1_state_cmp_full and not(stream_out_V_strb_V_1_sel_wr));
    stream_out_V_strb_V_1_load_B <= (stream_out_V_strb_V_1_state_cmp_full and stream_out_V_strb_V_1_sel_wr);
    stream_out_V_strb_V_1_sel <= stream_out_V_strb_V_1_sel_rd;
    stream_out_V_strb_V_1_state_cmp_full <= '0' when (stream_out_V_strb_V_1_state = ap_const_lv2_1) else '1';

    stream_out_V_strb_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_reg_452_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_reg_452_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            stream_out_V_strb_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_V_strb_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_V_strb_V_1_vld_out <= stream_out_V_strb_V_1_state(0);
    stream_out_V_user_V_1_ack_in <= stream_out_V_user_V_1_state(1);
    stream_out_V_user_V_1_ack_out <= stream_out_TREADY;

    stream_out_V_user_V_1_data_out_assign_proc : process(stream_out_V_user_V_1_payload_A, stream_out_V_user_V_1_payload_B, stream_out_V_user_V_1_sel)
    begin
        if ((stream_out_V_user_V_1_sel = ap_const_logic_1)) then 
            stream_out_V_user_V_1_data_out <= stream_out_V_user_V_1_payload_B;
        else 
            stream_out_V_user_V_1_data_out <= stream_out_V_user_V_1_payload_A;
        end if; 
    end process;

    stream_out_V_user_V_1_load_A <= (stream_out_V_user_V_1_state_cmp_full and not(stream_out_V_user_V_1_sel_wr));
    stream_out_V_user_V_1_load_B <= (stream_out_V_user_V_1_state_cmp_full and stream_out_V_user_V_1_sel_wr);
    stream_out_V_user_V_1_sel <= stream_out_V_user_V_1_sel_rd;
    stream_out_V_user_V_1_state_cmp_full <= '0' when (stream_out_V_user_V_1_state = ap_const_lv2_1) else '1';

    stream_out_V_user_V_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_reg_452_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond_reg_452_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            stream_out_V_user_V_1_vld_in <= ap_const_logic_1;
        else 
            stream_out_V_user_V_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    stream_out_V_user_V_1_vld_out <= stream_out_V_user_V_1_state(0);
    tmp1_fu_442_p2 <= std_logic_vector(unsigned(tmp3_reg_546) + unsigned(tmp2_reg_541));
    tmp2_fu_410_p2 <= std_logic_vector(unsigned(p_1_reg_491) + unsigned(p_1_1_reg_496));
    tmp3_fu_418_p2 <= std_logic_vector(unsigned(tmp4_fu_414_p2) + unsigned(p_1_2_reg_501));
    tmp4_fu_414_p2 <= std_logic_vector(unsigned(p_1_3_reg_506) + unsigned(p_1_4_reg_511));
    tmp5_fu_436_p2 <= std_logic_vector(unsigned(tmp7_fu_431_p2) + unsigned(tmp6_fu_423_p2));
    tmp6_fu_423_p2 <= std_logic_vector(unsigned(p_1_5_reg_516) + unsigned(p_1_6_reg_521));
    tmp7_fu_431_p2 <= std_logic_vector(unsigned(tmp8_fu_427_p2) + unsigned(p_1_7_reg_526));
    tmp8_fu_427_p2 <= std_logic_vector(unsigned(p_1_8_reg_531) + unsigned(p_2_reg_536));
end behav;
