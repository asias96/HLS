// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fir,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z010clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.742000,HLS_SYN_LAT=604,HLS_SYN_TPT=605,HLS_SYN_MEM=0,HLS_SYN_DSP=30,HLS_SYN_FF=1881,HLS_SYN_LUT=2023,HLS_VERSION=2018_3}" *)

module fir (
        s_axi_bundle_AWVALID,
        s_axi_bundle_AWREADY,
        s_axi_bundle_AWADDR,
        s_axi_bundle_WVALID,
        s_axi_bundle_WREADY,
        s_axi_bundle_WDATA,
        s_axi_bundle_WSTRB,
        s_axi_bundle_ARVALID,
        s_axi_bundle_ARREADY,
        s_axi_bundle_ARADDR,
        s_axi_bundle_RVALID,
        s_axi_bundle_RREADY,
        s_axi_bundle_RDATA,
        s_axi_bundle_RRESP,
        s_axi_bundle_BVALID,
        s_axi_bundle_BREADY,
        s_axi_bundle_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        stream_in_TDATA,
        stream_in_TKEEP,
        stream_in_TSTRB,
        stream_in_TUSER,
        stream_in_TLAST,
        stream_in_TID,
        stream_in_TDEST,
        stream_out_TDATA,
        stream_out_TKEEP,
        stream_out_TSTRB,
        stream_out_TUSER,
        stream_out_TLAST,
        stream_out_TID,
        stream_out_TDEST,
        stream_in_TVALID,
        stream_in_TREADY,
        stream_out_TVALID,
        stream_out_TREADY
);

parameter    C_S_AXI_BUNDLE_DATA_WIDTH = 32;
parameter    C_S_AXI_BUNDLE_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;

parameter C_S_AXI_BUNDLE_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_bundle_AWVALID;
output   s_axi_bundle_AWREADY;
input  [C_S_AXI_BUNDLE_ADDR_WIDTH - 1:0] s_axi_bundle_AWADDR;
input   s_axi_bundle_WVALID;
output   s_axi_bundle_WREADY;
input  [C_S_AXI_BUNDLE_DATA_WIDTH - 1:0] s_axi_bundle_WDATA;
input  [C_S_AXI_BUNDLE_WSTRB_WIDTH - 1:0] s_axi_bundle_WSTRB;
input   s_axi_bundle_ARVALID;
output   s_axi_bundle_ARREADY;
input  [C_S_AXI_BUNDLE_ADDR_WIDTH - 1:0] s_axi_bundle_ARADDR;
output   s_axi_bundle_RVALID;
input   s_axi_bundle_RREADY;
output  [C_S_AXI_BUNDLE_DATA_WIDTH - 1:0] s_axi_bundle_RDATA;
output  [1:0] s_axi_bundle_RRESP;
output   s_axi_bundle_BVALID;
input   s_axi_bundle_BREADY;
output  [1:0] s_axi_bundle_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [31:0] stream_in_TDATA;
input  [3:0] stream_in_TKEEP;
input  [3:0] stream_in_TSTRB;
input  [1:0] stream_in_TUSER;
input  [0:0] stream_in_TLAST;
input  [4:0] stream_in_TID;
input  [5:0] stream_in_TDEST;
output  [31:0] stream_out_TDATA;
output  [3:0] stream_out_TKEEP;
output  [3:0] stream_out_TSTRB;
output  [1:0] stream_out_TUSER;
output  [0:0] stream_out_TLAST;
output  [4:0] stream_out_TID;
output  [5:0] stream_out_TDEST;
input   stream_in_TVALID;
output   stream_in_TREADY;
output   stream_out_TVALID;
input   stream_out_TREADY;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [31:0] coeff_0_V;
wire   [31:0] coeff_1_V;
wire   [31:0] coeff_2_V;
wire   [31:0] coeff_3_V;
wire   [31:0] coeff_4_V;
wire   [31:0] coeff_5_V;
wire   [31:0] coeff_6_V;
wire   [31:0] coeff_7_V;
wire   [31:0] coeff_8_V;
wire   [31:0] coeff_9_V;
wire    Loop_STREAM_LOOP_pro_U0_ap_start;
wire    Loop_STREAM_LOOP_pro_U0_ap_done;
wire    Loop_STREAM_LOOP_pro_U0_ap_continue;
wire    Loop_STREAM_LOOP_pro_U0_ap_idle;
wire    Loop_STREAM_LOOP_pro_U0_ap_ready;
wire    Loop_STREAM_LOOP_pro_U0_stream_in_TREADY;
wire   [31:0] Loop_STREAM_LOOP_pro_U0_stream_out_TDATA;
wire    Loop_STREAM_LOOP_pro_U0_stream_out_TVALID;
wire   [3:0] Loop_STREAM_LOOP_pro_U0_stream_out_TKEEP;
wire   [3:0] Loop_STREAM_LOOP_pro_U0_stream_out_TSTRB;
wire   [1:0] Loop_STREAM_LOOP_pro_U0_stream_out_TUSER;
wire   [0:0] Loop_STREAM_LOOP_pro_U0_stream_out_TLAST;
wire   [4:0] Loop_STREAM_LOOP_pro_U0_stream_out_TID;
wire   [5:0] Loop_STREAM_LOOP_pro_U0_stream_out_TDEST;
wire    ap_sync_continue;
wire    ap_sync_done;
wire    ap_sync_ready;
wire    Loop_STREAM_LOOP_pro_U0_start_full_n;
wire    Loop_STREAM_LOOP_pro_U0_start_write;

fir_bundle_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_BUNDLE_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_BUNDLE_DATA_WIDTH ))
fir_bundle_s_axi_U(
    .AWVALID(s_axi_bundle_AWVALID),
    .AWREADY(s_axi_bundle_AWREADY),
    .AWADDR(s_axi_bundle_AWADDR),
    .WVALID(s_axi_bundle_WVALID),
    .WREADY(s_axi_bundle_WREADY),
    .WDATA(s_axi_bundle_WDATA),
    .WSTRB(s_axi_bundle_WSTRB),
    .ARVALID(s_axi_bundle_ARVALID),
    .ARREADY(s_axi_bundle_ARREADY),
    .ARADDR(s_axi_bundle_ARADDR),
    .RVALID(s_axi_bundle_RVALID),
    .RREADY(s_axi_bundle_RREADY),
    .RDATA(s_axi_bundle_RDATA),
    .RRESP(s_axi_bundle_RRESP),
    .BVALID(s_axi_bundle_BVALID),
    .BREADY(s_axi_bundle_BREADY),
    .BRESP(s_axi_bundle_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .coeff_0_V(coeff_0_V),
    .coeff_1_V(coeff_1_V),
    .coeff_2_V(coeff_2_V),
    .coeff_3_V(coeff_3_V),
    .coeff_4_V(coeff_4_V),
    .coeff_5_V(coeff_5_V),
    .coeff_6_V(coeff_6_V),
    .coeff_7_V(coeff_7_V),
    .coeff_8_V(coeff_8_V),
    .coeff_9_V(coeff_9_V)
);

Loop_STREAM_LOOP_pro Loop_STREAM_LOOP_pro_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_STREAM_LOOP_pro_U0_ap_start),
    .ap_done(Loop_STREAM_LOOP_pro_U0_ap_done),
    .ap_continue(Loop_STREAM_LOOP_pro_U0_ap_continue),
    .ap_idle(Loop_STREAM_LOOP_pro_U0_ap_idle),
    .ap_ready(Loop_STREAM_LOOP_pro_U0_ap_ready),
    .stream_in_TDATA(stream_in_TDATA),
    .stream_in_TVALID(stream_in_TVALID),
    .stream_in_TREADY(Loop_STREAM_LOOP_pro_U0_stream_in_TREADY),
    .stream_in_TKEEP(stream_in_TKEEP),
    .stream_in_TSTRB(stream_in_TSTRB),
    .stream_in_TUSER(stream_in_TUSER),
    .stream_in_TLAST(stream_in_TLAST),
    .stream_in_TID(stream_in_TID),
    .stream_in_TDEST(stream_in_TDEST),
    .coeff_9_V(coeff_9_V),
    .coeff_8_V(coeff_8_V),
    .coeff_7_V(coeff_7_V),
    .coeff_6_V(coeff_6_V),
    .coeff_5_V(coeff_5_V),
    .coeff_4_V(coeff_4_V),
    .coeff_3_V(coeff_3_V),
    .coeff_2_V(coeff_2_V),
    .coeff_1_V(coeff_1_V),
    .coeff_0_V(coeff_0_V),
    .stream_out_TDATA(Loop_STREAM_LOOP_pro_U0_stream_out_TDATA),
    .stream_out_TVALID(Loop_STREAM_LOOP_pro_U0_stream_out_TVALID),
    .stream_out_TREADY(stream_out_TREADY),
    .stream_out_TKEEP(Loop_STREAM_LOOP_pro_U0_stream_out_TKEEP),
    .stream_out_TSTRB(Loop_STREAM_LOOP_pro_U0_stream_out_TSTRB),
    .stream_out_TUSER(Loop_STREAM_LOOP_pro_U0_stream_out_TUSER),
    .stream_out_TLAST(Loop_STREAM_LOOP_pro_U0_stream_out_TLAST),
    .stream_out_TID(Loop_STREAM_LOOP_pro_U0_stream_out_TID),
    .stream_out_TDEST(Loop_STREAM_LOOP_pro_U0_stream_out_TDEST)
);

assign Loop_STREAM_LOOP_pro_U0_ap_continue = 1'b1;

assign Loop_STREAM_LOOP_pro_U0_ap_start = ap_start;

assign Loop_STREAM_LOOP_pro_U0_start_full_n = 1'b1;

assign Loop_STREAM_LOOP_pro_U0_start_write = 1'b0;

assign ap_done = Loop_STREAM_LOOP_pro_U0_ap_done;

assign ap_idle = Loop_STREAM_LOOP_pro_U0_ap_idle;

assign ap_ready = Loop_STREAM_LOOP_pro_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b1;

assign ap_sync_done = Loop_STREAM_LOOP_pro_U0_ap_done;

assign ap_sync_ready = Loop_STREAM_LOOP_pro_U0_ap_ready;

assign stream_in_TREADY = Loop_STREAM_LOOP_pro_U0_stream_in_TREADY;

assign stream_out_TDATA = Loop_STREAM_LOOP_pro_U0_stream_out_TDATA;

assign stream_out_TDEST = Loop_STREAM_LOOP_pro_U0_stream_out_TDEST;

assign stream_out_TID = Loop_STREAM_LOOP_pro_U0_stream_out_TID;

assign stream_out_TKEEP = Loop_STREAM_LOOP_pro_U0_stream_out_TKEEP;

assign stream_out_TLAST = Loop_STREAM_LOOP_pro_U0_stream_out_TLAST;

assign stream_out_TSTRB = Loop_STREAM_LOOP_pro_U0_stream_out_TSTRB;

assign stream_out_TUSER = Loop_STREAM_LOOP_pro_U0_stream_out_TUSER;

assign stream_out_TVALID = Loop_STREAM_LOOP_pro_U0_stream_out_TVALID;

endmodule //fir
